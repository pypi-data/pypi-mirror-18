{
    "info": {
        "termsOfService": "http://deginner.com/terms/", 
        "description": "De Shared Wallet service using bitjws", 
        "license": {
            "url": "http://creativecommons.org/licenses/by/4.0/", 
            "name": "Creative Commons 4.0 International"
        }, 
        "title": "De Shared Wallet service using bitjws", 
        "contact": {
            "url": "http://deginner.com", 
            "name": "Deginner"
        }, 
        "version": "0.0.1"
    }, 
    "paths": {
        "/network/{network}": {
            "get": {
                "responses": {
                    "default": {
                        "description": "an error", 
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }, 
                    "200": {
                        "description": "the network information", 
                        "schema": {
                            "$ref": "#/definitions/NetworkInfo"
                        }
                    }
                }, 
                "description": "Returned info is: enabled/disabled, available hot wallet balance,<br/>& the transaction fee.", 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "description": "The network name i.e. Bitcoin, Dash", 
                        "in": "path", 
                        "name": "network"
                    }
                ], 
                "produces": [
                    "application/json"
                ], 
                "summary": "Get information about the transaction network indicated.", 
                "operationId": "getinfo"
            }
        }, 
        "/search/debit": {
            "post": {
                "responses": {
                    "default": {
                        "description": "unexpected error", 
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }, 
                    "200": {
                        "description": "the User's debit(s)", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Debit"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "description": "", 
                "parameters": [
                    {
                        "required": false, 
                        "in": "body", 
                        "description": "The Debit(s) you'd like to get.", 
                        "name": "searchcd", 
                        "schema": {
                            "$ref": "#/definitions/SearchCD"
                        }
                    }
                ], 
                "summary": "Get one to ten debit(s) for a single User.", 
                "security": [
                    {
                        "kid": []
                    }, 
                    {
                        "typ": []
                    }, 
                    {
                        "alg": []
                    }
                ], 
                "operationId": "searchDebits"
            }
        }, 
        "/debit": {
            "post": {
                "responses": {
                    "default": {
                        "description": "unexpected error", 
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }, 
                    "200": {
                        "description": "The Debit record", 
                        "schema": {
                            "$ref": "#/definitions/Debit"
                        }
                    }
                }, 
                "description": "", 
                "parameters": [
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "The debit you would like to create.", 
                        "name": "debit", 
                        "schema": {
                            "$ref": "#/definitions/Debit"
                        }
                    }
                ], 
                "summary": "Create a new debit, sending tokens out of your User's account.", 
                "security": [
                    {
                        "kid": []
                    }, 
                    {
                        "typ": []
                    }, 
                    {
                        "alg": []
                    }
                ], 
                "operationId": "sendMoney"
            }
        }, 
        "/balance": {
            "get": {
                "operationId": "getBalance", 
                "description": "Currently no search parameters are supported. All balances returned.", 
                "security": [
                    {
                        "kid": []
                    }, 
                    {
                        "typ": []
                    }, 
                    {
                        "alg": []
                    }
                ], 
                "responses": {
                    "default": {
                        "description": "unexpected error", 
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }, 
                    "200": {
                        "description": "the User's balance(s)", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Balance"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "summary": "Get the latest balance(s) for a single User."
            }
        }, 
        "/user": {
            "post": {
                "responses": {
                    "default": {
                        "description": "unexpected error", 
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }, 
                    "200": {
                        "description": "user's new key", 
                        "schema": {
                            "$ref": "#/definitions/UserKey"
                        }
                    }
                }, 
                "description": "Create a User and a UserKey based on the JWS header and payload.", 
                "parameters": [
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "A new User to add", 
                        "name": "user", 
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ], 
                "summary": "Register a new User.", 
                "security": [
                    {
                        "kid": []
                    }, 
                    {
                        "typ": []
                    }, 
                    {
                        "alg": []
                    }
                ], 
                "operationId": "addUser"
            }, 
            "get": {
                "operationId": "getUserList", 
                "description": "<br/>Users may only get their own info, not others'.", 
                "security": [
                    {
                        "kid": []
                    }, 
                    {
                        "typ": []
                    }, 
                    {
                        "alg": []
                    }
                ], 
                "responses": {
                    "default": {
                        "description": "unexpected error", 
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }, 
                    "200": {
                        "description": "user response", 
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }, 
                "summary": "Get your user object."
            }
        }, 
        "/address": {
            "post": {
                "responses": {
                    "default": {
                        "description": "unexpected error", 
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }, 
                    "200": {
                        "description": "Your new address", 
                        "schema": {
                            "$ref": "#/definitions/Address"
                        }
                    }
                }, 
                "description": "", 
                "parameters": [
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "The pseudo-address you would like to create. i.e. currency and network", 
                        "name": "address", 
                        "schema": {
                            "$ref": "#/definitions/Address"
                        }
                    }
                ], 
                "summary": "Create a new address owned by your user.", 
                "security": [
                    {
                        "kid": []
                    }, 
                    {
                        "typ": []
                    }, 
                    {
                        "alg": []
                    }
                ], 
                "operationId": "createAddress"
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "unexpected error", 
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }, 
                    "200": {
                        "description": "Your new address", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Address"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "description": "", 
                "parameters": [
                    {
                        "required": false, 
                        "in": "body", 
                        "description": "The address you'd like to get info about.", 
                        "name": "address", 
                        "schema": {
                            "$ref": "#/definitions/Address"
                        }
                    }
                ], 
                "summary": "Get one or more existing address(es) owned by your user.", 
                "security": [
                    {
                        "kid": []
                    }, 
                    {
                        "typ": []
                    }, 
                    {
                        "alg": []
                    }
                ], 
                "operationId": "getAddress"
            }
        }, 
        "/search/credit": {
            "post": {
                "responses": {
                    "default": {
                        "description": "unexpected error", 
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }, 
                    "200": {
                        "description": "the User's credit(s)", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Credit"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "description": "", 
                "parameters": [
                    {
                        "required": false, 
                        "in": "body", 
                        "description": "The Credit(s) you'd like to get.", 
                        "name": "searchcd", 
                        "schema": {
                            "$ref": "#/definitions/SearchCD"
                        }
                    }
                ], 
                "summary": "Get one to ten credit(s) for a single User.", 
                "security": [
                    {
                        "kid": []
                    }, 
                    {
                        "typ": []
                    }, 
                    {
                        "alg": []
                    }
                ], 
                "operationId": "searchCredits"
            }
        }
    }, 
    "schemes": [
        "http", 
        "https"
    ], 
    "produces": [
        "application/jose"
    ], 
    "basePath": "/", 
    "securityDefinitions": {
        "alg": {
            "in": "query", 
            "type": "apiKey", 
            "description": "The signing algorithm to use i.e. \"CUSTOM-BITCOIN-SIGN\"", 
            "name": "alg"
        }, 
        "typ": {
            "in": "query", 
            "type": "apiKey", 
            "description": "The message type", 
            "name": "typ"
        }, 
        "kid": {
            "in": "query", 
            "type": "apiKey", 
            "description": "The JWS key", 
            "name": "kid"
        }
    }, 
    "host": "0.0.0.0:8002", 
    "definitions": {
        "SearchCD": {
            "title": "SearchCD", 
            "type": "object", 
            "description": "Search pattern for a Credit or Debit.", 
            "properties": {
                "currency": {
                    "type": "string", 
                    "maxLength": 4
                }, 
                "ref_id": {
                    "type": "string", 
                    "maxLength": 256
                }, 
                "id": {
                    "type": "integer", 
                    "description": "primary key"
                }, 
                "network": {
                    "type": "string", 
                    "maxLength": 64
                }, 
                "address": {
                    "type": "string", 
                    "maxLength": 64
                }
            }
        }, 
        "Balance": {
            "title": "Balance", 
            "required": [
                "total", 
                "available", 
                "currency"
            ], 
            "type": "object", 
            "description": "A user's balance in a single currency. Only the latest record is valid.", 
            "properties": {
                "available": {
                    "type": "number"
                }, 
                "reference": {
                    "type": "string", 
                    "maxLength": 256
                }, 
                "currency": {
                    "type": "string", 
                    "maxLength": 4
                }, 
                "user": {
                    "$ref": "#/definitions/User"
                }, 
                "time": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "total": {
                    "type": "number"
                }, 
                "id": {
                    "type": "integer", 
                    "description": "primary key"
                }
            }
        }, 
        "NetworkInfo": {
            "title": "NetworkInfo", 
            "type": "object", 
            "description": "Information about a Transaction Network. i.e. Bitcoin, Dash", 
            "properties": {
                "available": {
                    "type": "number", 
                    "description": "The available wallet balance as an int"
                }, 
                "isenabled": {
                    "type": "boolean", 
                    "description": "True only if the network is enabled."
                }, 
                "fee": {
                    "type": "number", 
                    "description": "The transaction fee as an int"
                }
            }
        }, 
        "Address": {
            "title": "Address", 
            "required": [
                "currency", 
                "network"
            ], 
            "type": "object", 
            "description": "A payment network Address or account number.", 
            "properties": {
                "network": {
                    "type": "string", 
                    "maxLength": 64
                }, 
                "currency": {
                    "type": "string", 
                    "maxLength": 4
                }, 
                "address_state": {
                    "enum": [
                        "pending", 
                        "active", 
                        "blocked"
                    ], 
                    "type": "string", 
                    "maxLength": 7
                }, 
                "user": {
                    "$ref": "#/definitions/User"
                }, 
                "address": {
                    "type": "string", 
                    "maxLength": 64
                }, 
                "id": {
                    "type": "integer", 
                    "description": "primary key"
                }
            }
        }, 
        "Credit": {
            "title": "Credit", 
            "required": [
                "id", 
                "amount", 
                "address", 
                "currency", 
                "network", 
                "transaction_state",
                "ref_id"
            ], 
            "type": "object", 
            "description": "A Credit, which adds tokens to a User's Balance.", 
            "properties": {
                "network": {
                    "type": "string", 
                    "maxLength": 64
                }, 
                "reference": {
                    "type": "string", 
                    "maxLength": 256
                }, 
                "amount": {
                    "type": "number"
                }, 
                "ref_id": {
                    "type": "string", 
                    "maxLength": 256
                }, 
                "currency": {
                    "type": "string", 
                    "maxLength": 4
                }, 
                "transaction_state": {
                    "enum": [
                        "unconfirmed", 
                        "complete", 
                        "error"
                    ], 
                    "type": "string", 
                    "maxLength": 11
                }, 
                "user": {
                    "$ref": "#/definitions/User"
                }, 
                "address": {
                    "type": "string", 
                    "maxLength": 64
                }, 
                "id": {
                    "type": "integer", 
                    "description": "primary key"
                }
            }
        }, 
        "User": {
            "properties": {
                "username": {
                    "type": "string", 
                    "maxLength": 37
                }, 
                "salt": {
                    "type": "string", 
                    "maxLength": 12
                }, 
                "id": {
                    "type": "integer", 
                    "description": "primary key"
                }, 
                "createtime": {
                    "type": "string", 
                    "format": "date-time"
                }
            }, 
            "required": [
                "username"
            ], 
            "type": "object", 
            "description": "A User", 
            "title": "User"
        }, 
        "Debit": {
            "title": "Debit", 
            "required": [
                "amount", 
                "address", 
                "currency", 
                "network"
            ], 
            "type": "object", 
            "description": "A Debit, which subtracts tokens from a User's Balance.", 
            "properties": {
                "network": {
                    "type": "string", 
                    "maxLength": 64
                }, 
                "reference": {
                    "type": "string", 
                    "maxLength": 256
                }, 
                "amount": {
                    "type": "number"
                }, 
                "ref_id": {
                    "type": "string", 
                    "maxLength": 256
                }, 
                "currency": {
                    "type": "string", 
                    "maxLength": 4
                }, 
                "transaction_state": {
                    "enum": [
                        "unconfirmed", 
                        "complete", 
                        "error"
                    ], 
                    "type": "string", 
                    "maxLength": 11
                }, 
                "user": {
                    "$ref": "#/definitions/User"
                }, 
                "address": {
                    "type": "string", 
                    "maxLength": 64
                }, 
                "id": {
                    "type": "integer", 
                    "description": "primary key"
                }
            }
        }, 
        "UserKey": {
            "title": "UserKey", 
            "required": [
                "key", 
                "keytype"
            ], 
            "type": "object", 
            "properties": {
                "deactivated_at": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "keytype": {
                    "enum": [
                        "public", 
                        "tfa"
                    ], 
                    "type": "string", 
                    "maxLength": 6
                }, 
                "permissionbits": {
                    "type": "string"
                }, 
                "user": {
                    "$ref": "#/definitions/User"
                }, 
                "key": {
                    "type": "string", 
                    "maxLength": 36
                }, 
                "id": {
                    "type": "integer", 
                    "description": "primary key"
                }, 
                "last_nonce": {
                    "type": "integer"
                }, 
                "createtime": {
                    "type": "string", 
                    "format": "date-time"
                }
            }, 
            "description": "A User's API key"
        }, 
        "errorModel": {
            "required": [
                "code", 
                "message"
            ], 
            "type": "object", 
            "properties": {
                "message": {
                    "type": "string"
                }, 
                "code": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }
    }, 
    "security": [
        {
            "kid": []
        }, 
        {
            "typ": []
        }, 
        {
            "alg": []
        }
    ], 
    "swagger": "2.0", 
    "consumes": [
        "application/jose"
    ]
}

