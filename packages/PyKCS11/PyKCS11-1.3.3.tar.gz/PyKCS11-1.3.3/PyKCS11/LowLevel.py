# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.7
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_LowLevel', [dirname(__file__)])
        except ImportError:
            import _LowLevel
            return _LowLevel
        if fp is not None:
            try:
                _mod = imp.load_module('_LowLevel', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _LowLevel = swig_import_helper()
    del swig_import_helper
else:
    import _LowLevel
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def cdata(ptr, nelements=1):
    return _LowLevel.cdata(ptr, nelements)
cdata = _LowLevel.cdata

def memmove(data, indata):
    return _LowLevel.memmove(data, indata)
memmove = _LowLevel.memmove
class SwigPyIterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SwigPyIterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SwigPyIterator, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _LowLevel.delete_SwigPyIterator
    __del__ = lambda self: None

    def value(self):
        return _LowLevel.SwigPyIterator_value(self)

    def incr(self, n=1):
        return _LowLevel.SwigPyIterator_incr(self, n)

    def decr(self, n=1):
        return _LowLevel.SwigPyIterator_decr(self, n)

    def distance(self, x):
        return _LowLevel.SwigPyIterator_distance(self, x)

    def equal(self, x):
        return _LowLevel.SwigPyIterator_equal(self, x)

    def copy(self):
        return _LowLevel.SwigPyIterator_copy(self)

    def next(self):
        return _LowLevel.SwigPyIterator_next(self)

    def __next__(self):
        return _LowLevel.SwigPyIterator___next__(self)

    def previous(self):
        return _LowLevel.SwigPyIterator_previous(self)

    def advance(self, n):
        return _LowLevel.SwigPyIterator_advance(self, n)

    def __eq__(self, x):
        return _LowLevel.SwigPyIterator___eq__(self, x)

    def __ne__(self, x):
        return _LowLevel.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n):
        return _LowLevel.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n):
        return _LowLevel.SwigPyIterator___isub__(self, n)

    def __add__(self, n):
        return _LowLevel.SwigPyIterator___add__(self, n)

    def __sub__(self, *args):
        return _LowLevel.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self
SwigPyIterator_swigregister = _LowLevel.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)

class ckintlist(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ckintlist, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ckintlist, name)
    __repr__ = _swig_repr

    def iterator(self):
        return _LowLevel.ckintlist_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        return _LowLevel.ckintlist___nonzero__(self)

    def __bool__(self):
        return _LowLevel.ckintlist___bool__(self)

    def __len__(self):
        return _LowLevel.ckintlist___len__(self)

    def pop(self):
        return _LowLevel.ckintlist_pop(self)

    def __getslice__(self, i, j):
        return _LowLevel.ckintlist___getslice__(self, i, j)

    def __setslice__(self, *args):
        return _LowLevel.ckintlist___setslice__(self, *args)

    def __delslice__(self, i, j):
        return _LowLevel.ckintlist___delslice__(self, i, j)

    def __delitem__(self, *args):
        return _LowLevel.ckintlist___delitem__(self, *args)

    def __getitem__(self, *args):
        return _LowLevel.ckintlist___getitem__(self, *args)

    def __setitem__(self, *args):
        return _LowLevel.ckintlist___setitem__(self, *args)

    def append(self, x):
        return _LowLevel.ckintlist_append(self, x)

    def empty(self):
        return _LowLevel.ckintlist_empty(self)

    def size(self):
        return _LowLevel.ckintlist_size(self)

    def clear(self):
        return _LowLevel.ckintlist_clear(self)

    def swap(self, v):
        return _LowLevel.ckintlist_swap(self, v)

    def get_allocator(self):
        return _LowLevel.ckintlist_get_allocator(self)

    def begin(self):
        return _LowLevel.ckintlist_begin(self)

    def end(self):
        return _LowLevel.ckintlist_end(self)

    def rbegin(self):
        return _LowLevel.ckintlist_rbegin(self)

    def rend(self):
        return _LowLevel.ckintlist_rend(self)

    def pop_back(self):
        return _LowLevel.ckintlist_pop_back(self)

    def erase(self, *args):
        return _LowLevel.ckintlist_erase(self, *args)

    def __init__(self, *args):
        this = _LowLevel.new_ckintlist(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def push_back(self, x):
        return _LowLevel.ckintlist_push_back(self, x)

    def front(self):
        return _LowLevel.ckintlist_front(self)

    def back(self):
        return _LowLevel.ckintlist_back(self)

    def assign(self, n, x):
        return _LowLevel.ckintlist_assign(self, n, x)

    def resize(self, *args):
        return _LowLevel.ckintlist_resize(self, *args)

    def insert(self, *args):
        return _LowLevel.ckintlist_insert(self, *args)

    def reserve(self, n):
        return _LowLevel.ckintlist_reserve(self, n)

    def capacity(self):
        return _LowLevel.ckintlist_capacity(self)
    __swig_destroy__ = _LowLevel.delete_ckintlist
    __del__ = lambda self: None
ckintlist_swigregister = _LowLevel.ckintlist_swigregister
ckintlist_swigregister(ckintlist)

class ckbytelist(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ckbytelist, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ckbytelist, name)
    __repr__ = _swig_repr

    def iterator(self):
        return _LowLevel.ckbytelist_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        return _LowLevel.ckbytelist___nonzero__(self)

    def __bool__(self):
        return _LowLevel.ckbytelist___bool__(self)

    def __len__(self):
        return _LowLevel.ckbytelist___len__(self)

    def pop(self):
        return _LowLevel.ckbytelist_pop(self)

    def __getslice__(self, i, j):
        return _LowLevel.ckbytelist___getslice__(self, i, j)

    def __setslice__(self, *args):
        return _LowLevel.ckbytelist___setslice__(self, *args)

    def __delslice__(self, i, j):
        return _LowLevel.ckbytelist___delslice__(self, i, j)

    def __delitem__(self, *args):
        return _LowLevel.ckbytelist___delitem__(self, *args)

    def __getitem__(self, *args):
        return _LowLevel.ckbytelist___getitem__(self, *args)

    def __setitem__(self, *args):
        return _LowLevel.ckbytelist___setitem__(self, *args)

    def append(self, x):
        return _LowLevel.ckbytelist_append(self, x)

    def empty(self):
        return _LowLevel.ckbytelist_empty(self)

    def size(self):
        return _LowLevel.ckbytelist_size(self)

    def clear(self):
        return _LowLevel.ckbytelist_clear(self)

    def swap(self, v):
        return _LowLevel.ckbytelist_swap(self, v)

    def get_allocator(self):
        return _LowLevel.ckbytelist_get_allocator(self)

    def begin(self):
        return _LowLevel.ckbytelist_begin(self)

    def end(self):
        return _LowLevel.ckbytelist_end(self)

    def rbegin(self):
        return _LowLevel.ckbytelist_rbegin(self)

    def rend(self):
        return _LowLevel.ckbytelist_rend(self)

    def pop_back(self):
        return _LowLevel.ckbytelist_pop_back(self)

    def erase(self, *args):
        return _LowLevel.ckbytelist_erase(self, *args)

    def __init__(self, *args):
        this = _LowLevel.new_ckbytelist(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def push_back(self, x):
        return _LowLevel.ckbytelist_push_back(self, x)

    def front(self):
        return _LowLevel.ckbytelist_front(self)

    def back(self):
        return _LowLevel.ckbytelist_back(self)

    def assign(self, n, x):
        return _LowLevel.ckbytelist_assign(self, n, x)

    def resize(self, *args):
        return _LowLevel.ckbytelist_resize(self, *args)

    def insert(self, *args):
        return _LowLevel.ckbytelist_insert(self, *args)

    def reserve(self, n):
        return _LowLevel.ckbytelist_reserve(self, n)

    def capacity(self):
        return _LowLevel.ckbytelist_capacity(self)
    __swig_destroy__ = _LowLevel.delete_ckbytelist
    __del__ = lambda self: None
ckbytelist_swigregister = _LowLevel.ckbytelist_swigregister
ckbytelist_swigregister(ckbytelist)

class ckattrlist(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ckattrlist, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ckattrlist, name)
    __repr__ = _swig_repr

    def iterator(self):
        return _LowLevel.ckattrlist_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        return _LowLevel.ckattrlist___nonzero__(self)

    def __bool__(self):
        return _LowLevel.ckattrlist___bool__(self)

    def __len__(self):
        return _LowLevel.ckattrlist___len__(self)

    def pop(self):
        return _LowLevel.ckattrlist_pop(self)

    def __getslice__(self, i, j):
        return _LowLevel.ckattrlist___getslice__(self, i, j)

    def __setslice__(self, *args):
        return _LowLevel.ckattrlist___setslice__(self, *args)

    def __delslice__(self, i, j):
        return _LowLevel.ckattrlist___delslice__(self, i, j)

    def __delitem__(self, *args):
        return _LowLevel.ckattrlist___delitem__(self, *args)

    def __getitem__(self, *args):
        return _LowLevel.ckattrlist___getitem__(self, *args)

    def __setitem__(self, *args):
        return _LowLevel.ckattrlist___setitem__(self, *args)

    def append(self, x):
        return _LowLevel.ckattrlist_append(self, x)

    def empty(self):
        return _LowLevel.ckattrlist_empty(self)

    def size(self):
        return _LowLevel.ckattrlist_size(self)

    def clear(self):
        return _LowLevel.ckattrlist_clear(self)

    def swap(self, v):
        return _LowLevel.ckattrlist_swap(self, v)

    def get_allocator(self):
        return _LowLevel.ckattrlist_get_allocator(self)

    def begin(self):
        return _LowLevel.ckattrlist_begin(self)

    def end(self):
        return _LowLevel.ckattrlist_end(self)

    def rbegin(self):
        return _LowLevel.ckattrlist_rbegin(self)

    def rend(self):
        return _LowLevel.ckattrlist_rend(self)

    def pop_back(self):
        return _LowLevel.ckattrlist_pop_back(self)

    def erase(self, *args):
        return _LowLevel.ckattrlist_erase(self, *args)

    def __init__(self, *args):
        this = _LowLevel.new_ckattrlist(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def push_back(self, x):
        return _LowLevel.ckattrlist_push_back(self, x)

    def front(self):
        return _LowLevel.ckattrlist_front(self)

    def back(self):
        return _LowLevel.ckattrlist_back(self)

    def assign(self, n, x):
        return _LowLevel.ckattrlist_assign(self, n, x)

    def resize(self, *args):
        return _LowLevel.ckattrlist_resize(self, *args)

    def insert(self, *args):
        return _LowLevel.ckattrlist_insert(self, *args)

    def reserve(self, n):
        return _LowLevel.ckattrlist_reserve(self, n)

    def capacity(self):
        return _LowLevel.ckattrlist_capacity(self)
    __swig_destroy__ = _LowLevel.delete_ckattrlist
    __del__ = lambda self: None
ckattrlist_swigregister = _LowLevel.ckattrlist_swigregister
ckattrlist_swigregister(ckattrlist)

class ckobjlist(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ckobjlist, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ckobjlist, name)
    __repr__ = _swig_repr

    def iterator(self):
        return _LowLevel.ckobjlist_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        return _LowLevel.ckobjlist___nonzero__(self)

    def __bool__(self):
        return _LowLevel.ckobjlist___bool__(self)

    def __len__(self):
        return _LowLevel.ckobjlist___len__(self)

    def pop(self):
        return _LowLevel.ckobjlist_pop(self)

    def __getslice__(self, i, j):
        return _LowLevel.ckobjlist___getslice__(self, i, j)

    def __setslice__(self, *args):
        return _LowLevel.ckobjlist___setslice__(self, *args)

    def __delslice__(self, i, j):
        return _LowLevel.ckobjlist___delslice__(self, i, j)

    def __delitem__(self, *args):
        return _LowLevel.ckobjlist___delitem__(self, *args)

    def __getitem__(self, *args):
        return _LowLevel.ckobjlist___getitem__(self, *args)

    def __setitem__(self, *args):
        return _LowLevel.ckobjlist___setitem__(self, *args)

    def append(self, x):
        return _LowLevel.ckobjlist_append(self, x)

    def empty(self):
        return _LowLevel.ckobjlist_empty(self)

    def size(self):
        return _LowLevel.ckobjlist_size(self)

    def clear(self):
        return _LowLevel.ckobjlist_clear(self)

    def swap(self, v):
        return _LowLevel.ckobjlist_swap(self, v)

    def get_allocator(self):
        return _LowLevel.ckobjlist_get_allocator(self)

    def begin(self):
        return _LowLevel.ckobjlist_begin(self)

    def end(self):
        return _LowLevel.ckobjlist_end(self)

    def rbegin(self):
        return _LowLevel.ckobjlist_rbegin(self)

    def rend(self):
        return _LowLevel.ckobjlist_rend(self)

    def pop_back(self):
        return _LowLevel.ckobjlist_pop_back(self)

    def erase(self, *args):
        return _LowLevel.ckobjlist_erase(self, *args)

    def __init__(self, *args):
        this = _LowLevel.new_ckobjlist(*args)
        try:
            self.this.append(this)
        except:
            self.this = this

    def push_back(self, x):
        return _LowLevel.ckobjlist_push_back(self, x)

    def front(self):
        return _LowLevel.ckobjlist_front(self)

    def back(self):
        return _LowLevel.ckobjlist_back(self)

    def assign(self, n, x):
        return _LowLevel.ckobjlist_assign(self, n, x)

    def resize(self, *args):
        return _LowLevel.ckobjlist_resize(self, *args)

    def insert(self, *args):
        return _LowLevel.ckobjlist_insert(self, *args)

    def reserve(self, n):
        return _LowLevel.ckobjlist_reserve(self, n)

    def capacity(self):
        return _LowLevel.ckobjlist_capacity(self)
    __swig_destroy__ = _LowLevel.delete_ckobjlist
    __del__ = lambda self: None
ckobjlist_swigregister = _LowLevel.ckobjlist_swigregister
ckobjlist_swigregister(ckobjlist)

class CK_SESSION_HANDLE(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CK_SESSION_HANDLE, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CK_SESSION_HANDLE, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _LowLevel.new_CK_SESSION_HANDLE()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _LowLevel.delete_CK_SESSION_HANDLE
    __del__ = lambda self: None

    def assign(self, value):
        return _LowLevel.CK_SESSION_HANDLE_assign(self, value)

    def value(self):
        return _LowLevel.CK_SESSION_HANDLE_value(self)

    def cast(self):
        return _LowLevel.CK_SESSION_HANDLE_cast(self)
    __swig_getmethods__["frompointer"] = lambda x: _LowLevel.CK_SESSION_HANDLE_frompointer
    if _newclass:
        frompointer = staticmethod(_LowLevel.CK_SESSION_HANDLE_frompointer)
CK_SESSION_HANDLE_swigregister = _LowLevel.CK_SESSION_HANDLE_swigregister
CK_SESSION_HANDLE_swigregister(CK_SESSION_HANDLE)

def CK_SESSION_HANDLE_frompointer(t):
    return _LowLevel.CK_SESSION_HANDLE_frompointer(t)
CK_SESSION_HANDLE_frompointer = _LowLevel.CK_SESSION_HANDLE_frompointer

class CK_OBJECT_HANDLE(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CK_OBJECT_HANDLE, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CK_OBJECT_HANDLE, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _LowLevel.new_CK_OBJECT_HANDLE()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _LowLevel.delete_CK_OBJECT_HANDLE
    __del__ = lambda self: None

    def assign(self, value):
        return _LowLevel.CK_OBJECT_HANDLE_assign(self, value)

    def value(self):
        return _LowLevel.CK_OBJECT_HANDLE_value(self)

    def cast(self):
        return _LowLevel.CK_OBJECT_HANDLE_cast(self)
    __swig_getmethods__["frompointer"] = lambda x: _LowLevel.CK_OBJECT_HANDLE_frompointer
    if _newclass:
        frompointer = staticmethod(_LowLevel.CK_OBJECT_HANDLE_frompointer)
CK_OBJECT_HANDLE_swigregister = _LowLevel.CK_OBJECT_HANDLE_swigregister
CK_OBJECT_HANDLE_swigregister(CK_OBJECT_HANDLE)

def CK_OBJECT_HANDLE_frompointer(t):
    return _LowLevel.CK_OBJECT_HANDLE_frompointer(t)
CK_OBJECT_HANDLE_frompointer = _LowLevel.CK_OBJECT_HANDLE_frompointer

class CK_VERSION(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CK_VERSION, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CK_VERSION, name)
    __repr__ = _swig_repr
    __swig_getmethods__["major"] = _LowLevel.CK_VERSION_major_get
    if _newclass:
        major = _swig_property(_LowLevel.CK_VERSION_major_get)
    __swig_getmethods__["minor"] = _LowLevel.CK_VERSION_minor_get
    if _newclass:
        minor = _swig_property(_LowLevel.CK_VERSION_minor_get)

    def __init__(self):
        this = _LowLevel.new_CK_VERSION()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _LowLevel.delete_CK_VERSION
    __del__ = lambda self: None
CK_VERSION_swigregister = _LowLevel.CK_VERSION_swigregister
CK_VERSION_swigregister(CK_VERSION)

class CK_INFO(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CK_INFO, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CK_INFO, name)
    __repr__ = _swig_repr
    __swig_getmethods__["cryptokiVersion"] = _LowLevel.CK_INFO_cryptokiVersion_get
    if _newclass:
        cryptokiVersion = _swig_property(_LowLevel.CK_INFO_cryptokiVersion_get)
    __swig_getmethods__["manufacturerID"] = _LowLevel.CK_INFO_manufacturerID_get
    if _newclass:
        manufacturerID = _swig_property(_LowLevel.CK_INFO_manufacturerID_get)
    __swig_getmethods__["flags"] = _LowLevel.CK_INFO_flags_get
    if _newclass:
        flags = _swig_property(_LowLevel.CK_INFO_flags_get)
    __swig_getmethods__["libraryDescription"] = _LowLevel.CK_INFO_libraryDescription_get
    if _newclass:
        libraryDescription = _swig_property(_LowLevel.CK_INFO_libraryDescription_get)
    __swig_getmethods__["libraryVersion"] = _LowLevel.CK_INFO_libraryVersion_get
    if _newclass:
        libraryVersion = _swig_property(_LowLevel.CK_INFO_libraryVersion_get)

    def GetManufacturerID(self):
        return _LowLevel.CK_INFO_GetManufacturerID(self)

    def GetLibraryDescription(self):
        return _LowLevel.CK_INFO_GetLibraryDescription(self)

    def GetLibraryVersion(self):
        return _LowLevel.CK_INFO_GetLibraryVersion(self)

    def __init__(self):
        this = _LowLevel.new_CK_INFO()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _LowLevel.delete_CK_INFO
    __del__ = lambda self: None
CK_INFO_swigregister = _LowLevel.CK_INFO_swigregister
CK_INFO_swigregister(CK_INFO)

class CK_SLOT_INFO(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CK_SLOT_INFO, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CK_SLOT_INFO, name)
    __repr__ = _swig_repr
    __swig_getmethods__["flags"] = _LowLevel.CK_SLOT_INFO_flags_get
    if _newclass:
        flags = _swig_property(_LowLevel.CK_SLOT_INFO_flags_get)
    __swig_getmethods__["hardwareVersion"] = _LowLevel.CK_SLOT_INFO_hardwareVersion_get
    if _newclass:
        hardwareVersion = _swig_property(_LowLevel.CK_SLOT_INFO_hardwareVersion_get)
    __swig_getmethods__["firmwareVersion"] = _LowLevel.CK_SLOT_INFO_firmwareVersion_get
    if _newclass:
        firmwareVersion = _swig_property(_LowLevel.CK_SLOT_INFO_firmwareVersion_get)

    def GetManufacturerID(self):
        return _LowLevel.CK_SLOT_INFO_GetManufacturerID(self)

    def GetSlotDescription(self):
        return _LowLevel.CK_SLOT_INFO_GetSlotDescription(self)

    def GetHardwareVersion(self):
        return _LowLevel.CK_SLOT_INFO_GetHardwareVersion(self)

    def GetFirmwareVersion(self):
        return _LowLevel.CK_SLOT_INFO_GetFirmwareVersion(self)

    def __init__(self):
        this = _LowLevel.new_CK_SLOT_INFO()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _LowLevel.delete_CK_SLOT_INFO
    __del__ = lambda self: None
CK_SLOT_INFO_swigregister = _LowLevel.CK_SLOT_INFO_swigregister
CK_SLOT_INFO_swigregister(CK_SLOT_INFO)

class CK_TOKEN_INFO(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CK_TOKEN_INFO, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CK_TOKEN_INFO, name)
    __repr__ = _swig_repr
    __swig_getmethods__["flags"] = _LowLevel.CK_TOKEN_INFO_flags_get
    if _newclass:
        flags = _swig_property(_LowLevel.CK_TOKEN_INFO_flags_get)
    __swig_getmethods__["ulMaxSessionCount"] = _LowLevel.CK_TOKEN_INFO_ulMaxSessionCount_get
    if _newclass:
        ulMaxSessionCount = _swig_property(_LowLevel.CK_TOKEN_INFO_ulMaxSessionCount_get)
    __swig_getmethods__["ulSessionCount"] = _LowLevel.CK_TOKEN_INFO_ulSessionCount_get
    if _newclass:
        ulSessionCount = _swig_property(_LowLevel.CK_TOKEN_INFO_ulSessionCount_get)
    __swig_getmethods__["ulMaxRwSessionCount"] = _LowLevel.CK_TOKEN_INFO_ulMaxRwSessionCount_get
    if _newclass:
        ulMaxRwSessionCount = _swig_property(_LowLevel.CK_TOKEN_INFO_ulMaxRwSessionCount_get)
    __swig_getmethods__["ulRwSessionCount"] = _LowLevel.CK_TOKEN_INFO_ulRwSessionCount_get
    if _newclass:
        ulRwSessionCount = _swig_property(_LowLevel.CK_TOKEN_INFO_ulRwSessionCount_get)
    __swig_getmethods__["ulMaxPinLen"] = _LowLevel.CK_TOKEN_INFO_ulMaxPinLen_get
    if _newclass:
        ulMaxPinLen = _swig_property(_LowLevel.CK_TOKEN_INFO_ulMaxPinLen_get)
    __swig_getmethods__["ulMinPinLen"] = _LowLevel.CK_TOKEN_INFO_ulMinPinLen_get
    if _newclass:
        ulMinPinLen = _swig_property(_LowLevel.CK_TOKEN_INFO_ulMinPinLen_get)
    __swig_getmethods__["ulTotalPublicMemory"] = _LowLevel.CK_TOKEN_INFO_ulTotalPublicMemory_get
    if _newclass:
        ulTotalPublicMemory = _swig_property(_LowLevel.CK_TOKEN_INFO_ulTotalPublicMemory_get)
    __swig_getmethods__["ulFreePublicMemory"] = _LowLevel.CK_TOKEN_INFO_ulFreePublicMemory_get
    if _newclass:
        ulFreePublicMemory = _swig_property(_LowLevel.CK_TOKEN_INFO_ulFreePublicMemory_get)
    __swig_getmethods__["ulTotalPrivateMemory"] = _LowLevel.CK_TOKEN_INFO_ulTotalPrivateMemory_get
    if _newclass:
        ulTotalPrivateMemory = _swig_property(_LowLevel.CK_TOKEN_INFO_ulTotalPrivateMemory_get)
    __swig_getmethods__["ulFreePrivateMemory"] = _LowLevel.CK_TOKEN_INFO_ulFreePrivateMemory_get
    if _newclass:
        ulFreePrivateMemory = _swig_property(_LowLevel.CK_TOKEN_INFO_ulFreePrivateMemory_get)
    __swig_getmethods__["hardwareVersion"] = _LowLevel.CK_TOKEN_INFO_hardwareVersion_get
    if _newclass:
        hardwareVersion = _swig_property(_LowLevel.CK_TOKEN_INFO_hardwareVersion_get)
    __swig_getmethods__["firmwareVersion"] = _LowLevel.CK_TOKEN_INFO_firmwareVersion_get
    if _newclass:
        firmwareVersion = _swig_property(_LowLevel.CK_TOKEN_INFO_firmwareVersion_get)

    def GetLabel(self):
        return _LowLevel.CK_TOKEN_INFO_GetLabel(self)

    def GetManufacturerID(self):
        return _LowLevel.CK_TOKEN_INFO_GetManufacturerID(self)

    def GetModel(self):
        return _LowLevel.CK_TOKEN_INFO_GetModel(self)

    def GetSerialNumber(self):
        return _LowLevel.CK_TOKEN_INFO_GetSerialNumber(self)

    def GetFirmwareVersion(self):
        return _LowLevel.CK_TOKEN_INFO_GetFirmwareVersion(self)

    def GetUtcTime(self):
        return _LowLevel.CK_TOKEN_INFO_GetUtcTime(self)

    def __init__(self):
        this = _LowLevel.new_CK_TOKEN_INFO()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _LowLevel.delete_CK_TOKEN_INFO
    __del__ = lambda self: None
CK_TOKEN_INFO_swigregister = _LowLevel.CK_TOKEN_INFO_swigregister
CK_TOKEN_INFO_swigregister(CK_TOKEN_INFO)

class CK_SESSION_INFO(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CK_SESSION_INFO, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CK_SESSION_INFO, name)
    __repr__ = _swig_repr
    __swig_getmethods__["slotID"] = _LowLevel.CK_SESSION_INFO_slotID_get
    if _newclass:
        slotID = _swig_property(_LowLevel.CK_SESSION_INFO_slotID_get)
    __swig_getmethods__["state"] = _LowLevel.CK_SESSION_INFO_state_get
    if _newclass:
        state = _swig_property(_LowLevel.CK_SESSION_INFO_state_get)
    __swig_getmethods__["flags"] = _LowLevel.CK_SESSION_INFO_flags_get
    if _newclass:
        flags = _swig_property(_LowLevel.CK_SESSION_INFO_flags_get)
    __swig_getmethods__["ulDeviceError"] = _LowLevel.CK_SESSION_INFO_ulDeviceError_get
    if _newclass:
        ulDeviceError = _swig_property(_LowLevel.CK_SESSION_INFO_ulDeviceError_get)

    def __init__(self):
        this = _LowLevel.new_CK_SESSION_INFO()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _LowLevel.delete_CK_SESSION_INFO
    __del__ = lambda self: None
CK_SESSION_INFO_swigregister = _LowLevel.CK_SESSION_INFO_swigregister
CK_SESSION_INFO_swigregister(CK_SESSION_INFO)

class CK_DATE(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CK_DATE, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CK_DATE, name)
    __repr__ = _swig_repr

    def GetYear(self):
        return _LowLevel.CK_DATE_GetYear(self)

    def GetMonth(self):
        return _LowLevel.CK_DATE_GetMonth(self)

    def GetDay(self):
        return _LowLevel.CK_DATE_GetDay(self)

    def __init__(self):
        this = _LowLevel.new_CK_DATE()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _LowLevel.delete_CK_DATE
    __del__ = lambda self: None
CK_DATE_swigregister = _LowLevel.CK_DATE_swigregister
CK_DATE_swigregister(CK_DATE)

class CK_MECHANISM(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CK_MECHANISM, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CK_MECHANISM, name)
    __repr__ = _swig_repr
    __swig_setmethods__["mechanism"] = _LowLevel.CK_MECHANISM_mechanism_set
    __swig_getmethods__["mechanism"] = _LowLevel.CK_MECHANISM_mechanism_get
    if _newclass:
        mechanism = _swig_property(_LowLevel.CK_MECHANISM_mechanism_get, _LowLevel.CK_MECHANISM_mechanism_set)
    __swig_setmethods__["pParameter"] = _LowLevel.CK_MECHANISM_pParameter_set
    __swig_getmethods__["pParameter"] = _LowLevel.CK_MECHANISM_pParameter_get
    if _newclass:
        pParameter = _swig_property(_LowLevel.CK_MECHANISM_pParameter_get, _LowLevel.CK_MECHANISM_pParameter_set)
    __swig_setmethods__["ulParameterLen"] = _LowLevel.CK_MECHANISM_ulParameterLen_set
    __swig_getmethods__["ulParameterLen"] = _LowLevel.CK_MECHANISM_ulParameterLen_get
    if _newclass:
        ulParameterLen = _swig_property(_LowLevel.CK_MECHANISM_ulParameterLen_get, _LowLevel.CK_MECHANISM_ulParameterLen_set)

    def __init__(self):
        this = _LowLevel.new_CK_MECHANISM()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _LowLevel.delete_CK_MECHANISM
    __del__ = lambda self: None
CK_MECHANISM_swigregister = _LowLevel.CK_MECHANISM_swigregister
CK_MECHANISM_swigregister(CK_MECHANISM)

class CK_MECHANISM_INFO(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CK_MECHANISM_INFO, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CK_MECHANISM_INFO, name)
    __repr__ = _swig_repr
    __swig_getmethods__["ulMinKeySize"] = _LowLevel.CK_MECHANISM_INFO_ulMinKeySize_get
    if _newclass:
        ulMinKeySize = _swig_property(_LowLevel.CK_MECHANISM_INFO_ulMinKeySize_get)
    __swig_getmethods__["ulMaxKeySize"] = _LowLevel.CK_MECHANISM_INFO_ulMaxKeySize_get
    if _newclass:
        ulMaxKeySize = _swig_property(_LowLevel.CK_MECHANISM_INFO_ulMaxKeySize_get)
    __swig_getmethods__["flags"] = _LowLevel.CK_MECHANISM_INFO_flags_get
    if _newclass:
        flags = _swig_property(_LowLevel.CK_MECHANISM_INFO_flags_get)

    def __init__(self):
        this = _LowLevel.new_CK_MECHANISM_INFO()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _LowLevel.delete_CK_MECHANISM_INFO
    __del__ = lambda self: None
CK_MECHANISM_INFO_swigregister = _LowLevel.CK_MECHANISM_INFO_swigregister
CK_MECHANISM_INFO_swigregister(CK_MECHANISM_INFO)


_LowLevel.FALSE_swigconstant(_LowLevel)
FALSE = _LowLevel.FALSE

_LowLevel.TRUE_swigconstant(_LowLevel)
TRUE = _LowLevel.TRUE

_LowLevel.CK_TRUE_swigconstant(_LowLevel)
CK_TRUE = _LowLevel.CK_TRUE

_LowLevel.CK_FALSE_swigconstant(_LowLevel)
CK_FALSE = _LowLevel.CK_FALSE

_LowLevel.CK_UNAVAILABLE_INFORMATION_swigconstant(_LowLevel)
CK_UNAVAILABLE_INFORMATION = _LowLevel.CK_UNAVAILABLE_INFORMATION

_LowLevel.CK_EFFECTIVELY_INFINITE_swigconstant(_LowLevel)
CK_EFFECTIVELY_INFINITE = _LowLevel.CK_EFFECTIVELY_INFINITE

_LowLevel.CK_INVALID_HANDLE_swigconstant(_LowLevel)
CK_INVALID_HANDLE = _LowLevel.CK_INVALID_HANDLE

_LowLevel.CKN_SURRENDER_swigconstant(_LowLevel)
CKN_SURRENDER = _LowLevel.CKN_SURRENDER

_LowLevel.CKF_TOKEN_PRESENT_swigconstant(_LowLevel)
CKF_TOKEN_PRESENT = _LowLevel.CKF_TOKEN_PRESENT

_LowLevel.CKF_REMOVABLE_DEVICE_swigconstant(_LowLevel)
CKF_REMOVABLE_DEVICE = _LowLevel.CKF_REMOVABLE_DEVICE

_LowLevel.CKF_HW_SLOT_swigconstant(_LowLevel)
CKF_HW_SLOT = _LowLevel.CKF_HW_SLOT

_LowLevel.CKF_RNG_swigconstant(_LowLevel)
CKF_RNG = _LowLevel.CKF_RNG

_LowLevel.CKF_WRITE_PROTECTED_swigconstant(_LowLevel)
CKF_WRITE_PROTECTED = _LowLevel.CKF_WRITE_PROTECTED

_LowLevel.CKF_LOGIN_REQUIRED_swigconstant(_LowLevel)
CKF_LOGIN_REQUIRED = _LowLevel.CKF_LOGIN_REQUIRED

_LowLevel.CKF_USER_PIN_INITIALIZED_swigconstant(_LowLevel)
CKF_USER_PIN_INITIALIZED = _LowLevel.CKF_USER_PIN_INITIALIZED

_LowLevel.CKF_RESTORE_KEY_NOT_NEEDED_swigconstant(_LowLevel)
CKF_RESTORE_KEY_NOT_NEEDED = _LowLevel.CKF_RESTORE_KEY_NOT_NEEDED

_LowLevel.CKF_CLOCK_ON_TOKEN_swigconstant(_LowLevel)
CKF_CLOCK_ON_TOKEN = _LowLevel.CKF_CLOCK_ON_TOKEN

_LowLevel.CKF_PROTECTED_AUTHENTICATION_PATH_swigconstant(_LowLevel)
CKF_PROTECTED_AUTHENTICATION_PATH = _LowLevel.CKF_PROTECTED_AUTHENTICATION_PATH

_LowLevel.CKF_DUAL_CRYPTO_OPERATIONS_swigconstant(_LowLevel)
CKF_DUAL_CRYPTO_OPERATIONS = _LowLevel.CKF_DUAL_CRYPTO_OPERATIONS

_LowLevel.CKF_TOKEN_INITIALIZED_swigconstant(_LowLevel)
CKF_TOKEN_INITIALIZED = _LowLevel.CKF_TOKEN_INITIALIZED

_LowLevel.CKF_SECONDARY_AUTHENTICATION_swigconstant(_LowLevel)
CKF_SECONDARY_AUTHENTICATION = _LowLevel.CKF_SECONDARY_AUTHENTICATION

_LowLevel.CKF_USER_PIN_COUNT_LOW_swigconstant(_LowLevel)
CKF_USER_PIN_COUNT_LOW = _LowLevel.CKF_USER_PIN_COUNT_LOW

_LowLevel.CKF_USER_PIN_FINAL_TRY_swigconstant(_LowLevel)
CKF_USER_PIN_FINAL_TRY = _LowLevel.CKF_USER_PIN_FINAL_TRY

_LowLevel.CKF_USER_PIN_LOCKED_swigconstant(_LowLevel)
CKF_USER_PIN_LOCKED = _LowLevel.CKF_USER_PIN_LOCKED

_LowLevel.CKF_USER_PIN_TO_BE_CHANGED_swigconstant(_LowLevel)
CKF_USER_PIN_TO_BE_CHANGED = _LowLevel.CKF_USER_PIN_TO_BE_CHANGED

_LowLevel.CKF_SO_PIN_COUNT_LOW_swigconstant(_LowLevel)
CKF_SO_PIN_COUNT_LOW = _LowLevel.CKF_SO_PIN_COUNT_LOW

_LowLevel.CKF_SO_PIN_FINAL_TRY_swigconstant(_LowLevel)
CKF_SO_PIN_FINAL_TRY = _LowLevel.CKF_SO_PIN_FINAL_TRY

_LowLevel.CKF_SO_PIN_LOCKED_swigconstant(_LowLevel)
CKF_SO_PIN_LOCKED = _LowLevel.CKF_SO_PIN_LOCKED

_LowLevel.CKF_SO_PIN_TO_BE_CHANGED_swigconstant(_LowLevel)
CKF_SO_PIN_TO_BE_CHANGED = _LowLevel.CKF_SO_PIN_TO_BE_CHANGED

_LowLevel.CKU_SO_swigconstant(_LowLevel)
CKU_SO = _LowLevel.CKU_SO

_LowLevel.CKU_USER_swigconstant(_LowLevel)
CKU_USER = _LowLevel.CKU_USER

_LowLevel.CKU_CONTEXT_SPECIFIC_swigconstant(_LowLevel)
CKU_CONTEXT_SPECIFIC = _LowLevel.CKU_CONTEXT_SPECIFIC

_LowLevel.CKS_RO_PUBLIC_SESSION_swigconstant(_LowLevel)
CKS_RO_PUBLIC_SESSION = _LowLevel.CKS_RO_PUBLIC_SESSION

_LowLevel.CKS_RO_USER_FUNCTIONS_swigconstant(_LowLevel)
CKS_RO_USER_FUNCTIONS = _LowLevel.CKS_RO_USER_FUNCTIONS

_LowLevel.CKS_RW_PUBLIC_SESSION_swigconstant(_LowLevel)
CKS_RW_PUBLIC_SESSION = _LowLevel.CKS_RW_PUBLIC_SESSION

_LowLevel.CKS_RW_USER_FUNCTIONS_swigconstant(_LowLevel)
CKS_RW_USER_FUNCTIONS = _LowLevel.CKS_RW_USER_FUNCTIONS

_LowLevel.CKS_RW_SO_FUNCTIONS_swigconstant(_LowLevel)
CKS_RW_SO_FUNCTIONS = _LowLevel.CKS_RW_SO_FUNCTIONS

_LowLevel.CKF_RW_SESSION_swigconstant(_LowLevel)
CKF_RW_SESSION = _LowLevel.CKF_RW_SESSION

_LowLevel.CKF_SERIAL_SESSION_swigconstant(_LowLevel)
CKF_SERIAL_SESSION = _LowLevel.CKF_SERIAL_SESSION

_LowLevel.CKO_DATA_swigconstant(_LowLevel)
CKO_DATA = _LowLevel.CKO_DATA

_LowLevel.CKO_CERTIFICATE_swigconstant(_LowLevel)
CKO_CERTIFICATE = _LowLevel.CKO_CERTIFICATE

_LowLevel.CKO_PUBLIC_KEY_swigconstant(_LowLevel)
CKO_PUBLIC_KEY = _LowLevel.CKO_PUBLIC_KEY

_LowLevel.CKO_PRIVATE_KEY_swigconstant(_LowLevel)
CKO_PRIVATE_KEY = _LowLevel.CKO_PRIVATE_KEY

_LowLevel.CKO_SECRET_KEY_swigconstant(_LowLevel)
CKO_SECRET_KEY = _LowLevel.CKO_SECRET_KEY

_LowLevel.CKO_HW_FEATURE_swigconstant(_LowLevel)
CKO_HW_FEATURE = _LowLevel.CKO_HW_FEATURE

_LowLevel.CKO_DOMAIN_PARAMETERS_swigconstant(_LowLevel)
CKO_DOMAIN_PARAMETERS = _LowLevel.CKO_DOMAIN_PARAMETERS

_LowLevel.CKO_MECHANISM_swigconstant(_LowLevel)
CKO_MECHANISM = _LowLevel.CKO_MECHANISM

_LowLevel.CKO_OTP_KEY_swigconstant(_LowLevel)
CKO_OTP_KEY = _LowLevel.CKO_OTP_KEY

_LowLevel.CKO_VENDOR_DEFINED_swigconstant(_LowLevel)
CKO_VENDOR_DEFINED = _LowLevel.CKO_VENDOR_DEFINED

_LowLevel.CKH_MONOTONIC_COUNTER_swigconstant(_LowLevel)
CKH_MONOTONIC_COUNTER = _LowLevel.CKH_MONOTONIC_COUNTER

_LowLevel.CKH_CLOCK_swigconstant(_LowLevel)
CKH_CLOCK = _LowLevel.CKH_CLOCK

_LowLevel.CKH_USER_INTERFACE_swigconstant(_LowLevel)
CKH_USER_INTERFACE = _LowLevel.CKH_USER_INTERFACE

_LowLevel.CKH_VENDOR_DEFINED_swigconstant(_LowLevel)
CKH_VENDOR_DEFINED = _LowLevel.CKH_VENDOR_DEFINED

_LowLevel.CKK_RSA_swigconstant(_LowLevel)
CKK_RSA = _LowLevel.CKK_RSA

_LowLevel.CKK_DSA_swigconstant(_LowLevel)
CKK_DSA = _LowLevel.CKK_DSA

_LowLevel.CKK_DH_swigconstant(_LowLevel)
CKK_DH = _LowLevel.CKK_DH

_LowLevel.CKK_ECDSA_swigconstant(_LowLevel)
CKK_ECDSA = _LowLevel.CKK_ECDSA

_LowLevel.CKK_EC_swigconstant(_LowLevel)
CKK_EC = _LowLevel.CKK_EC

_LowLevel.CKK_X9_42_DH_swigconstant(_LowLevel)
CKK_X9_42_DH = _LowLevel.CKK_X9_42_DH

_LowLevel.CKK_KEA_swigconstant(_LowLevel)
CKK_KEA = _LowLevel.CKK_KEA

_LowLevel.CKK_GENERIC_SECRET_swigconstant(_LowLevel)
CKK_GENERIC_SECRET = _LowLevel.CKK_GENERIC_SECRET

_LowLevel.CKK_RC2_swigconstant(_LowLevel)
CKK_RC2 = _LowLevel.CKK_RC2

_LowLevel.CKK_RC4_swigconstant(_LowLevel)
CKK_RC4 = _LowLevel.CKK_RC4

_LowLevel.CKK_DES_swigconstant(_LowLevel)
CKK_DES = _LowLevel.CKK_DES

_LowLevel.CKK_DES2_swigconstant(_LowLevel)
CKK_DES2 = _LowLevel.CKK_DES2

_LowLevel.CKK_DES3_swigconstant(_LowLevel)
CKK_DES3 = _LowLevel.CKK_DES3

_LowLevel.CKK_CAST_swigconstant(_LowLevel)
CKK_CAST = _LowLevel.CKK_CAST

_LowLevel.CKK_CAST3_swigconstant(_LowLevel)
CKK_CAST3 = _LowLevel.CKK_CAST3

_LowLevel.CKK_CAST5_swigconstant(_LowLevel)
CKK_CAST5 = _LowLevel.CKK_CAST5

_LowLevel.CKK_CAST128_swigconstant(_LowLevel)
CKK_CAST128 = _LowLevel.CKK_CAST128

_LowLevel.CKK_RC5_swigconstant(_LowLevel)
CKK_RC5 = _LowLevel.CKK_RC5

_LowLevel.CKK_IDEA_swigconstant(_LowLevel)
CKK_IDEA = _LowLevel.CKK_IDEA

_LowLevel.CKK_SKIPJACK_swigconstant(_LowLevel)
CKK_SKIPJACK = _LowLevel.CKK_SKIPJACK

_LowLevel.CKK_BATON_swigconstant(_LowLevel)
CKK_BATON = _LowLevel.CKK_BATON

_LowLevel.CKK_JUNIPER_swigconstant(_LowLevel)
CKK_JUNIPER = _LowLevel.CKK_JUNIPER

_LowLevel.CKK_CDMF_swigconstant(_LowLevel)
CKK_CDMF = _LowLevel.CKK_CDMF

_LowLevel.CKK_AES_swigconstant(_LowLevel)
CKK_AES = _LowLevel.CKK_AES

_LowLevel.CKK_BLOWFISH_swigconstant(_LowLevel)
CKK_BLOWFISH = _LowLevel.CKK_BLOWFISH

_LowLevel.CKK_TWOFISH_swigconstant(_LowLevel)
CKK_TWOFISH = _LowLevel.CKK_TWOFISH

_LowLevel.CKK_SECURID_swigconstant(_LowLevel)
CKK_SECURID = _LowLevel.CKK_SECURID

_LowLevel.CKK_HOTP_swigconstant(_LowLevel)
CKK_HOTP = _LowLevel.CKK_HOTP

_LowLevel.CKK_ACTI_swigconstant(_LowLevel)
CKK_ACTI = _LowLevel.CKK_ACTI

_LowLevel.CKK_CAMELLIA_swigconstant(_LowLevel)
CKK_CAMELLIA = _LowLevel.CKK_CAMELLIA

_LowLevel.CKK_ARIA_swigconstant(_LowLevel)
CKK_ARIA = _LowLevel.CKK_ARIA

_LowLevel.CKK_MD5_HMAC_swigconstant(_LowLevel)
CKK_MD5_HMAC = _LowLevel.CKK_MD5_HMAC

_LowLevel.CKK_SHA_1_HMAC_swigconstant(_LowLevel)
CKK_SHA_1_HMAC = _LowLevel.CKK_SHA_1_HMAC

_LowLevel.CKK_RIPEMD128_HMAC_swigconstant(_LowLevel)
CKK_RIPEMD128_HMAC = _LowLevel.CKK_RIPEMD128_HMAC

_LowLevel.CKK_RIPEMD160_HMAC_swigconstant(_LowLevel)
CKK_RIPEMD160_HMAC = _LowLevel.CKK_RIPEMD160_HMAC

_LowLevel.CKK_SHA256_HMAC_swigconstant(_LowLevel)
CKK_SHA256_HMAC = _LowLevel.CKK_SHA256_HMAC

_LowLevel.CKK_SHA384_HMAC_swigconstant(_LowLevel)
CKK_SHA384_HMAC = _LowLevel.CKK_SHA384_HMAC

_LowLevel.CKK_SHA512_HMAC_swigconstant(_LowLevel)
CKK_SHA512_HMAC = _LowLevel.CKK_SHA512_HMAC

_LowLevel.CKK_SHA224_HMAC_swigconstant(_LowLevel)
CKK_SHA224_HMAC = _LowLevel.CKK_SHA224_HMAC

_LowLevel.CKK_GOSTR3410_swigconstant(_LowLevel)
CKK_GOSTR3410 = _LowLevel.CKK_GOSTR3410

_LowLevel.CKK_GOSTR3411_swigconstant(_LowLevel)
CKK_GOSTR3411 = _LowLevel.CKK_GOSTR3411

_LowLevel.CKK_GOST28147_swigconstant(_LowLevel)
CKK_GOST28147 = _LowLevel.CKK_GOST28147

_LowLevel.CKK_VENDOR_DEFINED_swigconstant(_LowLevel)
CKK_VENDOR_DEFINED = _LowLevel.CKK_VENDOR_DEFINED

_LowLevel.CKC_X_509_swigconstant(_LowLevel)
CKC_X_509 = _LowLevel.CKC_X_509

_LowLevel.CKC_X_509_ATTR_CERT_swigconstant(_LowLevel)
CKC_X_509_ATTR_CERT = _LowLevel.CKC_X_509_ATTR_CERT

_LowLevel.CKC_WTLS_swigconstant(_LowLevel)
CKC_WTLS = _LowLevel.CKC_WTLS

_LowLevel.CKC_VENDOR_DEFINED_swigconstant(_LowLevel)
CKC_VENDOR_DEFINED = _LowLevel.CKC_VENDOR_DEFINED

_LowLevel.CKA_CLASS_swigconstant(_LowLevel)
CKA_CLASS = _LowLevel.CKA_CLASS

_LowLevel.CKA_TOKEN_swigconstant(_LowLevel)
CKA_TOKEN = _LowLevel.CKA_TOKEN

_LowLevel.CKA_PRIVATE_swigconstant(_LowLevel)
CKA_PRIVATE = _LowLevel.CKA_PRIVATE

_LowLevel.CKA_LABEL_swigconstant(_LowLevel)
CKA_LABEL = _LowLevel.CKA_LABEL

_LowLevel.CKA_APPLICATION_swigconstant(_LowLevel)
CKA_APPLICATION = _LowLevel.CKA_APPLICATION

_LowLevel.CKA_VALUE_swigconstant(_LowLevel)
CKA_VALUE = _LowLevel.CKA_VALUE

_LowLevel.CKA_OBJECT_ID_swigconstant(_LowLevel)
CKA_OBJECT_ID = _LowLevel.CKA_OBJECT_ID

_LowLevel.CKA_CERTIFICATE_TYPE_swigconstant(_LowLevel)
CKA_CERTIFICATE_TYPE = _LowLevel.CKA_CERTIFICATE_TYPE

_LowLevel.CKA_ISSUER_swigconstant(_LowLevel)
CKA_ISSUER = _LowLevel.CKA_ISSUER

_LowLevel.CKA_SERIAL_NUMBER_swigconstant(_LowLevel)
CKA_SERIAL_NUMBER = _LowLevel.CKA_SERIAL_NUMBER

_LowLevel.CKA_AC_ISSUER_swigconstant(_LowLevel)
CKA_AC_ISSUER = _LowLevel.CKA_AC_ISSUER

_LowLevel.CKA_OWNER_swigconstant(_LowLevel)
CKA_OWNER = _LowLevel.CKA_OWNER

_LowLevel.CKA_ATTR_TYPES_swigconstant(_LowLevel)
CKA_ATTR_TYPES = _LowLevel.CKA_ATTR_TYPES

_LowLevel.CKA_TRUSTED_swigconstant(_LowLevel)
CKA_TRUSTED = _LowLevel.CKA_TRUSTED

_LowLevel.CKA_CERTIFICATE_CATEGORY_swigconstant(_LowLevel)
CKA_CERTIFICATE_CATEGORY = _LowLevel.CKA_CERTIFICATE_CATEGORY

_LowLevel.CKA_JAVA_MIDP_SECURITY_DOMAIN_swigconstant(_LowLevel)
CKA_JAVA_MIDP_SECURITY_DOMAIN = _LowLevel.CKA_JAVA_MIDP_SECURITY_DOMAIN

_LowLevel.CKA_URL_swigconstant(_LowLevel)
CKA_URL = _LowLevel.CKA_URL

_LowLevel.CKA_HASH_OF_SUBJECT_PUBLIC_KEY_swigconstant(_LowLevel)
CKA_HASH_OF_SUBJECT_PUBLIC_KEY = _LowLevel.CKA_HASH_OF_SUBJECT_PUBLIC_KEY

_LowLevel.CKA_HASH_OF_ISSUER_PUBLIC_KEY_swigconstant(_LowLevel)
CKA_HASH_OF_ISSUER_PUBLIC_KEY = _LowLevel.CKA_HASH_OF_ISSUER_PUBLIC_KEY

_LowLevel.CKA_CHECK_VALUE_swigconstant(_LowLevel)
CKA_CHECK_VALUE = _LowLevel.CKA_CHECK_VALUE

_LowLevel.CKA_KEY_TYPE_swigconstant(_LowLevel)
CKA_KEY_TYPE = _LowLevel.CKA_KEY_TYPE

_LowLevel.CKA_SUBJECT_swigconstant(_LowLevel)
CKA_SUBJECT = _LowLevel.CKA_SUBJECT

_LowLevel.CKA_ID_swigconstant(_LowLevel)
CKA_ID = _LowLevel.CKA_ID

_LowLevel.CKA_SENSITIVE_swigconstant(_LowLevel)
CKA_SENSITIVE = _LowLevel.CKA_SENSITIVE

_LowLevel.CKA_ENCRYPT_swigconstant(_LowLevel)
CKA_ENCRYPT = _LowLevel.CKA_ENCRYPT

_LowLevel.CKA_DECRYPT_swigconstant(_LowLevel)
CKA_DECRYPT = _LowLevel.CKA_DECRYPT

_LowLevel.CKA_WRAP_swigconstant(_LowLevel)
CKA_WRAP = _LowLevel.CKA_WRAP

_LowLevel.CKA_UNWRAP_swigconstant(_LowLevel)
CKA_UNWRAP = _LowLevel.CKA_UNWRAP

_LowLevel.CKA_SIGN_swigconstant(_LowLevel)
CKA_SIGN = _LowLevel.CKA_SIGN

_LowLevel.CKA_SIGN_RECOVER_swigconstant(_LowLevel)
CKA_SIGN_RECOVER = _LowLevel.CKA_SIGN_RECOVER

_LowLevel.CKA_VERIFY_swigconstant(_LowLevel)
CKA_VERIFY = _LowLevel.CKA_VERIFY

_LowLevel.CKA_VERIFY_RECOVER_swigconstant(_LowLevel)
CKA_VERIFY_RECOVER = _LowLevel.CKA_VERIFY_RECOVER

_LowLevel.CKA_DERIVE_swigconstant(_LowLevel)
CKA_DERIVE = _LowLevel.CKA_DERIVE

_LowLevel.CKA_START_DATE_swigconstant(_LowLevel)
CKA_START_DATE = _LowLevel.CKA_START_DATE

_LowLevel.CKA_END_DATE_swigconstant(_LowLevel)
CKA_END_DATE = _LowLevel.CKA_END_DATE

_LowLevel.CKA_MODULUS_swigconstant(_LowLevel)
CKA_MODULUS = _LowLevel.CKA_MODULUS

_LowLevel.CKA_MODULUS_BITS_swigconstant(_LowLevel)
CKA_MODULUS_BITS = _LowLevel.CKA_MODULUS_BITS

_LowLevel.CKA_PUBLIC_EXPONENT_swigconstant(_LowLevel)
CKA_PUBLIC_EXPONENT = _LowLevel.CKA_PUBLIC_EXPONENT

_LowLevel.CKA_PRIVATE_EXPONENT_swigconstant(_LowLevel)
CKA_PRIVATE_EXPONENT = _LowLevel.CKA_PRIVATE_EXPONENT

_LowLevel.CKA_PRIME_1_swigconstant(_LowLevel)
CKA_PRIME_1 = _LowLevel.CKA_PRIME_1

_LowLevel.CKA_PRIME_2_swigconstant(_LowLevel)
CKA_PRIME_2 = _LowLevel.CKA_PRIME_2

_LowLevel.CKA_EXPONENT_1_swigconstant(_LowLevel)
CKA_EXPONENT_1 = _LowLevel.CKA_EXPONENT_1

_LowLevel.CKA_EXPONENT_2_swigconstant(_LowLevel)
CKA_EXPONENT_2 = _LowLevel.CKA_EXPONENT_2

_LowLevel.CKA_COEFFICIENT_swigconstant(_LowLevel)
CKA_COEFFICIENT = _LowLevel.CKA_COEFFICIENT

_LowLevel.CKA_PRIME_swigconstant(_LowLevel)
CKA_PRIME = _LowLevel.CKA_PRIME

_LowLevel.CKA_SUBPRIME_swigconstant(_LowLevel)
CKA_SUBPRIME = _LowLevel.CKA_SUBPRIME

_LowLevel.CKA_BASE_swigconstant(_LowLevel)
CKA_BASE = _LowLevel.CKA_BASE

_LowLevel.CKA_PRIME_BITS_swigconstant(_LowLevel)
CKA_PRIME_BITS = _LowLevel.CKA_PRIME_BITS

_LowLevel.CKA_SUBPRIME_BITS_swigconstant(_LowLevel)
CKA_SUBPRIME_BITS = _LowLevel.CKA_SUBPRIME_BITS

_LowLevel.CKA_SUB_PRIME_BITS_swigconstant(_LowLevel)
CKA_SUB_PRIME_BITS = _LowLevel.CKA_SUB_PRIME_BITS

_LowLevel.CKA_VALUE_BITS_swigconstant(_LowLevel)
CKA_VALUE_BITS = _LowLevel.CKA_VALUE_BITS

_LowLevel.CKA_VALUE_LEN_swigconstant(_LowLevel)
CKA_VALUE_LEN = _LowLevel.CKA_VALUE_LEN

_LowLevel.CKA_EXTRACTABLE_swigconstant(_LowLevel)
CKA_EXTRACTABLE = _LowLevel.CKA_EXTRACTABLE

_LowLevel.CKA_LOCAL_swigconstant(_LowLevel)
CKA_LOCAL = _LowLevel.CKA_LOCAL

_LowLevel.CKA_NEVER_EXTRACTABLE_swigconstant(_LowLevel)
CKA_NEVER_EXTRACTABLE = _LowLevel.CKA_NEVER_EXTRACTABLE

_LowLevel.CKA_ALWAYS_SENSITIVE_swigconstant(_LowLevel)
CKA_ALWAYS_SENSITIVE = _LowLevel.CKA_ALWAYS_SENSITIVE

_LowLevel.CKA_KEY_GEN_MECHANISM_swigconstant(_LowLevel)
CKA_KEY_GEN_MECHANISM = _LowLevel.CKA_KEY_GEN_MECHANISM

_LowLevel.CKA_MODIFIABLE_swigconstant(_LowLevel)
CKA_MODIFIABLE = _LowLevel.CKA_MODIFIABLE

_LowLevel.CKA_ECDSA_PARAMS_swigconstant(_LowLevel)
CKA_ECDSA_PARAMS = _LowLevel.CKA_ECDSA_PARAMS

_LowLevel.CKA_EC_PARAMS_swigconstant(_LowLevel)
CKA_EC_PARAMS = _LowLevel.CKA_EC_PARAMS

_LowLevel.CKA_EC_POINT_swigconstant(_LowLevel)
CKA_EC_POINT = _LowLevel.CKA_EC_POINT

_LowLevel.CKA_SECONDARY_AUTH_swigconstant(_LowLevel)
CKA_SECONDARY_AUTH = _LowLevel.CKA_SECONDARY_AUTH

_LowLevel.CKA_AUTH_PIN_FLAGS_swigconstant(_LowLevel)
CKA_AUTH_PIN_FLAGS = _LowLevel.CKA_AUTH_PIN_FLAGS

_LowLevel.CKA_ALWAYS_AUTHENTICATE_swigconstant(_LowLevel)
CKA_ALWAYS_AUTHENTICATE = _LowLevel.CKA_ALWAYS_AUTHENTICATE

_LowLevel.CKA_WRAP_WITH_TRUSTED_swigconstant(_LowLevel)
CKA_WRAP_WITH_TRUSTED = _LowLevel.CKA_WRAP_WITH_TRUSTED

_LowLevel.CKA_OTP_FORMAT_swigconstant(_LowLevel)
CKA_OTP_FORMAT = _LowLevel.CKA_OTP_FORMAT

_LowLevel.CKA_OTP_LENGTH_swigconstant(_LowLevel)
CKA_OTP_LENGTH = _LowLevel.CKA_OTP_LENGTH

_LowLevel.CKA_OTP_TIME_INTERVAL_swigconstant(_LowLevel)
CKA_OTP_TIME_INTERVAL = _LowLevel.CKA_OTP_TIME_INTERVAL

_LowLevel.CKA_OTP_USER_FRIENDLY_MODE_swigconstant(_LowLevel)
CKA_OTP_USER_FRIENDLY_MODE = _LowLevel.CKA_OTP_USER_FRIENDLY_MODE

_LowLevel.CKA_OTP_CHALLENGE_REQUIREMENT_swigconstant(_LowLevel)
CKA_OTP_CHALLENGE_REQUIREMENT = _LowLevel.CKA_OTP_CHALLENGE_REQUIREMENT

_LowLevel.CKA_OTP_TIME_REQUIREMENT_swigconstant(_LowLevel)
CKA_OTP_TIME_REQUIREMENT = _LowLevel.CKA_OTP_TIME_REQUIREMENT

_LowLevel.CKA_OTP_COUNTER_REQUIREMENT_swigconstant(_LowLevel)
CKA_OTP_COUNTER_REQUIREMENT = _LowLevel.CKA_OTP_COUNTER_REQUIREMENT

_LowLevel.CKA_OTP_PIN_REQUIREMENT_swigconstant(_LowLevel)
CKA_OTP_PIN_REQUIREMENT = _LowLevel.CKA_OTP_PIN_REQUIREMENT

_LowLevel.CKA_OTP_COUNTER_swigconstant(_LowLevel)
CKA_OTP_COUNTER = _LowLevel.CKA_OTP_COUNTER

_LowLevel.CKA_OTP_TIME_swigconstant(_LowLevel)
CKA_OTP_TIME = _LowLevel.CKA_OTP_TIME

_LowLevel.CKA_OTP_USER_IDENTIFIER_swigconstant(_LowLevel)
CKA_OTP_USER_IDENTIFIER = _LowLevel.CKA_OTP_USER_IDENTIFIER

_LowLevel.CKA_OTP_SERVICE_IDENTIFIER_swigconstant(_LowLevel)
CKA_OTP_SERVICE_IDENTIFIER = _LowLevel.CKA_OTP_SERVICE_IDENTIFIER

_LowLevel.CKA_OTP_SERVICE_LOGO_swigconstant(_LowLevel)
CKA_OTP_SERVICE_LOGO = _LowLevel.CKA_OTP_SERVICE_LOGO

_LowLevel.CKA_OTP_SERVICE_LOGO_TYPE_swigconstant(_LowLevel)
CKA_OTP_SERVICE_LOGO_TYPE = _LowLevel.CKA_OTP_SERVICE_LOGO_TYPE

_LowLevel.CKA_GOSTR3410_PARAMS_swigconstant(_LowLevel)
CKA_GOSTR3410_PARAMS = _LowLevel.CKA_GOSTR3410_PARAMS

_LowLevel.CKA_GOSTR3411_PARAMS_swigconstant(_LowLevel)
CKA_GOSTR3411_PARAMS = _LowLevel.CKA_GOSTR3411_PARAMS

_LowLevel.CKA_GOST28147_PARAMS_swigconstant(_LowLevel)
CKA_GOST28147_PARAMS = _LowLevel.CKA_GOST28147_PARAMS

_LowLevel.CKA_HW_FEATURE_TYPE_swigconstant(_LowLevel)
CKA_HW_FEATURE_TYPE = _LowLevel.CKA_HW_FEATURE_TYPE

_LowLevel.CKA_RESET_ON_INIT_swigconstant(_LowLevel)
CKA_RESET_ON_INIT = _LowLevel.CKA_RESET_ON_INIT

_LowLevel.CKA_HAS_RESET_swigconstant(_LowLevel)
CKA_HAS_RESET = _LowLevel.CKA_HAS_RESET

_LowLevel.CKA_PIXEL_X_swigconstant(_LowLevel)
CKA_PIXEL_X = _LowLevel.CKA_PIXEL_X

_LowLevel.CKA_PIXEL_Y_swigconstant(_LowLevel)
CKA_PIXEL_Y = _LowLevel.CKA_PIXEL_Y

_LowLevel.CKA_RESOLUTION_swigconstant(_LowLevel)
CKA_RESOLUTION = _LowLevel.CKA_RESOLUTION

_LowLevel.CKA_CHAR_ROWS_swigconstant(_LowLevel)
CKA_CHAR_ROWS = _LowLevel.CKA_CHAR_ROWS

_LowLevel.CKA_CHAR_COLUMNS_swigconstant(_LowLevel)
CKA_CHAR_COLUMNS = _LowLevel.CKA_CHAR_COLUMNS

_LowLevel.CKA_COLOR_swigconstant(_LowLevel)
CKA_COLOR = _LowLevel.CKA_COLOR

_LowLevel.CKA_BITS_PER_PIXEL_swigconstant(_LowLevel)
CKA_BITS_PER_PIXEL = _LowLevel.CKA_BITS_PER_PIXEL

_LowLevel.CKA_CHAR_SETS_swigconstant(_LowLevel)
CKA_CHAR_SETS = _LowLevel.CKA_CHAR_SETS

_LowLevel.CKA_ENCODING_METHODS_swigconstant(_LowLevel)
CKA_ENCODING_METHODS = _LowLevel.CKA_ENCODING_METHODS

_LowLevel.CKA_MIME_TYPES_swigconstant(_LowLevel)
CKA_MIME_TYPES = _LowLevel.CKA_MIME_TYPES

_LowLevel.CKA_MECHANISM_TYPE_swigconstant(_LowLevel)
CKA_MECHANISM_TYPE = _LowLevel.CKA_MECHANISM_TYPE

_LowLevel.CKA_REQUIRED_CMS_ATTRIBUTES_swigconstant(_LowLevel)
CKA_REQUIRED_CMS_ATTRIBUTES = _LowLevel.CKA_REQUIRED_CMS_ATTRIBUTES

_LowLevel.CKA_DEFAULT_CMS_ATTRIBUTES_swigconstant(_LowLevel)
CKA_DEFAULT_CMS_ATTRIBUTES = _LowLevel.CKA_DEFAULT_CMS_ATTRIBUTES

_LowLevel.CKA_SUPPORTED_CMS_ATTRIBUTES_swigconstant(_LowLevel)
CKA_SUPPORTED_CMS_ATTRIBUTES = _LowLevel.CKA_SUPPORTED_CMS_ATTRIBUTES

_LowLevel.CKA_VENDOR_DEFINED_swigconstant(_LowLevel)
CKA_VENDOR_DEFINED = _LowLevel.CKA_VENDOR_DEFINED

_LowLevel.CKM_RSA_PKCS_KEY_PAIR_GEN_swigconstant(_LowLevel)
CKM_RSA_PKCS_KEY_PAIR_GEN = _LowLevel.CKM_RSA_PKCS_KEY_PAIR_GEN

_LowLevel.CKM_RSA_PKCS_swigconstant(_LowLevel)
CKM_RSA_PKCS = _LowLevel.CKM_RSA_PKCS

_LowLevel.CKM_RSA_9796_swigconstant(_LowLevel)
CKM_RSA_9796 = _LowLevel.CKM_RSA_9796

_LowLevel.CKM_RSA_X_509_swigconstant(_LowLevel)
CKM_RSA_X_509 = _LowLevel.CKM_RSA_X_509

_LowLevel.CKM_MD2_RSA_PKCS_swigconstant(_LowLevel)
CKM_MD2_RSA_PKCS = _LowLevel.CKM_MD2_RSA_PKCS

_LowLevel.CKM_MD5_RSA_PKCS_swigconstant(_LowLevel)
CKM_MD5_RSA_PKCS = _LowLevel.CKM_MD5_RSA_PKCS

_LowLevel.CKM_SHA1_RSA_PKCS_swigconstant(_LowLevel)
CKM_SHA1_RSA_PKCS = _LowLevel.CKM_SHA1_RSA_PKCS

_LowLevel.CKM_RIPEMD128_RSA_PKCS_swigconstant(_LowLevel)
CKM_RIPEMD128_RSA_PKCS = _LowLevel.CKM_RIPEMD128_RSA_PKCS

_LowLevel.CKM_RIPEMD160_RSA_PKCS_swigconstant(_LowLevel)
CKM_RIPEMD160_RSA_PKCS = _LowLevel.CKM_RIPEMD160_RSA_PKCS

_LowLevel.CKM_RSA_PKCS_OAEP_swigconstant(_LowLevel)
CKM_RSA_PKCS_OAEP = _LowLevel.CKM_RSA_PKCS_OAEP

_LowLevel.CKM_RSA_X9_31_KEY_PAIR_GEN_swigconstant(_LowLevel)
CKM_RSA_X9_31_KEY_PAIR_GEN = _LowLevel.CKM_RSA_X9_31_KEY_PAIR_GEN

_LowLevel.CKM_RSA_X9_31_swigconstant(_LowLevel)
CKM_RSA_X9_31 = _LowLevel.CKM_RSA_X9_31

_LowLevel.CKM_SHA1_RSA_X9_31_swigconstant(_LowLevel)
CKM_SHA1_RSA_X9_31 = _LowLevel.CKM_SHA1_RSA_X9_31

_LowLevel.CKM_RSA_PKCS_PSS_swigconstant(_LowLevel)
CKM_RSA_PKCS_PSS = _LowLevel.CKM_RSA_PKCS_PSS

_LowLevel.CKM_SHA1_RSA_PKCS_PSS_swigconstant(_LowLevel)
CKM_SHA1_RSA_PKCS_PSS = _LowLevel.CKM_SHA1_RSA_PKCS_PSS

_LowLevel.CKM_DSA_KEY_PAIR_GEN_swigconstant(_LowLevel)
CKM_DSA_KEY_PAIR_GEN = _LowLevel.CKM_DSA_KEY_PAIR_GEN

_LowLevel.CKM_DSA_swigconstant(_LowLevel)
CKM_DSA = _LowLevel.CKM_DSA

_LowLevel.CKM_DSA_SHA1_swigconstant(_LowLevel)
CKM_DSA_SHA1 = _LowLevel.CKM_DSA_SHA1

_LowLevel.CKM_DSA_SHA224_swigconstant(_LowLevel)
CKM_DSA_SHA224 = _LowLevel.CKM_DSA_SHA224

_LowLevel.CKM_DSA_SHA256_swigconstant(_LowLevel)
CKM_DSA_SHA256 = _LowLevel.CKM_DSA_SHA256

_LowLevel.CKM_DSA_SHA384_swigconstant(_LowLevel)
CKM_DSA_SHA384 = _LowLevel.CKM_DSA_SHA384

_LowLevel.CKM_DSA_SHA512_swigconstant(_LowLevel)
CKM_DSA_SHA512 = _LowLevel.CKM_DSA_SHA512

_LowLevel.CKM_DH_PKCS_KEY_PAIR_GEN_swigconstant(_LowLevel)
CKM_DH_PKCS_KEY_PAIR_GEN = _LowLevel.CKM_DH_PKCS_KEY_PAIR_GEN

_LowLevel.CKM_DH_PKCS_DERIVE_swigconstant(_LowLevel)
CKM_DH_PKCS_DERIVE = _LowLevel.CKM_DH_PKCS_DERIVE

_LowLevel.CKM_X9_42_DH_KEY_PAIR_GEN_swigconstant(_LowLevel)
CKM_X9_42_DH_KEY_PAIR_GEN = _LowLevel.CKM_X9_42_DH_KEY_PAIR_GEN

_LowLevel.CKM_X9_42_DH_DERIVE_swigconstant(_LowLevel)
CKM_X9_42_DH_DERIVE = _LowLevel.CKM_X9_42_DH_DERIVE

_LowLevel.CKM_X9_42_DH_HYBRID_DERIVE_swigconstant(_LowLevel)
CKM_X9_42_DH_HYBRID_DERIVE = _LowLevel.CKM_X9_42_DH_HYBRID_DERIVE

_LowLevel.CKM_X9_42_MQV_DERIVE_swigconstant(_LowLevel)
CKM_X9_42_MQV_DERIVE = _LowLevel.CKM_X9_42_MQV_DERIVE

_LowLevel.CKM_SHA256_RSA_PKCS_swigconstant(_LowLevel)
CKM_SHA256_RSA_PKCS = _LowLevel.CKM_SHA256_RSA_PKCS

_LowLevel.CKM_SHA384_RSA_PKCS_swigconstant(_LowLevel)
CKM_SHA384_RSA_PKCS = _LowLevel.CKM_SHA384_RSA_PKCS

_LowLevel.CKM_SHA512_RSA_PKCS_swigconstant(_LowLevel)
CKM_SHA512_RSA_PKCS = _LowLevel.CKM_SHA512_RSA_PKCS

_LowLevel.CKM_SHA256_RSA_PKCS_PSS_swigconstant(_LowLevel)
CKM_SHA256_RSA_PKCS_PSS = _LowLevel.CKM_SHA256_RSA_PKCS_PSS

_LowLevel.CKM_SHA384_RSA_PKCS_PSS_swigconstant(_LowLevel)
CKM_SHA384_RSA_PKCS_PSS = _LowLevel.CKM_SHA384_RSA_PKCS_PSS

_LowLevel.CKM_SHA512_RSA_PKCS_PSS_swigconstant(_LowLevel)
CKM_SHA512_RSA_PKCS_PSS = _LowLevel.CKM_SHA512_RSA_PKCS_PSS

_LowLevel.CKM_SHA224_RSA_PKCS_swigconstant(_LowLevel)
CKM_SHA224_RSA_PKCS = _LowLevel.CKM_SHA224_RSA_PKCS

_LowLevel.CKM_SHA224_RSA_PKCS_PSS_swigconstant(_LowLevel)
CKM_SHA224_RSA_PKCS_PSS = _LowLevel.CKM_SHA224_RSA_PKCS_PSS

_LowLevel.CKM_SHA512_224_swigconstant(_LowLevel)
CKM_SHA512_224 = _LowLevel.CKM_SHA512_224

_LowLevel.CKM_SHA512_224_HMAC_swigconstant(_LowLevel)
CKM_SHA512_224_HMAC = _LowLevel.CKM_SHA512_224_HMAC

_LowLevel.CKM_SHA512_224_HMAC_GENERAL_swigconstant(_LowLevel)
CKM_SHA512_224_HMAC_GENERAL = _LowLevel.CKM_SHA512_224_HMAC_GENERAL

_LowLevel.CKM_SHA512_224_KEY_DERIVATION_swigconstant(_LowLevel)
CKM_SHA512_224_KEY_DERIVATION = _LowLevel.CKM_SHA512_224_KEY_DERIVATION

_LowLevel.CKM_SHA512_256_swigconstant(_LowLevel)
CKM_SHA512_256 = _LowLevel.CKM_SHA512_256

_LowLevel.CKM_SHA512_256_HMAC_swigconstant(_LowLevel)
CKM_SHA512_256_HMAC = _LowLevel.CKM_SHA512_256_HMAC

_LowLevel.CKM_SHA512_256_HMAC_GENERAL_swigconstant(_LowLevel)
CKM_SHA512_256_HMAC_GENERAL = _LowLevel.CKM_SHA512_256_HMAC_GENERAL

_LowLevel.CKM_SHA512_256_KEY_DERIVATION_swigconstant(_LowLevel)
CKM_SHA512_256_KEY_DERIVATION = _LowLevel.CKM_SHA512_256_KEY_DERIVATION

_LowLevel.CKM_SHA512_T_swigconstant(_LowLevel)
CKM_SHA512_T = _LowLevel.CKM_SHA512_T

_LowLevel.CKM_SHA512_T_HMAC_swigconstant(_LowLevel)
CKM_SHA512_T_HMAC = _LowLevel.CKM_SHA512_T_HMAC

_LowLevel.CKM_SHA512_T_HMAC_GENERAL_swigconstant(_LowLevel)
CKM_SHA512_T_HMAC_GENERAL = _LowLevel.CKM_SHA512_T_HMAC_GENERAL

_LowLevel.CKM_SHA512_T_KEY_DERIVATION_swigconstant(_LowLevel)
CKM_SHA512_T_KEY_DERIVATION = _LowLevel.CKM_SHA512_T_KEY_DERIVATION

_LowLevel.CKM_RC2_KEY_GEN_swigconstant(_LowLevel)
CKM_RC2_KEY_GEN = _LowLevel.CKM_RC2_KEY_GEN

_LowLevel.CKM_RC2_ECB_swigconstant(_LowLevel)
CKM_RC2_ECB = _LowLevel.CKM_RC2_ECB

_LowLevel.CKM_RC2_CBC_swigconstant(_LowLevel)
CKM_RC2_CBC = _LowLevel.CKM_RC2_CBC

_LowLevel.CKM_RC2_MAC_swigconstant(_LowLevel)
CKM_RC2_MAC = _LowLevel.CKM_RC2_MAC

_LowLevel.CKM_RC2_MAC_GENERAL_swigconstant(_LowLevel)
CKM_RC2_MAC_GENERAL = _LowLevel.CKM_RC2_MAC_GENERAL

_LowLevel.CKM_RC2_CBC_PAD_swigconstant(_LowLevel)
CKM_RC2_CBC_PAD = _LowLevel.CKM_RC2_CBC_PAD

_LowLevel.CKM_RC4_KEY_GEN_swigconstant(_LowLevel)
CKM_RC4_KEY_GEN = _LowLevel.CKM_RC4_KEY_GEN

_LowLevel.CKM_RC4_swigconstant(_LowLevel)
CKM_RC4 = _LowLevel.CKM_RC4

_LowLevel.CKM_DES_KEY_GEN_swigconstant(_LowLevel)
CKM_DES_KEY_GEN = _LowLevel.CKM_DES_KEY_GEN

_LowLevel.CKM_DES_ECB_swigconstant(_LowLevel)
CKM_DES_ECB = _LowLevel.CKM_DES_ECB

_LowLevel.CKM_DES_CBC_swigconstant(_LowLevel)
CKM_DES_CBC = _LowLevel.CKM_DES_CBC

_LowLevel.CKM_DES_MAC_swigconstant(_LowLevel)
CKM_DES_MAC = _LowLevel.CKM_DES_MAC

_LowLevel.CKM_DES_MAC_GENERAL_swigconstant(_LowLevel)
CKM_DES_MAC_GENERAL = _LowLevel.CKM_DES_MAC_GENERAL

_LowLevel.CKM_DES_CBC_PAD_swigconstant(_LowLevel)
CKM_DES_CBC_PAD = _LowLevel.CKM_DES_CBC_PAD

_LowLevel.CKM_DES2_KEY_GEN_swigconstant(_LowLevel)
CKM_DES2_KEY_GEN = _LowLevel.CKM_DES2_KEY_GEN

_LowLevel.CKM_DES3_KEY_GEN_swigconstant(_LowLevel)
CKM_DES3_KEY_GEN = _LowLevel.CKM_DES3_KEY_GEN

_LowLevel.CKM_DES3_ECB_swigconstant(_LowLevel)
CKM_DES3_ECB = _LowLevel.CKM_DES3_ECB

_LowLevel.CKM_DES3_CBC_swigconstant(_LowLevel)
CKM_DES3_CBC = _LowLevel.CKM_DES3_CBC

_LowLevel.CKM_DES3_MAC_swigconstant(_LowLevel)
CKM_DES3_MAC = _LowLevel.CKM_DES3_MAC

_LowLevel.CKM_DES3_MAC_GENERAL_swigconstant(_LowLevel)
CKM_DES3_MAC_GENERAL = _LowLevel.CKM_DES3_MAC_GENERAL

_LowLevel.CKM_DES3_CBC_PAD_swigconstant(_LowLevel)
CKM_DES3_CBC_PAD = _LowLevel.CKM_DES3_CBC_PAD

_LowLevel.CKM_DES3_CMAC_GENERAL_swigconstant(_LowLevel)
CKM_DES3_CMAC_GENERAL = _LowLevel.CKM_DES3_CMAC_GENERAL

_LowLevel.CKM_DES3_CMAC_swigconstant(_LowLevel)
CKM_DES3_CMAC = _LowLevel.CKM_DES3_CMAC

_LowLevel.CKM_CDMF_KEY_GEN_swigconstant(_LowLevel)
CKM_CDMF_KEY_GEN = _LowLevel.CKM_CDMF_KEY_GEN

_LowLevel.CKM_CDMF_ECB_swigconstant(_LowLevel)
CKM_CDMF_ECB = _LowLevel.CKM_CDMF_ECB

_LowLevel.CKM_CDMF_CBC_swigconstant(_LowLevel)
CKM_CDMF_CBC = _LowLevel.CKM_CDMF_CBC

_LowLevel.CKM_CDMF_MAC_swigconstant(_LowLevel)
CKM_CDMF_MAC = _LowLevel.CKM_CDMF_MAC

_LowLevel.CKM_CDMF_MAC_GENERAL_swigconstant(_LowLevel)
CKM_CDMF_MAC_GENERAL = _LowLevel.CKM_CDMF_MAC_GENERAL

_LowLevel.CKM_CDMF_CBC_PAD_swigconstant(_LowLevel)
CKM_CDMF_CBC_PAD = _LowLevel.CKM_CDMF_CBC_PAD

_LowLevel.CKM_DES_OFB64_swigconstant(_LowLevel)
CKM_DES_OFB64 = _LowLevel.CKM_DES_OFB64

_LowLevel.CKM_DES_OFB8_swigconstant(_LowLevel)
CKM_DES_OFB8 = _LowLevel.CKM_DES_OFB8

_LowLevel.CKM_DES_CFB64_swigconstant(_LowLevel)
CKM_DES_CFB64 = _LowLevel.CKM_DES_CFB64

_LowLevel.CKM_DES_CFB8_swigconstant(_LowLevel)
CKM_DES_CFB8 = _LowLevel.CKM_DES_CFB8

_LowLevel.CKM_MD2_swigconstant(_LowLevel)
CKM_MD2 = _LowLevel.CKM_MD2

_LowLevel.CKM_MD2_HMAC_swigconstant(_LowLevel)
CKM_MD2_HMAC = _LowLevel.CKM_MD2_HMAC

_LowLevel.CKM_MD2_HMAC_GENERAL_swigconstant(_LowLevel)
CKM_MD2_HMAC_GENERAL = _LowLevel.CKM_MD2_HMAC_GENERAL

_LowLevel.CKM_MD5_swigconstant(_LowLevel)
CKM_MD5 = _LowLevel.CKM_MD5

_LowLevel.CKM_MD5_HMAC_swigconstant(_LowLevel)
CKM_MD5_HMAC = _LowLevel.CKM_MD5_HMAC

_LowLevel.CKM_MD5_HMAC_GENERAL_swigconstant(_LowLevel)
CKM_MD5_HMAC_GENERAL = _LowLevel.CKM_MD5_HMAC_GENERAL

_LowLevel.CKM_SHA_1_swigconstant(_LowLevel)
CKM_SHA_1 = _LowLevel.CKM_SHA_1

_LowLevel.CKM_SHA_1_HMAC_swigconstant(_LowLevel)
CKM_SHA_1_HMAC = _LowLevel.CKM_SHA_1_HMAC

_LowLevel.CKM_SHA_1_HMAC_GENERAL_swigconstant(_LowLevel)
CKM_SHA_1_HMAC_GENERAL = _LowLevel.CKM_SHA_1_HMAC_GENERAL

_LowLevel.CKM_RIPEMD128_swigconstant(_LowLevel)
CKM_RIPEMD128 = _LowLevel.CKM_RIPEMD128

_LowLevel.CKM_RIPEMD128_HMAC_swigconstant(_LowLevel)
CKM_RIPEMD128_HMAC = _LowLevel.CKM_RIPEMD128_HMAC

_LowLevel.CKM_RIPEMD128_HMAC_GENERAL_swigconstant(_LowLevel)
CKM_RIPEMD128_HMAC_GENERAL = _LowLevel.CKM_RIPEMD128_HMAC_GENERAL

_LowLevel.CKM_RIPEMD160_swigconstant(_LowLevel)
CKM_RIPEMD160 = _LowLevel.CKM_RIPEMD160

_LowLevel.CKM_RIPEMD160_HMAC_swigconstant(_LowLevel)
CKM_RIPEMD160_HMAC = _LowLevel.CKM_RIPEMD160_HMAC

_LowLevel.CKM_RIPEMD160_HMAC_GENERAL_swigconstant(_LowLevel)
CKM_RIPEMD160_HMAC_GENERAL = _LowLevel.CKM_RIPEMD160_HMAC_GENERAL

_LowLevel.CKM_SHA256_swigconstant(_LowLevel)
CKM_SHA256 = _LowLevel.CKM_SHA256

_LowLevel.CKM_SHA256_HMAC_swigconstant(_LowLevel)
CKM_SHA256_HMAC = _LowLevel.CKM_SHA256_HMAC

_LowLevel.CKM_SHA256_HMAC_GENERAL_swigconstant(_LowLevel)
CKM_SHA256_HMAC_GENERAL = _LowLevel.CKM_SHA256_HMAC_GENERAL

_LowLevel.CKM_SHA224_swigconstant(_LowLevel)
CKM_SHA224 = _LowLevel.CKM_SHA224

_LowLevel.CKM_SHA224_HMAC_swigconstant(_LowLevel)
CKM_SHA224_HMAC = _LowLevel.CKM_SHA224_HMAC

_LowLevel.CKM_SHA224_HMAC_GENERAL_swigconstant(_LowLevel)
CKM_SHA224_HMAC_GENERAL = _LowLevel.CKM_SHA224_HMAC_GENERAL

_LowLevel.CKM_SHA384_swigconstant(_LowLevel)
CKM_SHA384 = _LowLevel.CKM_SHA384

_LowLevel.CKM_SHA384_HMAC_swigconstant(_LowLevel)
CKM_SHA384_HMAC = _LowLevel.CKM_SHA384_HMAC

_LowLevel.CKM_SHA384_HMAC_GENERAL_swigconstant(_LowLevel)
CKM_SHA384_HMAC_GENERAL = _LowLevel.CKM_SHA384_HMAC_GENERAL

_LowLevel.CKM_SHA512_swigconstant(_LowLevel)
CKM_SHA512 = _LowLevel.CKM_SHA512

_LowLevel.CKM_SHA512_HMAC_swigconstant(_LowLevel)
CKM_SHA512_HMAC = _LowLevel.CKM_SHA512_HMAC

_LowLevel.CKM_SHA512_HMAC_GENERAL_swigconstant(_LowLevel)
CKM_SHA512_HMAC_GENERAL = _LowLevel.CKM_SHA512_HMAC_GENERAL

_LowLevel.CKM_SECURID_KEY_GEN_swigconstant(_LowLevel)
CKM_SECURID_KEY_GEN = _LowLevel.CKM_SECURID_KEY_GEN

_LowLevel.CKM_SECURID_swigconstant(_LowLevel)
CKM_SECURID = _LowLevel.CKM_SECURID

_LowLevel.CKM_HOTP_KEY_GEN_swigconstant(_LowLevel)
CKM_HOTP_KEY_GEN = _LowLevel.CKM_HOTP_KEY_GEN

_LowLevel.CKM_HOTP_swigconstant(_LowLevel)
CKM_HOTP = _LowLevel.CKM_HOTP

_LowLevel.CKM_ACTI_swigconstant(_LowLevel)
CKM_ACTI = _LowLevel.CKM_ACTI

_LowLevel.CKM_ACTI_KEY_GEN_swigconstant(_LowLevel)
CKM_ACTI_KEY_GEN = _LowLevel.CKM_ACTI_KEY_GEN

_LowLevel.CKM_CAST_KEY_GEN_swigconstant(_LowLevel)
CKM_CAST_KEY_GEN = _LowLevel.CKM_CAST_KEY_GEN

_LowLevel.CKM_CAST_ECB_swigconstant(_LowLevel)
CKM_CAST_ECB = _LowLevel.CKM_CAST_ECB

_LowLevel.CKM_CAST_CBC_swigconstant(_LowLevel)
CKM_CAST_CBC = _LowLevel.CKM_CAST_CBC

_LowLevel.CKM_CAST_MAC_swigconstant(_LowLevel)
CKM_CAST_MAC = _LowLevel.CKM_CAST_MAC

_LowLevel.CKM_CAST_MAC_GENERAL_swigconstant(_LowLevel)
CKM_CAST_MAC_GENERAL = _LowLevel.CKM_CAST_MAC_GENERAL

_LowLevel.CKM_CAST_CBC_PAD_swigconstant(_LowLevel)
CKM_CAST_CBC_PAD = _LowLevel.CKM_CAST_CBC_PAD

_LowLevel.CKM_CAST3_KEY_GEN_swigconstant(_LowLevel)
CKM_CAST3_KEY_GEN = _LowLevel.CKM_CAST3_KEY_GEN

_LowLevel.CKM_CAST3_ECB_swigconstant(_LowLevel)
CKM_CAST3_ECB = _LowLevel.CKM_CAST3_ECB

_LowLevel.CKM_CAST3_CBC_swigconstant(_LowLevel)
CKM_CAST3_CBC = _LowLevel.CKM_CAST3_CBC

_LowLevel.CKM_CAST3_MAC_swigconstant(_LowLevel)
CKM_CAST3_MAC = _LowLevel.CKM_CAST3_MAC

_LowLevel.CKM_CAST3_MAC_GENERAL_swigconstant(_LowLevel)
CKM_CAST3_MAC_GENERAL = _LowLevel.CKM_CAST3_MAC_GENERAL

_LowLevel.CKM_CAST3_CBC_PAD_swigconstant(_LowLevel)
CKM_CAST3_CBC_PAD = _LowLevel.CKM_CAST3_CBC_PAD

_LowLevel.CKM_CAST5_KEY_GEN_swigconstant(_LowLevel)
CKM_CAST5_KEY_GEN = _LowLevel.CKM_CAST5_KEY_GEN

_LowLevel.CKM_CAST128_KEY_GEN_swigconstant(_LowLevel)
CKM_CAST128_KEY_GEN = _LowLevel.CKM_CAST128_KEY_GEN

_LowLevel.CKM_CAST5_ECB_swigconstant(_LowLevel)
CKM_CAST5_ECB = _LowLevel.CKM_CAST5_ECB

_LowLevel.CKM_CAST128_ECB_swigconstant(_LowLevel)
CKM_CAST128_ECB = _LowLevel.CKM_CAST128_ECB

_LowLevel.CKM_CAST5_CBC_swigconstant(_LowLevel)
CKM_CAST5_CBC = _LowLevel.CKM_CAST5_CBC

_LowLevel.CKM_CAST128_CBC_swigconstant(_LowLevel)
CKM_CAST128_CBC = _LowLevel.CKM_CAST128_CBC

_LowLevel.CKM_CAST5_MAC_swigconstant(_LowLevel)
CKM_CAST5_MAC = _LowLevel.CKM_CAST5_MAC

_LowLevel.CKM_CAST128_MAC_swigconstant(_LowLevel)
CKM_CAST128_MAC = _LowLevel.CKM_CAST128_MAC

_LowLevel.CKM_CAST5_MAC_GENERAL_swigconstant(_LowLevel)
CKM_CAST5_MAC_GENERAL = _LowLevel.CKM_CAST5_MAC_GENERAL

_LowLevel.CKM_CAST128_MAC_GENERAL_swigconstant(_LowLevel)
CKM_CAST128_MAC_GENERAL = _LowLevel.CKM_CAST128_MAC_GENERAL

_LowLevel.CKM_CAST5_CBC_PAD_swigconstant(_LowLevel)
CKM_CAST5_CBC_PAD = _LowLevel.CKM_CAST5_CBC_PAD

_LowLevel.CKM_CAST128_CBC_PAD_swigconstant(_LowLevel)
CKM_CAST128_CBC_PAD = _LowLevel.CKM_CAST128_CBC_PAD

_LowLevel.CKM_RC5_KEY_GEN_swigconstant(_LowLevel)
CKM_RC5_KEY_GEN = _LowLevel.CKM_RC5_KEY_GEN

_LowLevel.CKM_RC5_ECB_swigconstant(_LowLevel)
CKM_RC5_ECB = _LowLevel.CKM_RC5_ECB

_LowLevel.CKM_RC5_CBC_swigconstant(_LowLevel)
CKM_RC5_CBC = _LowLevel.CKM_RC5_CBC

_LowLevel.CKM_RC5_MAC_swigconstant(_LowLevel)
CKM_RC5_MAC = _LowLevel.CKM_RC5_MAC

_LowLevel.CKM_RC5_MAC_GENERAL_swigconstant(_LowLevel)
CKM_RC5_MAC_GENERAL = _LowLevel.CKM_RC5_MAC_GENERAL

_LowLevel.CKM_RC5_CBC_PAD_swigconstant(_LowLevel)
CKM_RC5_CBC_PAD = _LowLevel.CKM_RC5_CBC_PAD

_LowLevel.CKM_IDEA_KEY_GEN_swigconstant(_LowLevel)
CKM_IDEA_KEY_GEN = _LowLevel.CKM_IDEA_KEY_GEN

_LowLevel.CKM_IDEA_ECB_swigconstant(_LowLevel)
CKM_IDEA_ECB = _LowLevel.CKM_IDEA_ECB

_LowLevel.CKM_IDEA_CBC_swigconstant(_LowLevel)
CKM_IDEA_CBC = _LowLevel.CKM_IDEA_CBC

_LowLevel.CKM_IDEA_MAC_swigconstant(_LowLevel)
CKM_IDEA_MAC = _LowLevel.CKM_IDEA_MAC

_LowLevel.CKM_IDEA_MAC_GENERAL_swigconstant(_LowLevel)
CKM_IDEA_MAC_GENERAL = _LowLevel.CKM_IDEA_MAC_GENERAL

_LowLevel.CKM_IDEA_CBC_PAD_swigconstant(_LowLevel)
CKM_IDEA_CBC_PAD = _LowLevel.CKM_IDEA_CBC_PAD

_LowLevel.CKM_GENERIC_SECRET_KEY_GEN_swigconstant(_LowLevel)
CKM_GENERIC_SECRET_KEY_GEN = _LowLevel.CKM_GENERIC_SECRET_KEY_GEN

_LowLevel.CKM_CONCATENATE_BASE_AND_KEY_swigconstant(_LowLevel)
CKM_CONCATENATE_BASE_AND_KEY = _LowLevel.CKM_CONCATENATE_BASE_AND_KEY

_LowLevel.CKM_CONCATENATE_BASE_AND_DATA_swigconstant(_LowLevel)
CKM_CONCATENATE_BASE_AND_DATA = _LowLevel.CKM_CONCATENATE_BASE_AND_DATA

_LowLevel.CKM_CONCATENATE_DATA_AND_BASE_swigconstant(_LowLevel)
CKM_CONCATENATE_DATA_AND_BASE = _LowLevel.CKM_CONCATENATE_DATA_AND_BASE

_LowLevel.CKM_XOR_BASE_AND_DATA_swigconstant(_LowLevel)
CKM_XOR_BASE_AND_DATA = _LowLevel.CKM_XOR_BASE_AND_DATA

_LowLevel.CKM_EXTRACT_KEY_FROM_KEY_swigconstant(_LowLevel)
CKM_EXTRACT_KEY_FROM_KEY = _LowLevel.CKM_EXTRACT_KEY_FROM_KEY

_LowLevel.CKM_SSL3_PRE_MASTER_KEY_GEN_swigconstant(_LowLevel)
CKM_SSL3_PRE_MASTER_KEY_GEN = _LowLevel.CKM_SSL3_PRE_MASTER_KEY_GEN

_LowLevel.CKM_SSL3_MASTER_KEY_DERIVE_swigconstant(_LowLevel)
CKM_SSL3_MASTER_KEY_DERIVE = _LowLevel.CKM_SSL3_MASTER_KEY_DERIVE

_LowLevel.CKM_SSL3_KEY_AND_MAC_DERIVE_swigconstant(_LowLevel)
CKM_SSL3_KEY_AND_MAC_DERIVE = _LowLevel.CKM_SSL3_KEY_AND_MAC_DERIVE

_LowLevel.CKM_SSL3_MASTER_KEY_DERIVE_DH_swigconstant(_LowLevel)
CKM_SSL3_MASTER_KEY_DERIVE_DH = _LowLevel.CKM_SSL3_MASTER_KEY_DERIVE_DH

_LowLevel.CKM_TLS_PRE_MASTER_KEY_GEN_swigconstant(_LowLevel)
CKM_TLS_PRE_MASTER_KEY_GEN = _LowLevel.CKM_TLS_PRE_MASTER_KEY_GEN

_LowLevel.CKM_TLS_MASTER_KEY_DERIVE_swigconstant(_LowLevel)
CKM_TLS_MASTER_KEY_DERIVE = _LowLevel.CKM_TLS_MASTER_KEY_DERIVE

_LowLevel.CKM_TLS_KEY_AND_MAC_DERIVE_swigconstant(_LowLevel)
CKM_TLS_KEY_AND_MAC_DERIVE = _LowLevel.CKM_TLS_KEY_AND_MAC_DERIVE

_LowLevel.CKM_TLS_MASTER_KEY_DERIVE_DH_swigconstant(_LowLevel)
CKM_TLS_MASTER_KEY_DERIVE_DH = _LowLevel.CKM_TLS_MASTER_KEY_DERIVE_DH

_LowLevel.CKM_TLS_PRF_swigconstant(_LowLevel)
CKM_TLS_PRF = _LowLevel.CKM_TLS_PRF

_LowLevel.CKM_SSL3_MD5_MAC_swigconstant(_LowLevel)
CKM_SSL3_MD5_MAC = _LowLevel.CKM_SSL3_MD5_MAC

_LowLevel.CKM_SSL3_SHA1_MAC_swigconstant(_LowLevel)
CKM_SSL3_SHA1_MAC = _LowLevel.CKM_SSL3_SHA1_MAC

_LowLevel.CKM_MD5_KEY_DERIVATION_swigconstant(_LowLevel)
CKM_MD5_KEY_DERIVATION = _LowLevel.CKM_MD5_KEY_DERIVATION

_LowLevel.CKM_MD2_KEY_DERIVATION_swigconstant(_LowLevel)
CKM_MD2_KEY_DERIVATION = _LowLevel.CKM_MD2_KEY_DERIVATION

_LowLevel.CKM_SHA1_KEY_DERIVATION_swigconstant(_LowLevel)
CKM_SHA1_KEY_DERIVATION = _LowLevel.CKM_SHA1_KEY_DERIVATION

_LowLevel.CKM_SHA256_KEY_DERIVATION_swigconstant(_LowLevel)
CKM_SHA256_KEY_DERIVATION = _LowLevel.CKM_SHA256_KEY_DERIVATION

_LowLevel.CKM_SHA384_KEY_DERIVATION_swigconstant(_LowLevel)
CKM_SHA384_KEY_DERIVATION = _LowLevel.CKM_SHA384_KEY_DERIVATION

_LowLevel.CKM_SHA512_KEY_DERIVATION_swigconstant(_LowLevel)
CKM_SHA512_KEY_DERIVATION = _LowLevel.CKM_SHA512_KEY_DERIVATION

_LowLevel.CKM_SHA224_KEY_DERIVATION_swigconstant(_LowLevel)
CKM_SHA224_KEY_DERIVATION = _LowLevel.CKM_SHA224_KEY_DERIVATION

_LowLevel.CKM_PBE_MD2_DES_CBC_swigconstant(_LowLevel)
CKM_PBE_MD2_DES_CBC = _LowLevel.CKM_PBE_MD2_DES_CBC

_LowLevel.CKM_PBE_MD5_DES_CBC_swigconstant(_LowLevel)
CKM_PBE_MD5_DES_CBC = _LowLevel.CKM_PBE_MD5_DES_CBC

_LowLevel.CKM_PBE_MD5_CAST_CBC_swigconstant(_LowLevel)
CKM_PBE_MD5_CAST_CBC = _LowLevel.CKM_PBE_MD5_CAST_CBC

_LowLevel.CKM_PBE_MD5_CAST3_CBC_swigconstant(_LowLevel)
CKM_PBE_MD5_CAST3_CBC = _LowLevel.CKM_PBE_MD5_CAST3_CBC

_LowLevel.CKM_PBE_MD5_CAST5_CBC_swigconstant(_LowLevel)
CKM_PBE_MD5_CAST5_CBC = _LowLevel.CKM_PBE_MD5_CAST5_CBC

_LowLevel.CKM_PBE_MD5_CAST128_CBC_swigconstant(_LowLevel)
CKM_PBE_MD5_CAST128_CBC = _LowLevel.CKM_PBE_MD5_CAST128_CBC

_LowLevel.CKM_PBE_SHA1_CAST5_CBC_swigconstant(_LowLevel)
CKM_PBE_SHA1_CAST5_CBC = _LowLevel.CKM_PBE_SHA1_CAST5_CBC

_LowLevel.CKM_PBE_SHA1_CAST128_CBC_swigconstant(_LowLevel)
CKM_PBE_SHA1_CAST128_CBC = _LowLevel.CKM_PBE_SHA1_CAST128_CBC

_LowLevel.CKM_PBE_SHA1_RC4_128_swigconstant(_LowLevel)
CKM_PBE_SHA1_RC4_128 = _LowLevel.CKM_PBE_SHA1_RC4_128

_LowLevel.CKM_PBE_SHA1_RC4_40_swigconstant(_LowLevel)
CKM_PBE_SHA1_RC4_40 = _LowLevel.CKM_PBE_SHA1_RC4_40

_LowLevel.CKM_PBE_SHA1_DES3_EDE_CBC_swigconstant(_LowLevel)
CKM_PBE_SHA1_DES3_EDE_CBC = _LowLevel.CKM_PBE_SHA1_DES3_EDE_CBC

_LowLevel.CKM_PBE_SHA1_DES2_EDE_CBC_swigconstant(_LowLevel)
CKM_PBE_SHA1_DES2_EDE_CBC = _LowLevel.CKM_PBE_SHA1_DES2_EDE_CBC

_LowLevel.CKM_PBE_SHA1_RC2_128_CBC_swigconstant(_LowLevel)
CKM_PBE_SHA1_RC2_128_CBC = _LowLevel.CKM_PBE_SHA1_RC2_128_CBC

_LowLevel.CKM_PBE_SHA1_RC2_40_CBC_swigconstant(_LowLevel)
CKM_PBE_SHA1_RC2_40_CBC = _LowLevel.CKM_PBE_SHA1_RC2_40_CBC

_LowLevel.CKM_PKCS5_PBKD2_swigconstant(_LowLevel)
CKM_PKCS5_PBKD2 = _LowLevel.CKM_PKCS5_PBKD2

_LowLevel.CKM_PBA_SHA1_WITH_SHA1_HMAC_swigconstant(_LowLevel)
CKM_PBA_SHA1_WITH_SHA1_HMAC = _LowLevel.CKM_PBA_SHA1_WITH_SHA1_HMAC

_LowLevel.CKM_WTLS_PRE_MASTER_KEY_GEN_swigconstant(_LowLevel)
CKM_WTLS_PRE_MASTER_KEY_GEN = _LowLevel.CKM_WTLS_PRE_MASTER_KEY_GEN

_LowLevel.CKM_WTLS_MASTER_KEY_DERIVE_swigconstant(_LowLevel)
CKM_WTLS_MASTER_KEY_DERIVE = _LowLevel.CKM_WTLS_MASTER_KEY_DERIVE

_LowLevel.CKM_WTLS_MASTER_KEY_DERIVE_DH_ECC_swigconstant(_LowLevel)
CKM_WTLS_MASTER_KEY_DERIVE_DH_ECC = _LowLevel.CKM_WTLS_MASTER_KEY_DERIVE_DH_ECC

_LowLevel.CKM_WTLS_PRF_swigconstant(_LowLevel)
CKM_WTLS_PRF = _LowLevel.CKM_WTLS_PRF

_LowLevel.CKM_WTLS_SERVER_KEY_AND_MAC_DERIVE_swigconstant(_LowLevel)
CKM_WTLS_SERVER_KEY_AND_MAC_DERIVE = _LowLevel.CKM_WTLS_SERVER_KEY_AND_MAC_DERIVE

_LowLevel.CKM_WTLS_CLIENT_KEY_AND_MAC_DERIVE_swigconstant(_LowLevel)
CKM_WTLS_CLIENT_KEY_AND_MAC_DERIVE = _LowLevel.CKM_WTLS_CLIENT_KEY_AND_MAC_DERIVE

_LowLevel.CKM_TLS10_MAC_SERVER_swigconstant(_LowLevel)
CKM_TLS10_MAC_SERVER = _LowLevel.CKM_TLS10_MAC_SERVER

_LowLevel.CKM_TLS10_MAC_CLIENT_swigconstant(_LowLevel)
CKM_TLS10_MAC_CLIENT = _LowLevel.CKM_TLS10_MAC_CLIENT

_LowLevel.CKM_TLS12_MAC_swigconstant(_LowLevel)
CKM_TLS12_MAC = _LowLevel.CKM_TLS12_MAC

_LowLevel.CKM_TLS12_KDF_swigconstant(_LowLevel)
CKM_TLS12_KDF = _LowLevel.CKM_TLS12_KDF

_LowLevel.CKM_TLS12_MASTER_KEY_DERIVE_swigconstant(_LowLevel)
CKM_TLS12_MASTER_KEY_DERIVE = _LowLevel.CKM_TLS12_MASTER_KEY_DERIVE

_LowLevel.CKM_TLS12_KEY_AND_MAC_DERIVE_swigconstant(_LowLevel)
CKM_TLS12_KEY_AND_MAC_DERIVE = _LowLevel.CKM_TLS12_KEY_AND_MAC_DERIVE

_LowLevel.CKM_TLS12_MASTER_KEY_DERIVE_DH_swigconstant(_LowLevel)
CKM_TLS12_MASTER_KEY_DERIVE_DH = _LowLevel.CKM_TLS12_MASTER_KEY_DERIVE_DH

_LowLevel.CKM_TLS12_KEY_SAFE_DERIVE_swigconstant(_LowLevel)
CKM_TLS12_KEY_SAFE_DERIVE = _LowLevel.CKM_TLS12_KEY_SAFE_DERIVE

_LowLevel.CKM_TLS_MAC_swigconstant(_LowLevel)
CKM_TLS_MAC = _LowLevel.CKM_TLS_MAC

_LowLevel.CKM_TLS_KDF_swigconstant(_LowLevel)
CKM_TLS_KDF = _LowLevel.CKM_TLS_KDF

_LowLevel.CKM_KEY_WRAP_LYNKS_swigconstant(_LowLevel)
CKM_KEY_WRAP_LYNKS = _LowLevel.CKM_KEY_WRAP_LYNKS

_LowLevel.CKM_KEY_WRAP_SET_OAEP_swigconstant(_LowLevel)
CKM_KEY_WRAP_SET_OAEP = _LowLevel.CKM_KEY_WRAP_SET_OAEP

_LowLevel.CKM_CMS_SIG_swigconstant(_LowLevel)
CKM_CMS_SIG = _LowLevel.CKM_CMS_SIG

_LowLevel.CKM_KIP_DERIVE_swigconstant(_LowLevel)
CKM_KIP_DERIVE = _LowLevel.CKM_KIP_DERIVE

_LowLevel.CKM_KIP_WRAP_swigconstant(_LowLevel)
CKM_KIP_WRAP = _LowLevel.CKM_KIP_WRAP

_LowLevel.CKM_KIP_MAC_swigconstant(_LowLevel)
CKM_KIP_MAC = _LowLevel.CKM_KIP_MAC

_LowLevel.CKM_CAMELLIA_KEY_GEN_swigconstant(_LowLevel)
CKM_CAMELLIA_KEY_GEN = _LowLevel.CKM_CAMELLIA_KEY_GEN

_LowLevel.CKM_CAMELLIA_ECB_swigconstant(_LowLevel)
CKM_CAMELLIA_ECB = _LowLevel.CKM_CAMELLIA_ECB

_LowLevel.CKM_CAMELLIA_CBC_swigconstant(_LowLevel)
CKM_CAMELLIA_CBC = _LowLevel.CKM_CAMELLIA_CBC

_LowLevel.CKM_CAMELLIA_MAC_swigconstant(_LowLevel)
CKM_CAMELLIA_MAC = _LowLevel.CKM_CAMELLIA_MAC

_LowLevel.CKM_CAMELLIA_MAC_GENERAL_swigconstant(_LowLevel)
CKM_CAMELLIA_MAC_GENERAL = _LowLevel.CKM_CAMELLIA_MAC_GENERAL

_LowLevel.CKM_CAMELLIA_CBC_PAD_swigconstant(_LowLevel)
CKM_CAMELLIA_CBC_PAD = _LowLevel.CKM_CAMELLIA_CBC_PAD

_LowLevel.CKM_CAMELLIA_ECB_ENCRYPT_DATA_swigconstant(_LowLevel)
CKM_CAMELLIA_ECB_ENCRYPT_DATA = _LowLevel.CKM_CAMELLIA_ECB_ENCRYPT_DATA

_LowLevel.CKM_CAMELLIA_CBC_ENCRYPT_DATA_swigconstant(_LowLevel)
CKM_CAMELLIA_CBC_ENCRYPT_DATA = _LowLevel.CKM_CAMELLIA_CBC_ENCRYPT_DATA

_LowLevel.CKM_CAMELLIA_CTR_swigconstant(_LowLevel)
CKM_CAMELLIA_CTR = _LowLevel.CKM_CAMELLIA_CTR

_LowLevel.CKM_ARIA_KEY_GEN_swigconstant(_LowLevel)
CKM_ARIA_KEY_GEN = _LowLevel.CKM_ARIA_KEY_GEN

_LowLevel.CKM_ARIA_ECB_swigconstant(_LowLevel)
CKM_ARIA_ECB = _LowLevel.CKM_ARIA_ECB

_LowLevel.CKM_ARIA_CBC_swigconstant(_LowLevel)
CKM_ARIA_CBC = _LowLevel.CKM_ARIA_CBC

_LowLevel.CKM_ARIA_MAC_swigconstant(_LowLevel)
CKM_ARIA_MAC = _LowLevel.CKM_ARIA_MAC

_LowLevel.CKM_ARIA_MAC_GENERAL_swigconstant(_LowLevel)
CKM_ARIA_MAC_GENERAL = _LowLevel.CKM_ARIA_MAC_GENERAL

_LowLevel.CKM_ARIA_CBC_PAD_swigconstant(_LowLevel)
CKM_ARIA_CBC_PAD = _LowLevel.CKM_ARIA_CBC_PAD

_LowLevel.CKM_ARIA_ECB_ENCRYPT_DATA_swigconstant(_LowLevel)
CKM_ARIA_ECB_ENCRYPT_DATA = _LowLevel.CKM_ARIA_ECB_ENCRYPT_DATA

_LowLevel.CKM_ARIA_CBC_ENCRYPT_DATA_swigconstant(_LowLevel)
CKM_ARIA_CBC_ENCRYPT_DATA = _LowLevel.CKM_ARIA_CBC_ENCRYPT_DATA

_LowLevel.CKM_SEED_KEY_GEN_swigconstant(_LowLevel)
CKM_SEED_KEY_GEN = _LowLevel.CKM_SEED_KEY_GEN

_LowLevel.CKM_SEED_ECB_swigconstant(_LowLevel)
CKM_SEED_ECB = _LowLevel.CKM_SEED_ECB

_LowLevel.CKM_SEED_CBC_swigconstant(_LowLevel)
CKM_SEED_CBC = _LowLevel.CKM_SEED_CBC

_LowLevel.CKM_SEED_MAC_swigconstant(_LowLevel)
CKM_SEED_MAC = _LowLevel.CKM_SEED_MAC

_LowLevel.CKM_SEED_MAC_GENERAL_swigconstant(_LowLevel)
CKM_SEED_MAC_GENERAL = _LowLevel.CKM_SEED_MAC_GENERAL

_LowLevel.CKM_SEED_CBC_PAD_swigconstant(_LowLevel)
CKM_SEED_CBC_PAD = _LowLevel.CKM_SEED_CBC_PAD

_LowLevel.CKM_SEED_ECB_ENCRYPT_DATA_swigconstant(_LowLevel)
CKM_SEED_ECB_ENCRYPT_DATA = _LowLevel.CKM_SEED_ECB_ENCRYPT_DATA

_LowLevel.CKM_SEED_CBC_ENCRYPT_DATA_swigconstant(_LowLevel)
CKM_SEED_CBC_ENCRYPT_DATA = _LowLevel.CKM_SEED_CBC_ENCRYPT_DATA

_LowLevel.CKM_SKIPJACK_KEY_GEN_swigconstant(_LowLevel)
CKM_SKIPJACK_KEY_GEN = _LowLevel.CKM_SKIPJACK_KEY_GEN

_LowLevel.CKM_SKIPJACK_ECB64_swigconstant(_LowLevel)
CKM_SKIPJACK_ECB64 = _LowLevel.CKM_SKIPJACK_ECB64

_LowLevel.CKM_SKIPJACK_CBC64_swigconstant(_LowLevel)
CKM_SKIPJACK_CBC64 = _LowLevel.CKM_SKIPJACK_CBC64

_LowLevel.CKM_SKIPJACK_OFB64_swigconstant(_LowLevel)
CKM_SKIPJACK_OFB64 = _LowLevel.CKM_SKIPJACK_OFB64

_LowLevel.CKM_SKIPJACK_CFB64_swigconstant(_LowLevel)
CKM_SKIPJACK_CFB64 = _LowLevel.CKM_SKIPJACK_CFB64

_LowLevel.CKM_SKIPJACK_CFB32_swigconstant(_LowLevel)
CKM_SKIPJACK_CFB32 = _LowLevel.CKM_SKIPJACK_CFB32

_LowLevel.CKM_SKIPJACK_CFB16_swigconstant(_LowLevel)
CKM_SKIPJACK_CFB16 = _LowLevel.CKM_SKIPJACK_CFB16

_LowLevel.CKM_SKIPJACK_CFB8_swigconstant(_LowLevel)
CKM_SKIPJACK_CFB8 = _LowLevel.CKM_SKIPJACK_CFB8

_LowLevel.CKM_SKIPJACK_WRAP_swigconstant(_LowLevel)
CKM_SKIPJACK_WRAP = _LowLevel.CKM_SKIPJACK_WRAP

_LowLevel.CKM_SKIPJACK_PRIVATE_WRAP_swigconstant(_LowLevel)
CKM_SKIPJACK_PRIVATE_WRAP = _LowLevel.CKM_SKIPJACK_PRIVATE_WRAP

_LowLevel.CKM_SKIPJACK_RELAYX_swigconstant(_LowLevel)
CKM_SKIPJACK_RELAYX = _LowLevel.CKM_SKIPJACK_RELAYX

_LowLevel.CKM_KEA_KEY_PAIR_GEN_swigconstant(_LowLevel)
CKM_KEA_KEY_PAIR_GEN = _LowLevel.CKM_KEA_KEY_PAIR_GEN

_LowLevel.CKM_KEA_KEY_DERIVE_swigconstant(_LowLevel)
CKM_KEA_KEY_DERIVE = _LowLevel.CKM_KEA_KEY_DERIVE

_LowLevel.CKM_KEA_DERIVE_swigconstant(_LowLevel)
CKM_KEA_DERIVE = _LowLevel.CKM_KEA_DERIVE

_LowLevel.CKM_FORTEZZA_TIMESTAMP_swigconstant(_LowLevel)
CKM_FORTEZZA_TIMESTAMP = _LowLevel.CKM_FORTEZZA_TIMESTAMP

_LowLevel.CKM_BATON_KEY_GEN_swigconstant(_LowLevel)
CKM_BATON_KEY_GEN = _LowLevel.CKM_BATON_KEY_GEN

_LowLevel.CKM_BATON_ECB128_swigconstant(_LowLevel)
CKM_BATON_ECB128 = _LowLevel.CKM_BATON_ECB128

_LowLevel.CKM_BATON_ECB96_swigconstant(_LowLevel)
CKM_BATON_ECB96 = _LowLevel.CKM_BATON_ECB96

_LowLevel.CKM_BATON_CBC128_swigconstant(_LowLevel)
CKM_BATON_CBC128 = _LowLevel.CKM_BATON_CBC128

_LowLevel.CKM_BATON_COUNTER_swigconstant(_LowLevel)
CKM_BATON_COUNTER = _LowLevel.CKM_BATON_COUNTER

_LowLevel.CKM_BATON_SHUFFLE_swigconstant(_LowLevel)
CKM_BATON_SHUFFLE = _LowLevel.CKM_BATON_SHUFFLE

_LowLevel.CKM_BATON_WRAP_swigconstant(_LowLevel)
CKM_BATON_WRAP = _LowLevel.CKM_BATON_WRAP

_LowLevel.CKM_ECDSA_KEY_PAIR_GEN_swigconstant(_LowLevel)
CKM_ECDSA_KEY_PAIR_GEN = _LowLevel.CKM_ECDSA_KEY_PAIR_GEN

_LowLevel.CKM_EC_KEY_PAIR_GEN_swigconstant(_LowLevel)
CKM_EC_KEY_PAIR_GEN = _LowLevel.CKM_EC_KEY_PAIR_GEN

_LowLevel.CKM_ECDSA_swigconstant(_LowLevel)
CKM_ECDSA = _LowLevel.CKM_ECDSA

_LowLevel.CKM_ECDSA_SHA1_swigconstant(_LowLevel)
CKM_ECDSA_SHA1 = _LowLevel.CKM_ECDSA_SHA1

_LowLevel.CKM_ECDSA_SHA224_swigconstant(_LowLevel)
CKM_ECDSA_SHA224 = _LowLevel.CKM_ECDSA_SHA224

_LowLevel.CKM_ECDSA_SHA256_swigconstant(_LowLevel)
CKM_ECDSA_SHA256 = _LowLevel.CKM_ECDSA_SHA256

_LowLevel.CKM_ECDSA_SHA384_swigconstant(_LowLevel)
CKM_ECDSA_SHA384 = _LowLevel.CKM_ECDSA_SHA384

_LowLevel.CKM_ECDSA_SHA512_swigconstant(_LowLevel)
CKM_ECDSA_SHA512 = _LowLevel.CKM_ECDSA_SHA512

_LowLevel.CKM_ECDH1_DERIVE_swigconstant(_LowLevel)
CKM_ECDH1_DERIVE = _LowLevel.CKM_ECDH1_DERIVE

_LowLevel.CKM_ECDH1_COFACTOR_DERIVE_swigconstant(_LowLevel)
CKM_ECDH1_COFACTOR_DERIVE = _LowLevel.CKM_ECDH1_COFACTOR_DERIVE

_LowLevel.CKM_ECMQV_DERIVE_swigconstant(_LowLevel)
CKM_ECMQV_DERIVE = _LowLevel.CKM_ECMQV_DERIVE

_LowLevel.CKM_ECDH_AES_KEY_WRAP_swigconstant(_LowLevel)
CKM_ECDH_AES_KEY_WRAP = _LowLevel.CKM_ECDH_AES_KEY_WRAP

_LowLevel.CKM_RSA_AES_KEY_WRAP_swigconstant(_LowLevel)
CKM_RSA_AES_KEY_WRAP = _LowLevel.CKM_RSA_AES_KEY_WRAP

_LowLevel.CKM_JUNIPER_KEY_GEN_swigconstant(_LowLevel)
CKM_JUNIPER_KEY_GEN = _LowLevel.CKM_JUNIPER_KEY_GEN

_LowLevel.CKM_JUNIPER_ECB128_swigconstant(_LowLevel)
CKM_JUNIPER_ECB128 = _LowLevel.CKM_JUNIPER_ECB128

_LowLevel.CKM_JUNIPER_CBC128_swigconstant(_LowLevel)
CKM_JUNIPER_CBC128 = _LowLevel.CKM_JUNIPER_CBC128

_LowLevel.CKM_JUNIPER_COUNTER_swigconstant(_LowLevel)
CKM_JUNIPER_COUNTER = _LowLevel.CKM_JUNIPER_COUNTER

_LowLevel.CKM_JUNIPER_SHUFFLE_swigconstant(_LowLevel)
CKM_JUNIPER_SHUFFLE = _LowLevel.CKM_JUNIPER_SHUFFLE

_LowLevel.CKM_JUNIPER_WRAP_swigconstant(_LowLevel)
CKM_JUNIPER_WRAP = _LowLevel.CKM_JUNIPER_WRAP

_LowLevel.CKM_FASTHASH_swigconstant(_LowLevel)
CKM_FASTHASH = _LowLevel.CKM_FASTHASH

_LowLevel.CKM_AES_KEY_GEN_swigconstant(_LowLevel)
CKM_AES_KEY_GEN = _LowLevel.CKM_AES_KEY_GEN

_LowLevel.CKM_AES_ECB_swigconstant(_LowLevel)
CKM_AES_ECB = _LowLevel.CKM_AES_ECB

_LowLevel.CKM_AES_CBC_swigconstant(_LowLevel)
CKM_AES_CBC = _LowLevel.CKM_AES_CBC

_LowLevel.CKM_AES_MAC_swigconstant(_LowLevel)
CKM_AES_MAC = _LowLevel.CKM_AES_MAC

_LowLevel.CKM_AES_MAC_GENERAL_swigconstant(_LowLevel)
CKM_AES_MAC_GENERAL = _LowLevel.CKM_AES_MAC_GENERAL

_LowLevel.CKM_AES_CBC_PAD_swigconstant(_LowLevel)
CKM_AES_CBC_PAD = _LowLevel.CKM_AES_CBC_PAD

_LowLevel.CKM_AES_CTR_swigconstant(_LowLevel)
CKM_AES_CTR = _LowLevel.CKM_AES_CTR

_LowLevel.CKM_AES_GCM_swigconstant(_LowLevel)
CKM_AES_GCM = _LowLevel.CKM_AES_GCM

_LowLevel.CKM_AES_CCM_swigconstant(_LowLevel)
CKM_AES_CCM = _LowLevel.CKM_AES_CCM

_LowLevel.CKM_AES_CTS_swigconstant(_LowLevel)
CKM_AES_CTS = _LowLevel.CKM_AES_CTS

_LowLevel.CKM_AES_CMAC_swigconstant(_LowLevel)
CKM_AES_CMAC = _LowLevel.CKM_AES_CMAC

_LowLevel.CKM_AES_CMAC_GENERAL_swigconstant(_LowLevel)
CKM_AES_CMAC_GENERAL = _LowLevel.CKM_AES_CMAC_GENERAL

_LowLevel.CKM_AES_XCBC_MAC_swigconstant(_LowLevel)
CKM_AES_XCBC_MAC = _LowLevel.CKM_AES_XCBC_MAC

_LowLevel.CKM_AES_XCBC_MAC_96_swigconstant(_LowLevel)
CKM_AES_XCBC_MAC_96 = _LowLevel.CKM_AES_XCBC_MAC_96

_LowLevel.CKM_AES_GMAC_swigconstant(_LowLevel)
CKM_AES_GMAC = _LowLevel.CKM_AES_GMAC

_LowLevel.CKM_BLOWFISH_KEY_GEN_swigconstant(_LowLevel)
CKM_BLOWFISH_KEY_GEN = _LowLevel.CKM_BLOWFISH_KEY_GEN

_LowLevel.CKM_BLOWFISH_CBC_swigconstant(_LowLevel)
CKM_BLOWFISH_CBC = _LowLevel.CKM_BLOWFISH_CBC

_LowLevel.CKM_TWOFISH_KEY_GEN_swigconstant(_LowLevel)
CKM_TWOFISH_KEY_GEN = _LowLevel.CKM_TWOFISH_KEY_GEN

_LowLevel.CKM_TWOFISH_CBC_swigconstant(_LowLevel)
CKM_TWOFISH_CBC = _LowLevel.CKM_TWOFISH_CBC

_LowLevel.CKM_BLOWFISH_CBC_PAD_swigconstant(_LowLevel)
CKM_BLOWFISH_CBC_PAD = _LowLevel.CKM_BLOWFISH_CBC_PAD

_LowLevel.CKM_TWOFISH_CBC_PAD_swigconstant(_LowLevel)
CKM_TWOFISH_CBC_PAD = _LowLevel.CKM_TWOFISH_CBC_PAD

_LowLevel.CKM_DES_ECB_ENCRYPT_DATA_swigconstant(_LowLevel)
CKM_DES_ECB_ENCRYPT_DATA = _LowLevel.CKM_DES_ECB_ENCRYPT_DATA

_LowLevel.CKM_DES_CBC_ENCRYPT_DATA_swigconstant(_LowLevel)
CKM_DES_CBC_ENCRYPT_DATA = _LowLevel.CKM_DES_CBC_ENCRYPT_DATA

_LowLevel.CKM_DES3_ECB_ENCRYPT_DATA_swigconstant(_LowLevel)
CKM_DES3_ECB_ENCRYPT_DATA = _LowLevel.CKM_DES3_ECB_ENCRYPT_DATA

_LowLevel.CKM_DES3_CBC_ENCRYPT_DATA_swigconstant(_LowLevel)
CKM_DES3_CBC_ENCRYPT_DATA = _LowLevel.CKM_DES3_CBC_ENCRYPT_DATA

_LowLevel.CKM_AES_ECB_ENCRYPT_DATA_swigconstant(_LowLevel)
CKM_AES_ECB_ENCRYPT_DATA = _LowLevel.CKM_AES_ECB_ENCRYPT_DATA

_LowLevel.CKM_AES_CBC_ENCRYPT_DATA_swigconstant(_LowLevel)
CKM_AES_CBC_ENCRYPT_DATA = _LowLevel.CKM_AES_CBC_ENCRYPT_DATA

_LowLevel.CKM_GOSTR3410_KEY_PAIR_GEN_swigconstant(_LowLevel)
CKM_GOSTR3410_KEY_PAIR_GEN = _LowLevel.CKM_GOSTR3410_KEY_PAIR_GEN

_LowLevel.CKM_GOSTR3410_swigconstant(_LowLevel)
CKM_GOSTR3410 = _LowLevel.CKM_GOSTR3410

_LowLevel.CKM_GOSTR3410_WITH_GOSTR3411_swigconstant(_LowLevel)
CKM_GOSTR3410_WITH_GOSTR3411 = _LowLevel.CKM_GOSTR3410_WITH_GOSTR3411

_LowLevel.CKM_GOSTR3410_KEY_WRAP_swigconstant(_LowLevel)
CKM_GOSTR3410_KEY_WRAP = _LowLevel.CKM_GOSTR3410_KEY_WRAP

_LowLevel.CKM_GOSTR3410_DERIVE_swigconstant(_LowLevel)
CKM_GOSTR3410_DERIVE = _LowLevel.CKM_GOSTR3410_DERIVE

_LowLevel.CKM_GOSTR3411_swigconstant(_LowLevel)
CKM_GOSTR3411 = _LowLevel.CKM_GOSTR3411

_LowLevel.CKM_GOSTR3411_HMAC_swigconstant(_LowLevel)
CKM_GOSTR3411_HMAC = _LowLevel.CKM_GOSTR3411_HMAC

_LowLevel.CKM_GOST28147_KEY_GEN_swigconstant(_LowLevel)
CKM_GOST28147_KEY_GEN = _LowLevel.CKM_GOST28147_KEY_GEN

_LowLevel.CKM_GOST28147_ECB_swigconstant(_LowLevel)
CKM_GOST28147_ECB = _LowLevel.CKM_GOST28147_ECB

_LowLevel.CKM_GOST28147_swigconstant(_LowLevel)
CKM_GOST28147 = _LowLevel.CKM_GOST28147

_LowLevel.CKM_GOST28147_MAC_swigconstant(_LowLevel)
CKM_GOST28147_MAC = _LowLevel.CKM_GOST28147_MAC

_LowLevel.CKM_GOST28147_KEY_WRAP_swigconstant(_LowLevel)
CKM_GOST28147_KEY_WRAP = _LowLevel.CKM_GOST28147_KEY_WRAP

_LowLevel.CKM_DSA_PARAMETER_GEN_swigconstant(_LowLevel)
CKM_DSA_PARAMETER_GEN = _LowLevel.CKM_DSA_PARAMETER_GEN

_LowLevel.CKM_DH_PKCS_PARAMETER_GEN_swigconstant(_LowLevel)
CKM_DH_PKCS_PARAMETER_GEN = _LowLevel.CKM_DH_PKCS_PARAMETER_GEN

_LowLevel.CKM_X9_42_DH_PARAMETER_GEN_swigconstant(_LowLevel)
CKM_X9_42_DH_PARAMETER_GEN = _LowLevel.CKM_X9_42_DH_PARAMETER_GEN

_LowLevel.CKM_DSA_PROBABLISTIC_PARAMETER_GEN_swigconstant(_LowLevel)
CKM_DSA_PROBABLISTIC_PARAMETER_GEN = _LowLevel.CKM_DSA_PROBABLISTIC_PARAMETER_GEN

_LowLevel.CKM_DSA_SHAWE_TAYLOR_PARAMETER_GEN_swigconstant(_LowLevel)
CKM_DSA_SHAWE_TAYLOR_PARAMETER_GEN = _LowLevel.CKM_DSA_SHAWE_TAYLOR_PARAMETER_GEN

_LowLevel.CKM_AES_OFB_swigconstant(_LowLevel)
CKM_AES_OFB = _LowLevel.CKM_AES_OFB

_LowLevel.CKM_AES_CFB64_swigconstant(_LowLevel)
CKM_AES_CFB64 = _LowLevel.CKM_AES_CFB64

_LowLevel.CKM_AES_CFB8_swigconstant(_LowLevel)
CKM_AES_CFB8 = _LowLevel.CKM_AES_CFB8

_LowLevel.CKM_AES_CFB128_swigconstant(_LowLevel)
CKM_AES_CFB128 = _LowLevel.CKM_AES_CFB128

_LowLevel.CKM_AES_CFB1_swigconstant(_LowLevel)
CKM_AES_CFB1 = _LowLevel.CKM_AES_CFB1

_LowLevel.CKM_AES_KEY_WRAP_swigconstant(_LowLevel)
CKM_AES_KEY_WRAP = _LowLevel.CKM_AES_KEY_WRAP

_LowLevel.CKM_AES_KEY_WRAP_PAD_swigconstant(_LowLevel)
CKM_AES_KEY_WRAP_PAD = _LowLevel.CKM_AES_KEY_WRAP_PAD

_LowLevel.CKM_RSA_PKCS_TPM_1_1_swigconstant(_LowLevel)
CKM_RSA_PKCS_TPM_1_1 = _LowLevel.CKM_RSA_PKCS_TPM_1_1

_LowLevel.CKM_RSA_PKCS_OAEP_TPM_1_1_swigconstant(_LowLevel)
CKM_RSA_PKCS_OAEP_TPM_1_1 = _LowLevel.CKM_RSA_PKCS_OAEP_TPM_1_1

_LowLevel.CKM_VENDOR_DEFINED_swigconstant(_LowLevel)
CKM_VENDOR_DEFINED = _LowLevel.CKM_VENDOR_DEFINED

_LowLevel.CKF_HW_swigconstant(_LowLevel)
CKF_HW = _LowLevel.CKF_HW

_LowLevel.CKF_ENCRYPT_swigconstant(_LowLevel)
CKF_ENCRYPT = _LowLevel.CKF_ENCRYPT

_LowLevel.CKF_DECRYPT_swigconstant(_LowLevel)
CKF_DECRYPT = _LowLevel.CKF_DECRYPT

_LowLevel.CKF_DIGEST_swigconstant(_LowLevel)
CKF_DIGEST = _LowLevel.CKF_DIGEST

_LowLevel.CKF_SIGN_swigconstant(_LowLevel)
CKF_SIGN = _LowLevel.CKF_SIGN

_LowLevel.CKF_SIGN_RECOVER_swigconstant(_LowLevel)
CKF_SIGN_RECOVER = _LowLevel.CKF_SIGN_RECOVER

_LowLevel.CKF_VERIFY_swigconstant(_LowLevel)
CKF_VERIFY = _LowLevel.CKF_VERIFY

_LowLevel.CKF_VERIFY_RECOVER_swigconstant(_LowLevel)
CKF_VERIFY_RECOVER = _LowLevel.CKF_VERIFY_RECOVER

_LowLevel.CKF_GENERATE_swigconstant(_LowLevel)
CKF_GENERATE = _LowLevel.CKF_GENERATE

_LowLevel.CKF_GENERATE_KEY_PAIR_swigconstant(_LowLevel)
CKF_GENERATE_KEY_PAIR = _LowLevel.CKF_GENERATE_KEY_PAIR

_LowLevel.CKF_WRAP_swigconstant(_LowLevel)
CKF_WRAP = _LowLevel.CKF_WRAP

_LowLevel.CKF_UNWRAP_swigconstant(_LowLevel)
CKF_UNWRAP = _LowLevel.CKF_UNWRAP

_LowLevel.CKF_DERIVE_swigconstant(_LowLevel)
CKF_DERIVE = _LowLevel.CKF_DERIVE

_LowLevel.CKF_EC_F_P_swigconstant(_LowLevel)
CKF_EC_F_P = _LowLevel.CKF_EC_F_P

_LowLevel.CKF_EC_F_2M_swigconstant(_LowLevel)
CKF_EC_F_2M = _LowLevel.CKF_EC_F_2M

_LowLevel.CKF_EC_ECPARAMETERS_swigconstant(_LowLevel)
CKF_EC_ECPARAMETERS = _LowLevel.CKF_EC_ECPARAMETERS

_LowLevel.CKF_EC_NAMEDCURVE_swigconstant(_LowLevel)
CKF_EC_NAMEDCURVE = _LowLevel.CKF_EC_NAMEDCURVE

_LowLevel.CKF_EC_UNCOMPRESS_swigconstant(_LowLevel)
CKF_EC_UNCOMPRESS = _LowLevel.CKF_EC_UNCOMPRESS

_LowLevel.CKF_EC_COMPRESS_swigconstant(_LowLevel)
CKF_EC_COMPRESS = _LowLevel.CKF_EC_COMPRESS

_LowLevel.CKF_EXTENSION_swigconstant(_LowLevel)
CKF_EXTENSION = _LowLevel.CKF_EXTENSION

_LowLevel.CKR_OK_swigconstant(_LowLevel)
CKR_OK = _LowLevel.CKR_OK

_LowLevel.CKR_CANCEL_swigconstant(_LowLevel)
CKR_CANCEL = _LowLevel.CKR_CANCEL

_LowLevel.CKR_HOST_MEMORY_swigconstant(_LowLevel)
CKR_HOST_MEMORY = _LowLevel.CKR_HOST_MEMORY

_LowLevel.CKR_SLOT_ID_INVALID_swigconstant(_LowLevel)
CKR_SLOT_ID_INVALID = _LowLevel.CKR_SLOT_ID_INVALID

_LowLevel.CKR_GENERAL_ERROR_swigconstant(_LowLevel)
CKR_GENERAL_ERROR = _LowLevel.CKR_GENERAL_ERROR

_LowLevel.CKR_FUNCTION_FAILED_swigconstant(_LowLevel)
CKR_FUNCTION_FAILED = _LowLevel.CKR_FUNCTION_FAILED

_LowLevel.CKR_ARGUMENTS_BAD_swigconstant(_LowLevel)
CKR_ARGUMENTS_BAD = _LowLevel.CKR_ARGUMENTS_BAD

_LowLevel.CKR_NO_EVENT_swigconstant(_LowLevel)
CKR_NO_EVENT = _LowLevel.CKR_NO_EVENT

_LowLevel.CKR_NEED_TO_CREATE_THREADS_swigconstant(_LowLevel)
CKR_NEED_TO_CREATE_THREADS = _LowLevel.CKR_NEED_TO_CREATE_THREADS

_LowLevel.CKR_CANT_LOCK_swigconstant(_LowLevel)
CKR_CANT_LOCK = _LowLevel.CKR_CANT_LOCK

_LowLevel.CKR_ATTRIBUTE_READ_ONLY_swigconstant(_LowLevel)
CKR_ATTRIBUTE_READ_ONLY = _LowLevel.CKR_ATTRIBUTE_READ_ONLY

_LowLevel.CKR_ATTRIBUTE_SENSITIVE_swigconstant(_LowLevel)
CKR_ATTRIBUTE_SENSITIVE = _LowLevel.CKR_ATTRIBUTE_SENSITIVE

_LowLevel.CKR_ATTRIBUTE_TYPE_INVALID_swigconstant(_LowLevel)
CKR_ATTRIBUTE_TYPE_INVALID = _LowLevel.CKR_ATTRIBUTE_TYPE_INVALID

_LowLevel.CKR_ATTRIBUTE_VALUE_INVALID_swigconstant(_LowLevel)
CKR_ATTRIBUTE_VALUE_INVALID = _LowLevel.CKR_ATTRIBUTE_VALUE_INVALID

_LowLevel.CKR_DATA_INVALID_swigconstant(_LowLevel)
CKR_DATA_INVALID = _LowLevel.CKR_DATA_INVALID

_LowLevel.CKR_DATA_LEN_RANGE_swigconstant(_LowLevel)
CKR_DATA_LEN_RANGE = _LowLevel.CKR_DATA_LEN_RANGE

_LowLevel.CKR_DEVICE_ERROR_swigconstant(_LowLevel)
CKR_DEVICE_ERROR = _LowLevel.CKR_DEVICE_ERROR

_LowLevel.CKR_DEVICE_MEMORY_swigconstant(_LowLevel)
CKR_DEVICE_MEMORY = _LowLevel.CKR_DEVICE_MEMORY

_LowLevel.CKR_DEVICE_REMOVED_swigconstant(_LowLevel)
CKR_DEVICE_REMOVED = _LowLevel.CKR_DEVICE_REMOVED

_LowLevel.CKR_ENCRYPTED_DATA_INVALID_swigconstant(_LowLevel)
CKR_ENCRYPTED_DATA_INVALID = _LowLevel.CKR_ENCRYPTED_DATA_INVALID

_LowLevel.CKR_ENCRYPTED_DATA_LEN_RANGE_swigconstant(_LowLevel)
CKR_ENCRYPTED_DATA_LEN_RANGE = _LowLevel.CKR_ENCRYPTED_DATA_LEN_RANGE

_LowLevel.CKR_FUNCTION_CANCELED_swigconstant(_LowLevel)
CKR_FUNCTION_CANCELED = _LowLevel.CKR_FUNCTION_CANCELED

_LowLevel.CKR_FUNCTION_NOT_PARALLEL_swigconstant(_LowLevel)
CKR_FUNCTION_NOT_PARALLEL = _LowLevel.CKR_FUNCTION_NOT_PARALLEL

_LowLevel.CKR_FUNCTION_NOT_SUPPORTED_swigconstant(_LowLevel)
CKR_FUNCTION_NOT_SUPPORTED = _LowLevel.CKR_FUNCTION_NOT_SUPPORTED

_LowLevel.CKR_KEY_HANDLE_INVALID_swigconstant(_LowLevel)
CKR_KEY_HANDLE_INVALID = _LowLevel.CKR_KEY_HANDLE_INVALID

_LowLevel.CKR_KEY_SIZE_RANGE_swigconstant(_LowLevel)
CKR_KEY_SIZE_RANGE = _LowLevel.CKR_KEY_SIZE_RANGE

_LowLevel.CKR_KEY_TYPE_INCONSISTENT_swigconstant(_LowLevel)
CKR_KEY_TYPE_INCONSISTENT = _LowLevel.CKR_KEY_TYPE_INCONSISTENT

_LowLevel.CKR_KEY_NOT_NEEDED_swigconstant(_LowLevel)
CKR_KEY_NOT_NEEDED = _LowLevel.CKR_KEY_NOT_NEEDED

_LowLevel.CKR_KEY_CHANGED_swigconstant(_LowLevel)
CKR_KEY_CHANGED = _LowLevel.CKR_KEY_CHANGED

_LowLevel.CKR_KEY_NEEDED_swigconstant(_LowLevel)
CKR_KEY_NEEDED = _LowLevel.CKR_KEY_NEEDED

_LowLevel.CKR_KEY_INDIGESTIBLE_swigconstant(_LowLevel)
CKR_KEY_INDIGESTIBLE = _LowLevel.CKR_KEY_INDIGESTIBLE

_LowLevel.CKR_KEY_FUNCTION_NOT_PERMITTED_swigconstant(_LowLevel)
CKR_KEY_FUNCTION_NOT_PERMITTED = _LowLevel.CKR_KEY_FUNCTION_NOT_PERMITTED

_LowLevel.CKR_KEY_NOT_WRAPPABLE_swigconstant(_LowLevel)
CKR_KEY_NOT_WRAPPABLE = _LowLevel.CKR_KEY_NOT_WRAPPABLE

_LowLevel.CKR_KEY_UNEXTRACTABLE_swigconstant(_LowLevel)
CKR_KEY_UNEXTRACTABLE = _LowLevel.CKR_KEY_UNEXTRACTABLE

_LowLevel.CKR_MECHANISM_INVALID_swigconstant(_LowLevel)
CKR_MECHANISM_INVALID = _LowLevel.CKR_MECHANISM_INVALID

_LowLevel.CKR_MECHANISM_PARAM_INVALID_swigconstant(_LowLevel)
CKR_MECHANISM_PARAM_INVALID = _LowLevel.CKR_MECHANISM_PARAM_INVALID

_LowLevel.CKR_OBJECT_HANDLE_INVALID_swigconstant(_LowLevel)
CKR_OBJECT_HANDLE_INVALID = _LowLevel.CKR_OBJECT_HANDLE_INVALID

_LowLevel.CKR_OPERATION_ACTIVE_swigconstant(_LowLevel)
CKR_OPERATION_ACTIVE = _LowLevel.CKR_OPERATION_ACTIVE

_LowLevel.CKR_OPERATION_NOT_INITIALIZED_swigconstant(_LowLevel)
CKR_OPERATION_NOT_INITIALIZED = _LowLevel.CKR_OPERATION_NOT_INITIALIZED

_LowLevel.CKR_PIN_INCORRECT_swigconstant(_LowLevel)
CKR_PIN_INCORRECT = _LowLevel.CKR_PIN_INCORRECT

_LowLevel.CKR_PIN_INVALID_swigconstant(_LowLevel)
CKR_PIN_INVALID = _LowLevel.CKR_PIN_INVALID

_LowLevel.CKR_PIN_LEN_RANGE_swigconstant(_LowLevel)
CKR_PIN_LEN_RANGE = _LowLevel.CKR_PIN_LEN_RANGE

_LowLevel.CKR_PIN_EXPIRED_swigconstant(_LowLevel)
CKR_PIN_EXPIRED = _LowLevel.CKR_PIN_EXPIRED

_LowLevel.CKR_PIN_LOCKED_swigconstant(_LowLevel)
CKR_PIN_LOCKED = _LowLevel.CKR_PIN_LOCKED

_LowLevel.CKR_SESSION_CLOSED_swigconstant(_LowLevel)
CKR_SESSION_CLOSED = _LowLevel.CKR_SESSION_CLOSED

_LowLevel.CKR_SESSION_COUNT_swigconstant(_LowLevel)
CKR_SESSION_COUNT = _LowLevel.CKR_SESSION_COUNT

_LowLevel.CKR_SESSION_HANDLE_INVALID_swigconstant(_LowLevel)
CKR_SESSION_HANDLE_INVALID = _LowLevel.CKR_SESSION_HANDLE_INVALID

_LowLevel.CKR_SESSION_PARALLEL_NOT_SUPPORTED_swigconstant(_LowLevel)
CKR_SESSION_PARALLEL_NOT_SUPPORTED = _LowLevel.CKR_SESSION_PARALLEL_NOT_SUPPORTED

_LowLevel.CKR_SESSION_READ_ONLY_swigconstant(_LowLevel)
CKR_SESSION_READ_ONLY = _LowLevel.CKR_SESSION_READ_ONLY

_LowLevel.CKR_SESSION_EXISTS_swigconstant(_LowLevel)
CKR_SESSION_EXISTS = _LowLevel.CKR_SESSION_EXISTS

_LowLevel.CKR_SESSION_READ_ONLY_EXISTS_swigconstant(_LowLevel)
CKR_SESSION_READ_ONLY_EXISTS = _LowLevel.CKR_SESSION_READ_ONLY_EXISTS

_LowLevel.CKR_SESSION_READ_WRITE_SO_EXISTS_swigconstant(_LowLevel)
CKR_SESSION_READ_WRITE_SO_EXISTS = _LowLevel.CKR_SESSION_READ_WRITE_SO_EXISTS

_LowLevel.CKR_SIGNATURE_INVALID_swigconstant(_LowLevel)
CKR_SIGNATURE_INVALID = _LowLevel.CKR_SIGNATURE_INVALID

_LowLevel.CKR_SIGNATURE_LEN_RANGE_swigconstant(_LowLevel)
CKR_SIGNATURE_LEN_RANGE = _LowLevel.CKR_SIGNATURE_LEN_RANGE

_LowLevel.CKR_TEMPLATE_INCOMPLETE_swigconstant(_LowLevel)
CKR_TEMPLATE_INCOMPLETE = _LowLevel.CKR_TEMPLATE_INCOMPLETE

_LowLevel.CKR_TEMPLATE_INCONSISTENT_swigconstant(_LowLevel)
CKR_TEMPLATE_INCONSISTENT = _LowLevel.CKR_TEMPLATE_INCONSISTENT

_LowLevel.CKR_TOKEN_NOT_PRESENT_swigconstant(_LowLevel)
CKR_TOKEN_NOT_PRESENT = _LowLevel.CKR_TOKEN_NOT_PRESENT

_LowLevel.CKR_TOKEN_NOT_RECOGNIZED_swigconstant(_LowLevel)
CKR_TOKEN_NOT_RECOGNIZED = _LowLevel.CKR_TOKEN_NOT_RECOGNIZED

_LowLevel.CKR_TOKEN_WRITE_PROTECTED_swigconstant(_LowLevel)
CKR_TOKEN_WRITE_PROTECTED = _LowLevel.CKR_TOKEN_WRITE_PROTECTED

_LowLevel.CKR_UNWRAPPING_KEY_HANDLE_INVALID_swigconstant(_LowLevel)
CKR_UNWRAPPING_KEY_HANDLE_INVALID = _LowLevel.CKR_UNWRAPPING_KEY_HANDLE_INVALID

_LowLevel.CKR_UNWRAPPING_KEY_SIZE_RANGE_swigconstant(_LowLevel)
CKR_UNWRAPPING_KEY_SIZE_RANGE = _LowLevel.CKR_UNWRAPPING_KEY_SIZE_RANGE

_LowLevel.CKR_UNWRAPPING_KEY_TYPE_INCONSISTENT_swigconstant(_LowLevel)
CKR_UNWRAPPING_KEY_TYPE_INCONSISTENT = _LowLevel.CKR_UNWRAPPING_KEY_TYPE_INCONSISTENT

_LowLevel.CKR_USER_ALREADY_LOGGED_IN_swigconstant(_LowLevel)
CKR_USER_ALREADY_LOGGED_IN = _LowLevel.CKR_USER_ALREADY_LOGGED_IN

_LowLevel.CKR_USER_NOT_LOGGED_IN_swigconstant(_LowLevel)
CKR_USER_NOT_LOGGED_IN = _LowLevel.CKR_USER_NOT_LOGGED_IN

_LowLevel.CKR_USER_PIN_NOT_INITIALIZED_swigconstant(_LowLevel)
CKR_USER_PIN_NOT_INITIALIZED = _LowLevel.CKR_USER_PIN_NOT_INITIALIZED

_LowLevel.CKR_USER_TYPE_INVALID_swigconstant(_LowLevel)
CKR_USER_TYPE_INVALID = _LowLevel.CKR_USER_TYPE_INVALID

_LowLevel.CKR_USER_ANOTHER_ALREADY_LOGGED_IN_swigconstant(_LowLevel)
CKR_USER_ANOTHER_ALREADY_LOGGED_IN = _LowLevel.CKR_USER_ANOTHER_ALREADY_LOGGED_IN

_LowLevel.CKR_USER_TOO_MANY_TYPES_swigconstant(_LowLevel)
CKR_USER_TOO_MANY_TYPES = _LowLevel.CKR_USER_TOO_MANY_TYPES

_LowLevel.CKR_WRAPPED_KEY_INVALID_swigconstant(_LowLevel)
CKR_WRAPPED_KEY_INVALID = _LowLevel.CKR_WRAPPED_KEY_INVALID

_LowLevel.CKR_WRAPPED_KEY_LEN_RANGE_swigconstant(_LowLevel)
CKR_WRAPPED_KEY_LEN_RANGE = _LowLevel.CKR_WRAPPED_KEY_LEN_RANGE

_LowLevel.CKR_WRAPPING_KEY_HANDLE_INVALID_swigconstant(_LowLevel)
CKR_WRAPPING_KEY_HANDLE_INVALID = _LowLevel.CKR_WRAPPING_KEY_HANDLE_INVALID

_LowLevel.CKR_WRAPPING_KEY_SIZE_RANGE_swigconstant(_LowLevel)
CKR_WRAPPING_KEY_SIZE_RANGE = _LowLevel.CKR_WRAPPING_KEY_SIZE_RANGE

_LowLevel.CKR_WRAPPING_KEY_TYPE_INCONSISTENT_swigconstant(_LowLevel)
CKR_WRAPPING_KEY_TYPE_INCONSISTENT = _LowLevel.CKR_WRAPPING_KEY_TYPE_INCONSISTENT

_LowLevel.CKR_RANDOM_SEED_NOT_SUPPORTED_swigconstant(_LowLevel)
CKR_RANDOM_SEED_NOT_SUPPORTED = _LowLevel.CKR_RANDOM_SEED_NOT_SUPPORTED

_LowLevel.CKR_RANDOM_NO_RNG_swigconstant(_LowLevel)
CKR_RANDOM_NO_RNG = _LowLevel.CKR_RANDOM_NO_RNG

_LowLevel.CKR_DOMAIN_PARAMS_INVALID_swigconstant(_LowLevel)
CKR_DOMAIN_PARAMS_INVALID = _LowLevel.CKR_DOMAIN_PARAMS_INVALID

_LowLevel.CKR_BUFFER_TOO_SMALL_swigconstant(_LowLevel)
CKR_BUFFER_TOO_SMALL = _LowLevel.CKR_BUFFER_TOO_SMALL

_LowLevel.CKR_SAVED_STATE_INVALID_swigconstant(_LowLevel)
CKR_SAVED_STATE_INVALID = _LowLevel.CKR_SAVED_STATE_INVALID

_LowLevel.CKR_INFORMATION_SENSITIVE_swigconstant(_LowLevel)
CKR_INFORMATION_SENSITIVE = _LowLevel.CKR_INFORMATION_SENSITIVE

_LowLevel.CKR_STATE_UNSAVEABLE_swigconstant(_LowLevel)
CKR_STATE_UNSAVEABLE = _LowLevel.CKR_STATE_UNSAVEABLE

_LowLevel.CKR_CRYPTOKI_NOT_INITIALIZED_swigconstant(_LowLevel)
CKR_CRYPTOKI_NOT_INITIALIZED = _LowLevel.CKR_CRYPTOKI_NOT_INITIALIZED

_LowLevel.CKR_CRYPTOKI_ALREADY_INITIALIZED_swigconstant(_LowLevel)
CKR_CRYPTOKI_ALREADY_INITIALIZED = _LowLevel.CKR_CRYPTOKI_ALREADY_INITIALIZED

_LowLevel.CKR_MUTEX_BAD_swigconstant(_LowLevel)
CKR_MUTEX_BAD = _LowLevel.CKR_MUTEX_BAD

_LowLevel.CKR_MUTEX_NOT_LOCKED_swigconstant(_LowLevel)
CKR_MUTEX_NOT_LOCKED = _LowLevel.CKR_MUTEX_NOT_LOCKED

_LowLevel.CKR_NEW_PIN_MODE_swigconstant(_LowLevel)
CKR_NEW_PIN_MODE = _LowLevel.CKR_NEW_PIN_MODE

_LowLevel.CKR_NEXT_OTP_swigconstant(_LowLevel)
CKR_NEXT_OTP = _LowLevel.CKR_NEXT_OTP

_LowLevel.CKR_FUNCTION_REJECTED_swigconstant(_LowLevel)
CKR_FUNCTION_REJECTED = _LowLevel.CKR_FUNCTION_REJECTED

_LowLevel.CKR_VENDOR_DEFINED_swigconstant(_LowLevel)
CKR_VENDOR_DEFINED = _LowLevel.CKR_VENDOR_DEFINED

_LowLevel.CKF_LIBRARY_CANT_CREATE_OS_THREADS_swigconstant(_LowLevel)
CKF_LIBRARY_CANT_CREATE_OS_THREADS = _LowLevel.CKF_LIBRARY_CANT_CREATE_OS_THREADS

_LowLevel.CKF_OS_LOCKING_OK_swigconstant(_LowLevel)
CKF_OS_LOCKING_OK = _LowLevel.CKF_OS_LOCKING_OK

_LowLevel.CKF_DONT_BLOCK_swigconstant(_LowLevel)
CKF_DONT_BLOCK = _LowLevel.CKF_DONT_BLOCK

_LowLevel.CKG_MGF1_SHA1_swigconstant(_LowLevel)
CKG_MGF1_SHA1 = _LowLevel.CKG_MGF1_SHA1

_LowLevel.CKG_MGF1_SHA256_swigconstant(_LowLevel)
CKG_MGF1_SHA256 = _LowLevel.CKG_MGF1_SHA256

_LowLevel.CKG_MGF1_SHA384_swigconstant(_LowLevel)
CKG_MGF1_SHA384 = _LowLevel.CKG_MGF1_SHA384

_LowLevel.CKG_MGF1_SHA512_swigconstant(_LowLevel)
CKG_MGF1_SHA512 = _LowLevel.CKG_MGF1_SHA512

_LowLevel.CKG_MGF1_SHA224_swigconstant(_LowLevel)
CKG_MGF1_SHA224 = _LowLevel.CKG_MGF1_SHA224

_LowLevel.CKZ_DATA_SPECIFIED_swigconstant(_LowLevel)
CKZ_DATA_SPECIFIED = _LowLevel.CKZ_DATA_SPECIFIED

_LowLevel.CKD_NULL_swigconstant(_LowLevel)
CKD_NULL = _LowLevel.CKD_NULL

_LowLevel.CKD_SHA1_KDF_swigconstant(_LowLevel)
CKD_SHA1_KDF = _LowLevel.CKD_SHA1_KDF

_LowLevel.CKD_SHA1_KDF_ASN1_swigconstant(_LowLevel)
CKD_SHA1_KDF_ASN1 = _LowLevel.CKD_SHA1_KDF_ASN1

_LowLevel.CKD_SHA1_KDF_CONCATENATE_swigconstant(_LowLevel)
CKD_SHA1_KDF_CONCATENATE = _LowLevel.CKD_SHA1_KDF_CONCATENATE

_LowLevel.CKD_SHA224_KDF_swigconstant(_LowLevel)
CKD_SHA224_KDF = _LowLevel.CKD_SHA224_KDF

_LowLevel.CKD_SHA256_KDF_swigconstant(_LowLevel)
CKD_SHA256_KDF = _LowLevel.CKD_SHA256_KDF

_LowLevel.CKD_SHA384_KDF_swigconstant(_LowLevel)
CKD_SHA384_KDF = _LowLevel.CKD_SHA384_KDF

_LowLevel.CKD_SHA512_KDF_swigconstant(_LowLevel)
CKD_SHA512_KDF = _LowLevel.CKD_SHA512_KDF

_LowLevel.CKD_CPDIVERSIFY_KDF_swigconstant(_LowLevel)
CKD_CPDIVERSIFY_KDF = _LowLevel.CKD_CPDIVERSIFY_KDF

_LowLevel.CKP_PKCS5_PBKD2_HMAC_SHA1_swigconstant(_LowLevel)
CKP_PKCS5_PBKD2_HMAC_SHA1 = _LowLevel.CKP_PKCS5_PBKD2_HMAC_SHA1

_LowLevel.CKP_PKCS5_PBKD2_HMAC_GOSTR3411_swigconstant(_LowLevel)
CKP_PKCS5_PBKD2_HMAC_GOSTR3411 = _LowLevel.CKP_PKCS5_PBKD2_HMAC_GOSTR3411

_LowLevel.CKP_PKCS5_PBKD2_HMAC_SHA224_swigconstant(_LowLevel)
CKP_PKCS5_PBKD2_HMAC_SHA224 = _LowLevel.CKP_PKCS5_PBKD2_HMAC_SHA224

_LowLevel.CKP_PKCS5_PBKD2_HMAC_SHA256_swigconstant(_LowLevel)
CKP_PKCS5_PBKD2_HMAC_SHA256 = _LowLevel.CKP_PKCS5_PBKD2_HMAC_SHA256

_LowLevel.CKP_PKCS5_PBKD2_HMAC_SHA384_swigconstant(_LowLevel)
CKP_PKCS5_PBKD2_HMAC_SHA384 = _LowLevel.CKP_PKCS5_PBKD2_HMAC_SHA384

_LowLevel.CKP_PKCS5_PBKD2_HMAC_SHA512_swigconstant(_LowLevel)
CKP_PKCS5_PBKD2_HMAC_SHA512 = _LowLevel.CKP_PKCS5_PBKD2_HMAC_SHA512

_LowLevel.CKP_PKCS5_PBKD2_HMAC_SHA512_224_swigconstant(_LowLevel)
CKP_PKCS5_PBKD2_HMAC_SHA512_224 = _LowLevel.CKP_PKCS5_PBKD2_HMAC_SHA512_224

_LowLevel.CKP_PKCS5_PBKD2_HMAC_SHA512_256_swigconstant(_LowLevel)
CKP_PKCS5_PBKD2_HMAC_SHA512_256 = _LowLevel.CKP_PKCS5_PBKD2_HMAC_SHA512_256

_LowLevel.CKZ_SALT_SPECIFIED_swigconstant(_LowLevel)
CKZ_SALT_SPECIFIED = _LowLevel.CKZ_SALT_SPECIFIED
class CPKCS11Lib(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CPKCS11Lib, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CPKCS11Lib, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _LowLevel.new_CPKCS11Lib()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _LowLevel.delete_CPKCS11Lib
    __del__ = lambda self: None

    def Load(self, szLib, bAutoCallInitialize):
        return _LowLevel.CPKCS11Lib_Load(self, szLib, bAutoCallInitialize)

    def Unload(self):
        return _LowLevel.CPKCS11Lib_Unload(self)

    def C_Initialize(self):
        return _LowLevel.CPKCS11Lib_C_Initialize(self)

    def C_Finalize(self):
        return _LowLevel.CPKCS11Lib_C_Finalize(self)

    def C_GetInfo(self, pInfo):
        return _LowLevel.CPKCS11Lib_C_GetInfo(self, pInfo)

    def C_GetSlotList(self, tokenPresent, slotList):
        return _LowLevel.CPKCS11Lib_C_GetSlotList(self, tokenPresent, slotList)

    def C_GetSlotInfo(self, slotID, pInfo):
        return _LowLevel.CPKCS11Lib_C_GetSlotInfo(self, slotID, pInfo)

    def C_GetTokenInfo(self, slotID, pInfo):
        return _LowLevel.CPKCS11Lib_C_GetTokenInfo(self, slotID, pInfo)

    def C_InitToken(self, slotID, pPin, pLabel):
        return _LowLevel.CPKCS11Lib_C_InitToken(self, slotID, pPin, pLabel)

    def C_InitPIN(self, hSession, pPin):
        return _LowLevel.CPKCS11Lib_C_InitPIN(self, hSession, pPin)

    def C_SetPIN(self, hSession, pOldPin, pNewPin):
        return _LowLevel.CPKCS11Lib_C_SetPIN(self, hSession, pOldPin, pNewPin)

    def C_OpenSession(self, slotID, flags, outhSession):
        return _LowLevel.CPKCS11Lib_C_OpenSession(self, slotID, flags, outhSession)

    def C_CloseSession(self, hSession):
        return _LowLevel.CPKCS11Lib_C_CloseSession(self, hSession)

    def C_CloseAllSessions(self, slotID):
        return _LowLevel.CPKCS11Lib_C_CloseAllSessions(self, slotID)

    def C_GetSessionInfo(self, hSession, pInfo):
        return _LowLevel.CPKCS11Lib_C_GetSessionInfo(self, hSession, pInfo)

    def C_Login(self, hSession, userType, pPin):
        return _LowLevel.CPKCS11Lib_C_Login(self, hSession, userType, pPin)

    def C_Logout(self, hSession):
        return _LowLevel.CPKCS11Lib_C_Logout(self, hSession)

    def C_CreateObject(self, hSession, Template, outhObject):
        return _LowLevel.CPKCS11Lib_C_CreateObject(self, hSession, Template, outhObject)

    def C_DestroyObject(self, hSession, hObject):
        return _LowLevel.CPKCS11Lib_C_DestroyObject(self, hSession, hObject)

    def C_GetObjectSize(self, hSession, hObject, pulSize):
        return _LowLevel.CPKCS11Lib_C_GetObjectSize(self, hSession, hObject, pulSize)

    def C_GetAttributeValue(self, hSession, hObject, Template):
        return _LowLevel.CPKCS11Lib_C_GetAttributeValue(self, hSession, hObject, Template)

    def C_SetAttributeValue(self, hSession, hObject, Template):
        return _LowLevel.CPKCS11Lib_C_SetAttributeValue(self, hSession, hObject, Template)

    def C_FindObjectsInit(self, hSession, Template):
        return _LowLevel.CPKCS11Lib_C_FindObjectsInit(self, hSession, Template)

    def C_FindObjects(self, hSession, objectsList):
        return _LowLevel.CPKCS11Lib_C_FindObjects(self, hSession, objectsList)

    def C_FindObjectsFinal(self, hSession):
        return _LowLevel.CPKCS11Lib_C_FindObjectsFinal(self, hSession)

    def C_EncryptInit(self, hSession, pMechanism, hKey):
        return _LowLevel.CPKCS11Lib_C_EncryptInit(self, hSession, pMechanism, hKey)

    def C_Encrypt(self, hSession, inData, outEncryptedData):
        return _LowLevel.CPKCS11Lib_C_Encrypt(self, hSession, inData, outEncryptedData)

    def C_EncryptUpdate(self, hSession, inData, outEncryptedData):
        return _LowLevel.CPKCS11Lib_C_EncryptUpdate(self, hSession, inData, outEncryptedData)

    def C_EncryptFinal(self, hSession, outEncryptedData):
        return _LowLevel.CPKCS11Lib_C_EncryptFinal(self, hSession, outEncryptedData)

    def C_DecryptInit(self, hSession, pMechanism, hKey):
        return _LowLevel.CPKCS11Lib_C_DecryptInit(self, hSession, pMechanism, hKey)

    def C_Decrypt(self, hSession, inEncryptedData, outData):
        return _LowLevel.CPKCS11Lib_C_Decrypt(self, hSession, inEncryptedData, outData)

    def C_DecryptUpdate(self, hSession, inEncryptedData, outData):
        return _LowLevel.CPKCS11Lib_C_DecryptUpdate(self, hSession, inEncryptedData, outData)

    def C_DecryptFinal(self, hSession, outData):
        return _LowLevel.CPKCS11Lib_C_DecryptFinal(self, hSession, outData)

    def C_DigestInit(self, hSession, pMechanism):
        return _LowLevel.CPKCS11Lib_C_DigestInit(self, hSession, pMechanism)

    def C_Digest(self, hSession, inData, outDigest):
        return _LowLevel.CPKCS11Lib_C_Digest(self, hSession, inData, outDigest)

    def C_DigestUpdate(self, hSession, inData):
        return _LowLevel.CPKCS11Lib_C_DigestUpdate(self, hSession, inData)

    def C_DigestKey(self, hSession, hKey):
        return _LowLevel.CPKCS11Lib_C_DigestKey(self, hSession, hKey)

    def C_DigestFinal(self, hSession, outDigest):
        return _LowLevel.CPKCS11Lib_C_DigestFinal(self, hSession, outDigest)

    def C_SignInit(self, hSession, pMechanism, hKey):
        return _LowLevel.CPKCS11Lib_C_SignInit(self, hSession, pMechanism, hKey)

    def C_Sign(self, hSession, inData, outSignature):
        return _LowLevel.CPKCS11Lib_C_Sign(self, hSession, inData, outSignature)

    def C_SignUpdate(self, hSession, inData):
        return _LowLevel.CPKCS11Lib_C_SignUpdate(self, hSession, inData)

    def C_SignFinal(self, hSession, outSignature):
        return _LowLevel.CPKCS11Lib_C_SignFinal(self, hSession, outSignature)

    def C_VerifyInit(self, hSession, pMechanism, hKey):
        return _LowLevel.CPKCS11Lib_C_VerifyInit(self, hSession, pMechanism, hKey)

    def C_Verify(self, hSession, inData, inSignature):
        return _LowLevel.CPKCS11Lib_C_Verify(self, hSession, inData, inSignature)

    def C_VerifyUpdate(self, hSession, inData):
        return _LowLevel.CPKCS11Lib_C_VerifyUpdate(self, hSession, inData)

    def C_VerifyFinal(self, hSession, inSignature):
        return _LowLevel.CPKCS11Lib_C_VerifyFinal(self, hSession, inSignature)

    def C_GenerateKey(self, hSession, pMechanism, Template, outhKey):
        return _LowLevel.CPKCS11Lib_C_GenerateKey(self, hSession, pMechanism, Template, outhKey)

    def C_GenerateKeyPair(self, hSession, pMechanism, PublicKeyTemplate, PrivateKeyTemplate, outhPublicKey, outhPrivateKey):
        return _LowLevel.CPKCS11Lib_C_GenerateKeyPair(self, hSession, pMechanism, PublicKeyTemplate, PrivateKeyTemplate, outhPublicKey, outhPrivateKey)

    def C_WrapKey(self, hSession, pMechanism, hWrappingKey, hKey, WrappedKey):
        return _LowLevel.CPKCS11Lib_C_WrapKey(self, hSession, pMechanism, hWrappingKey, hKey, WrappedKey)

    def C_UnwrapKey(self, hSession, pMechanism, hUnwrappingKey, WrappedKey, Template, outhKey):
        return _LowLevel.CPKCS11Lib_C_UnwrapKey(self, hSession, pMechanism, hUnwrappingKey, WrappedKey, Template, outhKey)

    def C_SeedRandom(self, hSession, Seed):
        return _LowLevel.CPKCS11Lib_C_SeedRandom(self, hSession, Seed)

    def C_GenerateRandom(self, hSession, RandomData):
        return _LowLevel.CPKCS11Lib_C_GenerateRandom(self, hSession, RandomData)

    def C_WaitForSlotEvent(self, flags, INOUT):
        return _LowLevel.CPKCS11Lib_C_WaitForSlotEvent(self, flags, INOUT)

    def C_GetMechanismList(self, slotID, mechanismList):
        return _LowLevel.CPKCS11Lib_C_GetMechanismList(self, slotID, mechanismList)

    def C_GetMechanismInfo(self, slotID, type, pInfo):
        return _LowLevel.CPKCS11Lib_C_GetMechanismInfo(self, slotID, type, pInfo)
CPKCS11Lib_swigregister = _LowLevel.CPKCS11Lib_swigregister
CPKCS11Lib_swigregister(CPKCS11Lib)

class CK_ATTRIBUTE_SMART(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CK_ATTRIBUTE_SMART, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CK_ATTRIBUTE_SMART, name)
    __repr__ = _swig_repr

    def Reset(self):
        return _LowLevel.CK_ATTRIBUTE_SMART_Reset(self)

    def ResetValue(self):
        return _LowLevel.CK_ATTRIBUTE_SMART_ResetValue(self)

    def Reserve(self, len):
        return _LowLevel.CK_ATTRIBUTE_SMART_Reserve(self, len)

    def GetType(self):
        return _LowLevel.CK_ATTRIBUTE_SMART_GetType(self)

    def SetType(self, attrType):
        return _LowLevel.CK_ATTRIBUTE_SMART_SetType(self, attrType)

    def GetLen(self):
        return _LowLevel.CK_ATTRIBUTE_SMART_GetLen(self)

    def IsString(self):
        return _LowLevel.CK_ATTRIBUTE_SMART_IsString(self)

    def IsBool(self):
        return _LowLevel.CK_ATTRIBUTE_SMART_IsBool(self)

    def IsNum(self):
        return _LowLevel.CK_ATTRIBUTE_SMART_IsNum(self)

    def IsBin(self):
        return _LowLevel.CK_ATTRIBUTE_SMART_IsBin(self)

    def GetString(self):
        return _LowLevel.CK_ATTRIBUTE_SMART_GetString(self)

    def SetString(self, attrType, szValue):
        return _LowLevel.CK_ATTRIBUTE_SMART_SetString(self, attrType, szValue)

    def GetNum(self):
        return _LowLevel.CK_ATTRIBUTE_SMART_GetNum(self)

    def SetNum(self, attrType, ulValue):
        return _LowLevel.CK_ATTRIBUTE_SMART_SetNum(self, attrType, ulValue)

    def GetBool(self):
        return _LowLevel.CK_ATTRIBUTE_SMART_GetBool(self)

    def SetBool(self, attrType, bValue):
        return _LowLevel.CK_ATTRIBUTE_SMART_SetBool(self, attrType, bValue)

    def GetBin(self):
        return _LowLevel.CK_ATTRIBUTE_SMART_GetBin(self)

    def SetBin(self, attrType, pBuf):
        return _LowLevel.CK_ATTRIBUTE_SMART_SetBin(self, attrType, pBuf)

    def __init__(self):
        this = _LowLevel.new_CK_ATTRIBUTE_SMART()
        try:
            self.this.append(this)
        except:
            self.this = this
    __swig_destroy__ = _LowLevel.delete_CK_ATTRIBUTE_SMART
    __del__ = lambda self: None
CK_ATTRIBUTE_SMART_swigregister = _LowLevel.CK_ATTRIBUTE_SMART_swigregister
CK_ATTRIBUTE_SMART_swigregister(CK_ATTRIBUTE_SMART)

# This file is compatible with both classic and new-style classes.


