from telethon.tl.mtproto_request import MTProtoRequest


class GetDifferenceRequest(MTProtoRequest):
    """Class generated by TLObjects' generator. All changes will be ERASED. Original .tl definition below.
    updates.getDifference#0a041495 pts:int date:date qts:int = updates.Difference"""

    # Telegram's constructor ID (and unique identifier) for this class
    constructor_id = 0xa041495

    def __init__(self, pts, date, qts):
        """
        :param pts: Telegram type: «int».
        :param date: Telegram type: «date».
        :param qts: Telegram type: «int».
        """
        super().__init__()
        self.result = None
        self.confirmed = True  # Confirmed by default

        self.pts = pts
        self.date = date
        self.qts = qts

    def on_send(self, writer):
        writer.write_int(GetDifferenceRequest.constructor_id, signed=False)
        writer.write_int(self.pts)
        writer.tgwrite_date(self.date)
        writer.write_int(self.qts)

    @staticmethod
    def empty():
        """Returns an "empty" instance (all attributes are None)"""
        return GetDifferenceRequest(None, None, None)

    def on_response(self, reader):
        self.result = reader.tgread_object()

    def __repr__(self):
        return 'updates.getDifference#0a041495 pts:int date:date qts:int = updates.Difference'

    def __str__(self):
        return '(updates.getDifference (ID: 0xa041495) = (pts={}, date={}, qts={}))'.format(str(self.pts), str(self.date), str(self.qts))
