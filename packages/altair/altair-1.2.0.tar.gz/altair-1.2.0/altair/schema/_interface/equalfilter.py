# This file auto-generated by `generate_schema_interface.py`.
# Do not modify this file directly.

import traitlets as T
from ..baseobject import BaseObject
from .datetime import DateTime
from .timeunit import TimeUnit


class EqualFilter(BaseObject):
    """Wrapper for Vega-Lite EqualFilter definition.
    
    Attributes
    ----------
    equal: Union(Unicode, CFloat, Bool, DateTime)
        Value that the field should be equal to.
    field: Unicode
        Field to be filtered.
    timeUnit: TimeUnit
        Time unit for the field to be filtered.
    """
    equal = T.Union([T.Unicode(allow_none=True, default_value=None), T.CFloat(allow_none=True, default_value=None), T.Bool(allow_none=True, default_value=None), T.Instance(DateTime, allow_none=True, default_value=None)])
    field = T.Unicode(allow_none=True, default_value=None, help="""Field to be filtered.""")
    timeUnit = TimeUnit(allow_none=True, default_value=None, help="""Time unit for the field to be filtered.""")
    
    def __init__(self, equal=None, field=None, timeUnit=None, **kwargs):
        kwds = dict(equal=equal, field=field, timeUnit=timeUnit)
        kwargs.update({k:v for k, v in kwds.items() if v is not None})
        super(EqualFilter, self).__init__(**kwargs)