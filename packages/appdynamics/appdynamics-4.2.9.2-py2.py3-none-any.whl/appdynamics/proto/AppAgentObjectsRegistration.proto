option java_package = "appdynamics.pb";

package appdynamics.pb.Agent.Objects;

import "DTOProtocolBuffers.proto";
import "TransactionMonitor.proto";

message RegistrationRequest
{
    required int64 nodeId = 1;
    optional string accountKey = 2;
    repeated .com.singularity.ee.dto.pb.BusinessTransaction transactionsToRegister = 3;
    repeated .com.singularity.ee.dto.pb.UnresolvedBackendCallInfo backendsToRegister = 4;
    repeated int64 backendsToResolve = 5;
    repeated .com.singularity.ee.dto.pb.ApplicationDiagnosticData addsToRegister = 6;
    repeated int64 eumAutoEnablePossibleBTs = 7;
    repeated int64 eumAutoEnableImpossibleBTs = 8;

}

enum ApplicationDiagnosticDataType
{
    ERROR = 1;
    MEMORY = 2;
    CACHE = 3;
    TRACKED_OBJECT = 4;
    COLLECTIONS = 5;
    STACK_TRACE = 6;
    THREAD_TASK = 7;
    BASE_PAGE = 8;
    IFRAME = 9;
    AJAX_REQUEST = 10;
    // This ADD served the role of a reference to synthetic schedule/workflow.
    // ADD internal name hold the shared identifier.
    // The ADD display name caches the display name of the real entity (which may live e.g. in EUM cloud)
    SYNTH_JOB_REF = 11;
    MOBILE_REQUEST = 12;
    SERVICE_ENDPOINT = 13;
    VIRTUAL_PAGE = 14;
}

message RegisteredApplicationDiagnosticData
{
    required int64 id = 1;
    required string name = 2;
}

message RegisteredApplicationDiagnosticDataGroup
{
    optional ApplicationDiagnosticDataType type = 1;
    repeated RegisteredApplicationDiagnosticData applicationDiagnosticDatas = 2;
}



message RegistrationResponse
{
    repeated .com.singularity.ee.dto.pb.UnresolvedBackendCallInfo resolvedBackends = 1;
    repeated RegisteredApplicationDiagnosticDataGroup applicationDiagnosticDataGroups = 2;
    repeated .com.singularity.ee.dto.pb.UnresolvedBackendCallInfo unregisteredBackends = 3;
    repeated .com.singularity.ee.dto.pb.UnresolvedBackendCallInfo registeredBackends = 4;
    repeated .com.singularity.ee.dto.pb.UnresolvedBackendCallInfo invalidBackends = 5;
    repeated .com.singularity.ee.dto.pb.BusinessTransaction registeredTransactions = 6;
    repeated .com.singularity.ee.dto.pb.BusinessTransaction unRegisteredTransactions = 7;
    repeated .com.singularity.ee.dto.pb.BusinessTransaction invalidTransactions = 8;
    optional bool btRegistrationAttempted = 9;
}
