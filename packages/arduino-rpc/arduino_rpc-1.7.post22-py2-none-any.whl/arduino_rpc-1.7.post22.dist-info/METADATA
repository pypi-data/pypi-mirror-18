Metadata-Version: 2.0
Name: arduino-rpc
Version: 1.7.post22
Summary: Code generation for memory-efficient remote-procedure-calls between a host CPU (Python) and a device (C++) (e.g., Arduino).
Home-page: http://github.com/wheeler-microfluidics/arduino_rpc.git
Author: Christian Fobel
Author-email: christian@fobel.net
License: GPLv2
Platform: UNKNOWN
Requires-Dist: arduino-helpers (>=0.3.post18)
Requires-Dist: arduino-memory (>=0.1.post3)
Requires-Dist: c-array-defs (>=0.2)
Requires-Dist: clang-helpers (>=0.3)
Requires-Dist: jinja2
Requires-Dist: nadamq (>=0.8.post1)
Requires-Dist: nanopb-helpers (>=0.4.post1)
Requires-Dist: pandas (>=0.15)
Requires-Dist: path-helpers (>=0.2)
Requires-Dist: serial-device (>=0.2)

Code generation for memory-efficient remote-procedure-calls between a host CPU (Python) and a device (C++) (e.g., Arduino).
The main features of this package include: 1) Extract method signatures from user-defined C++ class, 2) Assign a unique *"command code"* to each method, 3) Generate a `CommandProcessor<T>` C++ class, which calls appropriate method on instance of user type provided the corresponding serialized command array, and 4) Generate a `Proxy` Python class to call methods on remote device by serializing Python method call as command request and decoding command response from device as Python type(s).

