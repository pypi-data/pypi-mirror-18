Code generation for memory-efficient remote-procedure-calls between a host CPU (Python) and a device (C++) (e.g., Arduino).
The main features of this package include: 1) Extract method signatures from user-defined C++ class, 2) Assign a unique *"command code"* to each method, 3) Generate a `CommandProcessor<T>` C++ class, which calls appropriate method on instance of user type provided the corresponding serialized command array, and 4) Generate a `Proxy` Python class to call methods on remote device by serializing Python method call as command request and decoding command response from device as Python type(s).

