# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dstore/elastic/elasticservice.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from dstore.elastic.item import facetednavigation_pb2 as dstore_dot_elastic_dot_item_dot_facetednavigation__pb2
from dstore.elastic.item import suggest_pb2 as dstore_dot_elastic_dot_item_dot_suggest__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='dstore/elastic/elasticservice.proto',
  package='dstore.elastic',
  syntax='proto3',
  serialized_pb=_b('\n#dstore/elastic/elasticservice.proto\x12\x0e\x64store.elastic\x1a+dstore/elastic/item/facetednavigation.proto\x1a!dstore/elastic/item/suggest.proto2\xd4\x01\n\x0e\x45lasticService\x12n\n\x11\x66\x61\x63\x65tedNavigation\x12).dstore.elastic.facetednavigation.Request\x1a*.dstore.elastic.facetednavigation.Response\"\x00\x30\x01\x12R\n\x0bitemSuggest\x12\x1f.dstore.elastic.suggest.Request\x1a .dstore.elastic.suggest.Response\"\x00\x42<\n\x11io.dstore.elasticZ\'gosdk.dstore.de/elastic/elastic_serviceb\x06proto3')
  ,
  dependencies=[dstore_dot_elastic_dot_item_dot_facetednavigation__pb2.DESCRIPTOR,dstore_dot_elastic_dot_item_dot_suggest__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)





DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\021io.dstore.elasticZ\'gosdk.dstore.de/elastic/elastic_service'))
import grpc
from grpc.beta import implementations as beta_implementations
from grpc.beta import interfaces as beta_interfaces
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities


class ElasticServiceStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.facetedNavigation = channel.unary_stream(
        '/dstore.elastic.ElasticService/facetedNavigation',
        request_serializer=dstore_dot_elastic_dot_item_dot_facetednavigation__pb2.Request.SerializeToString,
        response_deserializer=dstore_dot_elastic_dot_item_dot_facetednavigation__pb2.Response.FromString,
        )
    self.itemSuggest = channel.unary_unary(
        '/dstore.elastic.ElasticService/itemSuggest',
        request_serializer=dstore_dot_elastic_dot_item_dot_suggest__pb2.Request.SerializeToString,
        response_deserializer=dstore_dot_elastic_dot_item_dot_suggest__pb2.Response.FromString,
        )


class ElasticServiceServicer(object):

  def facetedNavigation(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def itemSuggest(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ElasticServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'facetedNavigation': grpc.unary_stream_rpc_method_handler(
          servicer.facetedNavigation,
          request_deserializer=dstore_dot_elastic_dot_item_dot_facetednavigation__pb2.Request.FromString,
          response_serializer=dstore_dot_elastic_dot_item_dot_facetednavigation__pb2.Response.SerializeToString,
      ),
      'itemSuggest': grpc.unary_unary_rpc_method_handler(
          servicer.itemSuggest,
          request_deserializer=dstore_dot_elastic_dot_item_dot_suggest__pb2.Request.FromString,
          response_serializer=dstore_dot_elastic_dot_item_dot_suggest__pb2.Response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'dstore.elastic.ElasticService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaElasticServiceServicer(object):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This class was generated
  only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
  def facetedNavigation(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def itemSuggest(self, request, context):
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaElasticServiceStub(object):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This class was generated
  only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
  def facetedNavigation(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  def itemSuggest(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    raise NotImplementedError()
  itemSuggest.future = None


def beta_create_ElasticService_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This function was
  generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
  request_deserializers = {
    ('dstore.elastic.ElasticService', 'facetedNavigation'): dstore_dot_elastic_dot_item_dot_facetednavigation__pb2.Request.FromString,
    ('dstore.elastic.ElasticService', 'itemSuggest'): dstore_dot_elastic_dot_item_dot_suggest__pb2.Request.FromString,
  }
  response_serializers = {
    ('dstore.elastic.ElasticService', 'facetedNavigation'): dstore_dot_elastic_dot_item_dot_facetednavigation__pb2.Response.SerializeToString,
    ('dstore.elastic.ElasticService', 'itemSuggest'): dstore_dot_elastic_dot_item_dot_suggest__pb2.Response.SerializeToString,
  }
  method_implementations = {
    ('dstore.elastic.ElasticService', 'facetedNavigation'): face_utilities.unary_stream_inline(servicer.facetedNavigation),
    ('dstore.elastic.ElasticService', 'itemSuggest'): face_utilities.unary_unary_inline(servicer.itemSuggest),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_ElasticService_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This function was
  generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
  request_serializers = {
    ('dstore.elastic.ElasticService', 'facetedNavigation'): dstore_dot_elastic_dot_item_dot_facetednavigation__pb2.Request.SerializeToString,
    ('dstore.elastic.ElasticService', 'itemSuggest'): dstore_dot_elastic_dot_item_dot_suggest__pb2.Request.SerializeToString,
  }
  response_deserializers = {
    ('dstore.elastic.ElasticService', 'facetedNavigation'): dstore_dot_elastic_dot_item_dot_facetednavigation__pb2.Response.FromString,
    ('dstore.elastic.ElasticService', 'itemSuggest'): dstore_dot_elastic_dot_item_dot_suggest__pb2.Response.FromString,
  }
  cardinalities = {
    'facetedNavigation': cardinality.Cardinality.UNARY_STREAM,
    'itemSuggest': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'dstore.elastic.ElasticService', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
