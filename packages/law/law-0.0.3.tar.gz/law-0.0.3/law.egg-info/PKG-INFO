Metadata-Version: 1.1
Name: law
Version: 0.0.3
Summary: High-level extension layer for Luigi analysis workflows.
Home-page: https://github.com/riga/law
Author: Marcel Rieger
Author-email: python-law@googlegroups.com
License: MIT
Description: |Build Status| |Documentation Status| |Package Status|
        
        High-level extension layer for
        `Luigi <https://github.com/spotify/luigi>`__ analysis workflows.
        
        Installation and dependencies
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        
        Install via `pip <https://pypi.python.org/pypi/tfdeploy>`__:
        
        .. code:: bash
        
            pip install law
        
        This should also install `luigi <https://pypi.python.org/pypi/luigi>`__
        and `six <https://pypi.python.org/pypi/six>`__.
        
        Content
        ~~~~~~~
        
        -  `TODO <#todo>`__
        -  `Development <#development>`__
        -  `Authors <#authors>`__
        -  `License <#license>`__
        
        TODO
        ----
        
        Environment variables
        '''''''''''''''''''''
        
        -  ``LAW_CONFIG_FILE``
        -  ``LAW_DB_FILE``
        
        Config
        ''''''
        
        -  ``core``:
        
           -  ``db_file``: The path to the db file. Defaults to
              ``$HOME/.law/db``
           -  ``target_tmp_dir``: The directory where tmp targets are stored.
              Defaults to ``tempfile.gettempdir()``.
        
        -  ``paths``: Listing of paths to look for tasks when creating the db
           file.
        
        Enable bash completion
        ''''''''''''''''''''''
        
        .. code:: bash
        
            source `law-completion`
        
        Development
        -----------
        
        -  Source hosted at `GitHub <https://github.com/riga/law>`__
        -  Report issues, questions, feature requests on `GitHub
           Issues <https://github.com/riga/law/issues>`__
        
        To start developing, simply load the ``dev.sh``:
        
        .. code:: bash
        
            source dev.sh
        
        In the future, there might be a docker image for development.
        
        Authors
        -------
        
        -  `Marcel R. <https://github.com/riga>`__
        
        License
        -------
        
        The MIT License (MIT)
        
        Copyright (c) 2016 Marcel R.
        
        Permission is hereby granted, free of charge, to any person obtaining a
        copy of this software and associated documentation files (the
        "Software"), to deal in the Software without restriction, including
        without limitation the rights to use, copy, modify, merge, publish,
        distribute, sublicense, and/or sell copies of the Software, and to
        permit persons to whom the Software is furnished to do so, subject to
        the following conditions:
        
        The above copyright notice and this permission notice shall be included
        in all copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
        OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
        MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
        IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
        CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
        TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
        SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
        
        .. |Build Status| image:: https://travis-ci.org/riga/law.svg?branch=master
           :target: https://travis-ci.org/riga/law
        .. |Documentation Status| image:: https://readthedocs.org/projects/law/badge/?version=latest
           :target: http://law.readthedocs.io/en/latest/?badge=latest
        .. |Package Status| image:: https://img.shields.io/pypi/v/law.svg
           :target: https://pypi.python.org/pypi/law
        
Keywords: luigi,workflow,pipeline,remote,submission,grid
Platform: UNKNOWN
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 3
Classifier: Development Status :: 4 - Beta
Classifier: Operating System :: OS Independent
Classifier: License :: OSI Approved :: MIT License
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Information Technology
Classifier: Topic :: System :: Monitoring
