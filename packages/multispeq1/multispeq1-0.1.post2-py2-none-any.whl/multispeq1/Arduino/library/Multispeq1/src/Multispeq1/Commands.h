
/* #########################################################################
 * [2016-12-13 14:59:47.893000] THIS FILE IS AUTOGENERATED - DO NOT EDIT!
 * ######################################################################### */
#ifndef ___MULTISPEQ1__COMMANDS___
#define ___MULTISPEQ1__COMMANDS___

#include "CArrayDefs.h"



namespace multispeq1 {


typedef struct __attribute__((packed)) {
} BaseNodeSoftwareVersionRequest;

typedef struct __attribute__((packed)) {
  UInt8Array result;
} BaseNodeSoftwareVersionResponse;

typedef struct __attribute__((packed)) {
} PackageNameRequest;

typedef struct __attribute__((packed)) {
  UInt8Array result;
} PackageNameResponse;

typedef struct __attribute__((packed)) {
} DisplayNameRequest;

typedef struct __attribute__((packed)) {
  UInt8Array result;
} DisplayNameResponse;

typedef struct __attribute__((packed)) {
} ManufacturerRequest;

typedef struct __attribute__((packed)) {
  UInt8Array result;
} ManufacturerResponse;

typedef struct __attribute__((packed)) {
} SoftwareVersionRequest;

typedef struct __attribute__((packed)) {
  UInt8Array result;
} SoftwareVersionResponse;

typedef struct __attribute__((packed)) {
} UrlRequest;

typedef struct __attribute__((packed)) {
  UInt8Array result;
} UrlResponse;

typedef struct __attribute__((packed)) {
} MicrosecondsRequest;

typedef struct __attribute__((packed)) {
  uint32_t result;
} MicrosecondsResponse;

typedef struct __attribute__((packed)) {
} MillisecondsRequest;

typedef struct __attribute__((packed)) {
  uint32_t result;
} MillisecondsResponse;

typedef struct __attribute__((packed)) {
  uint16_t us;
} DelayUsRequest;

typedef struct __attribute__((packed)) {
} DelayUsResponse;

typedef struct __attribute__((packed)) {
  uint16_t ms;
} DelayMsRequest;

typedef struct __attribute__((packed)) {
} DelayMsResponse;

typedef struct __attribute__((packed)) {
} RamFreeRequest;

typedef struct __attribute__((packed)) {
  uint32_t result;
} RamFreeResponse;

typedef struct __attribute__((packed)) {
  uint8_t pin;
  uint8_t mode;
} PinModeRequest;

typedef struct __attribute__((packed)) {
} PinModeResponse;

typedef struct __attribute__((packed)) {
  uint8_t pin;
} DigitalReadRequest;

typedef struct __attribute__((packed)) {
  uint8_t result;
} DigitalReadResponse;

typedef struct __attribute__((packed)) {
  uint8_t pin;
  uint8_t value;
} DigitalWriteRequest;

typedef struct __attribute__((packed)) {
} DigitalWriteResponse;

typedef struct __attribute__((packed)) {
  uint8_t pin;
} AnalogReadRequest;

typedef struct __attribute__((packed)) {
  uint16_t result;
} AnalogReadResponse;

typedef struct __attribute__((packed)) {
  uint8_t pin;
  uint8_t value;
} AnalogWriteRequest;

typedef struct __attribute__((packed)) {
} AnalogWriteResponse;

typedef struct __attribute__((packed)) {
  UInt8Array array;
} ArrayLengthRequest;

typedef struct __attribute__((packed)) {
  uint16_t result;
} ArrayLengthResponse;

typedef struct __attribute__((packed)) {
  UInt32Array array;
} EchoArrayRequest;

typedef struct __attribute__((packed)) {
  UInt32Array result;
} EchoArrayResponse;

typedef struct __attribute__((packed)) {
  UInt8Array msg;
} StrEchoRequest;

typedef struct __attribute__((packed)) {
  UInt8Array result;
} StrEchoResponse;

typedef struct __attribute__((packed)) {
} MaxSerialPayloadSizeRequest;

typedef struct __attribute__((packed)) {
  int32_t result;
} MaxSerialPayloadSizeResponse;

typedef struct __attribute__((packed)) {
} BeginRequest;

typedef struct __attribute__((packed)) {
} BeginResponse;

typedef struct __attribute__((packed)) {
} GetBufferRequest;

typedef struct __attribute__((packed)) {
  UInt8Array result;
} GetBufferResponse;

typedef struct __attribute__((packed)) {
  int32_t _averages;
} GetLightIntensityRequest;

typedef struct __attribute__((packed)) {
  int32_t result;
} GetLightIntensityResponse;



static const int CMD_BASE_NODE_SOFTWARE_VERSION = 0x00;
static const int CMD_PACKAGE_NAME = 0x01;
static const int CMD_DISPLAY_NAME = 0x02;
static const int CMD_MANUFACTURER = 0x03;
static const int CMD_SOFTWARE_VERSION = 0x04;
static const int CMD_URL = 0x05;
static const int CMD_MICROSECONDS = 0x06;
static const int CMD_MILLISECONDS = 0x07;
static const int CMD_DELAY_US = 0x08;
static const int CMD_DELAY_MS = 0x09;
static const int CMD_RAM_FREE = 0x0a;
static const int CMD_PIN_MODE = 0x0b;
static const int CMD_DIGITAL_READ = 0x0c;
static const int CMD_DIGITAL_WRITE = 0x0d;
static const int CMD_ANALOG_READ = 0x0e;
static const int CMD_ANALOG_WRITE = 0x0f;
static const int CMD_ARRAY_LENGTH = 0x10;
static const int CMD_ECHO_ARRAY = 0x11;
static const int CMD_STR_ECHO = 0x12;
static const int CMD_MAX_SERIAL_PAYLOAD_SIZE = 0xff;
static const int CMD_BEGIN = 0x1fe;
static const int CMD_GET_BUFFER = 0x1ff;
static const int CMD_GET_LIGHT_INTENSITY = 0x200;

}  // namespace multispeq1



#endif  // ifndef ___MULTISPEQ1__COMMANDS___
