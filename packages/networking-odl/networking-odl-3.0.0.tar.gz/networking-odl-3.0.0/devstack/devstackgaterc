# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

#
# This script is executed in the OpenStack CI job that runs DevStack + tempest.
# You can find the CI job configuration here:
#
# http://git.openstack.org/cgit/openstack-infra/project-config/tree/jenkins/jobs/networking-odl.yaml
#

export OVERRIDE_ENABLED_SERVICES=dstat,g-api,g-reg,key,mysql,n-api,n-cond,n-cpu,n-crt,n-obj,n-sch,q-dhcp,q-meta,q-svc,quantum,rabbit
if [ -z "${RALLY_SCENARIO}" ] ; then
    # Only include tempest if this is not a rally job, As running tempest in Rally is likely to cause failure
    export OVERRIDE_ENABLED_SERVICES=${OVERRIDE_ENABLED_SERVICES},tempest
fi

# Begin list of exclusions.
r="^(?!.*"

# exclude the slow tag (part of the default for 'full')
r="$r(?:.*\[.*\bslow\b.*\])"

# exclude tests that use ssh to login until metadata server for keypair
r="$r|(?:tempest\.scenario\.test_minimum_basic.*)"
r="$r|(?:tempest\.scenario\.test_network_advanced_server_ops\.TestNetworkAdvancedServerOps.*)"
r="$r|(?:tempest\.scenario\.test_network_v6\.TestGettingAddress.*)"
r="$r|(?:tempest\.scenario\.test_shelve_instance\.TestShelveInstance.*)"
r="$r|(?:tempest\.scenario\.test_snapshot_pattern\.TestSnapshotPattern.*)"
r="$r|(?:tempest\.scenario\.test_volume_boot_pattern\.TestVolumeBootPattern\.test_volume_boot_pattern.*)"
r="$r|(?:tempest\.scenario\.test_volume_boot_pattern\.TestVolumeBootPatternV2\.test_volume_boot_pattern.*)"

# exclude things that just aren't enabled:
r="$r|(?:tempest\.api\.network\.admin\.test_quotas\.QuotasTest\.test_lbaas_quotas.*)"
r="$r|(?:tempest\.api\.network\.test_load_balancer.*)"
r="$r|(?:tempest\.scenario\.test_load_balancer.*)"
r="$r|(?:tempest\.scenario\.test_network_basic_ops.*)"
r="$r|(?:tempest\.scenario\.test_security_groups_basic_ops.*)"
r="$r|(?:tempest\.api\.network\.admin\.test_load_balancer.*)"
r="$r|(?:tempest\.api\.network\.admin\.test_lbaas.*)"
r="$r|(?:tempest\.api\.network\.test_fwaas_extensions.*)"
r="$r|(?:tempest\.api\.network\.test_vpnaas_extensions.*)"
r="$r|(?:tempest\.api\.network\.test_metering_extensions.*)"
r="$r|(?:tempest\.thirdparty\.boto\.test_s3.*)"

# exclude stuff we're less likely to break because i'm impatient
r="$r|(?:tempest\.api\.identity.*)"
r="$r|(?:tempest\.api\.image.*)"
r="$r|(?:tempest\.api\.volume.*)"

# Current list of failing tests that need to be triaged, have bugs filed, and
# fixed as appropriate.
# (none)

# End list of exclusions.
r="$r)"

# only run tempest.api/scenario/thirdparty tests (part of the default for 'full')
r="$r(tempest\.(api|scenario|thirdparty)).*$"

export DEVSTACK_GATE_TEMPEST_REGEX="$r"
