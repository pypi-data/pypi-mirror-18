# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

#
# This script is executed in the OpenStack CI job that runs DevStack + tempest.
# You can find the CI job configuration here:
#
# http://git.openstack.org/cgit/openstack-infra/project-config/tree/jenkins/jobs/networking-odl.yaml
#

export OVERRIDE_ENABLED_SERVICES=c-api,c-bak,c-sch,c-vol,cinder,dstat,g-api,g-reg,key,mysql,n-api,n-cond,n-cpu,n-crt,n-obj,n-sch,q-dhcp,q-meta,q-svc,quantum,rabbit
if [ -z "${RALLY_SCENARIO}" ] ; then
    # Only include tempest if this is not a rally job, As running tempest in Rally is likely to cause failure
    export OVERRIDE_ENABLED_SERVICES=${OVERRIDE_ENABLED_SERVICES},tempest
fi

# NOTE(manjeets) To prevent create of public network twice
if [[ "$DEVSTACK_GATE_TOPOLOGY" == "multinode" ]] ; then

    export DEVSTACK_SUBNODE_CONFIG+=$'\n'"NEUTRON_CREATE_INITIAL_NETWORKS=False"
    export DEVSTACK_SUBNODE_CONFIG+=$'\n'"ENABLED_SERVICES=n-cpu,dstat,c-vol,c-bak,q-dhcp"
    export DEVSTACK_SUBNODE_CONFIG+=$'\n'"DATABASE_HOST=\$SERVICE_HOST"
    export DEVSTACK_SUBNODE_CONFIG+=$'\n'"RABBIT_HOST=\$SERVICE_HOST"
fi

# Begin list of exclusions.
r="^(?!.*"

# exclude the slow tag (part of the default for 'full')
r="$r(?:.*\[.*\bslow\b.*\])"

# exclude things that just aren't enabled:
r="$r|(?:tempest\.api\.network\.admin\.test_quotas\.QuotasTest\.test_lbaas_quotas.*)"
r="$r|(?:tempest\.api\.network\.test_load_balancer.*)"
r="$r|(?:tempest\.scenario\.test_load_balancer.*)"
r="$r|(?:tempest\.api\.network\.admin\.test_load_balancer.*)"
r="$r|(?:tempest\.api\.network\.admin\.test_lbaas.*)"
r="$r|(?:tempest\.api\.network\.test_fwaas_extensions.*)"
r="$r|(?:tempest\.api\.network\.test_vpnaas_extensions.*)"
r="$r|(?:tempest\.api\.network\.test_metering_extensions.*)"
r="$r|(?:tempest\.thirdparty\.boto\.test_s3.*)"

# exclude stuff we're less likely to break because i'm impatient
r="$r|(?:tempest\.api\.identity.*)"
r="$r|(?:tempest\.api\.image.*)"
r="$r|(?:tempest\.api\.volume.*)"

# unsupported features
# ODL legacy netvirt doesn't support ipv6
r="$r|(?:tempest\.scenario\.test_network_v6\.TestGettingAddress.*)"

# Current list of failing tests that need to be triaged, have bugs filed, and
# fixed as appropriate.
# (none)

if [[ "${ODL_RELEASE_BASE}" == "beryllium-snapshot" ]]; then
   # Beryllium release has bug on security group and there is no plan
   # for new release. Its last release is Beryllium-SR4.
   r="$r|(?:tempest\.scenario\.test_security_groups_basic_ops.*)"
fi

# TODO(yamahata): fix bugs and remove those tests from here
# BUG: https://bugs.launchpad.net/networking-odl/+bug/1642158
# legacy netvirt ignores admin-state-up state for network/port
r="$r|(?:tempest\.scenario\.test_network_basic_ops\.TestNetworkBasicOps\.test_update_instance_port_admin_state.*)"
r="$r|(?:tempest\.scenario\.test_network_basic_ops\.TestNetworkBasicOps\.test_update_router_admin_state.*)"

# BUG: https://bugs.launchpad.net/networking-odl/+bug/1643033
# stateful security group: conntracking needs to be enabled
r="$r|(?:tempest\.scenario\.test_network_basic_ops\.TestNetworkBasicOps\.test_hotplug_nic.*)"
r="$r|(?:tempest\.scenario\.test_security_groups_basic_ops\.TestSecurityGroupsBasicOps\.test_cross_tenant_traffic.*)"
r="$r|(?:tempest\.scenario\.test_security_groups_basic_ops\.TestSecurityGroupsBasicOps\.test_port_security_disable_security_group.*)"

# TODO(yamahata): those test sets doesn't stably pass yet.
r="$r|(?:tempest\.scenario\.test_security_groups_basic_ops.*)"

# End list of exclusions.
r="$r)"

# only run tempest.api/scenario/thirdparty tests (part of the default for 'full')
r="$r(tempest\.(api|scenario|thirdparty)).*$"

export DEVSTACK_GATE_TEMPEST_REGEX="$r"
