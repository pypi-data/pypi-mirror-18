# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: language.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='language.proto',
  package='opveclib',
  syntax='proto3',
  serialized_pb=_b('\n\x0elanguage.proto\x12\x08opveclib\";\n\nTensorType\x12\x1e\n\x05\x64type\x18\x01 \x01(\x0e\x32\x0f.opveclib.DType\x12\r\n\x05shape\x18\x02 \x03(\r\"\x8e\x02\n\nExpression\x12&\n\x04\x63ode\x18\x01 \x01(\x0e\x32\x18.opveclib.ExpressionCode\x12)\n\x0btensor_type\x18\x02 \x01(\x0b\x32\x14.opveclib.TensorType\x12\x1e\n\x05\x64type\x18\x03 \x01(\x0e\x32\x0f.opveclib.DType\x12\x10\n\x08io_index\x18\x04 \x01(\r\x12\x12\n\nfloat_data\x18\x05 \x03(\x02\x12\x13\n\x0b\x64ouble_data\x18\x06 \x03(\x01\x12\x13\n\x0bsint32_data\x18\x07 \x03(\x11\x12\x13\n\x0bsint64_data\x18\x08 \x03(\x12\x12\x13\n\x0buint32_data\x18\t \x03(\r\x12\x13\n\x0buint64_data\x18\n \x03(\x04\"\xc2\x01\n\rExpressionDAG\x12)\n\x0b\x65xpressions\x18\x01 \x03(\x0b\x32\x14.opveclib.Expression\x12\x37\n\nreferences\x18\x02 \x03(\x0b\x32#.opveclib.ExpressionDAG.OperandList\x12\x17\n\x0fworkgroup_shape\x18\x03 \x03(\r\x12\x0c\n\x04name\x18\x04 \x01(\t\x1a&\n\x0bOperandList\x12\x17\n\x0foperand_indices\x18\x01 \x03(\r\"\xf7\x03\n\x0bOperatorDAG\x12*\n\toperators\x18\x01 \x03(\x0b\x32\x17.opveclib.ExpressionDAG\x12-\n\x0f\x64\x61g_input_types\x18\x02 \x03(\x0b\x32\x14.opveclib.TensorType\x12\x41\n\nreferences\x18\x03 \x03(\x0b\x32-.opveclib.OperatorDAG.OperatorInputReferences\x12=\n\x0b\x64\x61g_outputs\x18\x04 \x03(\x0b\x32(.opveclib.OperatorDAG.DAGOutputReference\x1am\n\x16OperatorInputReference\x12\x0f\n\x07is_leaf\x18\x01 \x01(\x08\x12\x10\n\x08op_index\x18\x02 \x01(\r\x12\x17\n\x0fop_output_index\x18\x03 \x01(\r\x12\x17\n\x0f\x64\x61g_input_index\x18\x04 \x01(\r\x1a[\n\x17OperatorInputReferences\x12@\n\ninput_refs\x18\x01 \x03(\x0b\x32,.opveclib.OperatorDAG.OperatorInputReference\x1a?\n\x12\x44\x41GOutputReference\x12\x10\n\x08op_index\x18\x01 \x01(\r\x12\x17\n\x0fop_output_index\x18\x02 \x01(\r*\xa9\x01\n\x05\x44Type\x12\x12\n\x0eUNDEFINED_TYPE\x10\x00\x12\x0b\n\x07\x46LOAT16\x10\x01\x12\x0b\n\x07\x46LOAT32\x10\x02\x12\x0b\n\x07\x46LOAT64\x10\x03\x12\x08\n\x04INT8\x10\x04\x12\t\n\x05INT16\x10\x05\x12\t\n\x05INT32\x10\x06\x12\t\n\x05INT64\x10\x07\x12\t\n\x05UINT8\x10\x08\x12\n\n\x06UINT16\x10\t\x12\n\n\x06UINT32\x10\n\x12\n\n\x06UINT64\x10\x0b\x12\x0b\n\x07LITERAL\x10\x0c*\xed\x05\n\x0e\x45xpressionCode\x12\x12\n\x0eUNDEFINED_CODE\x10\x00\x12\t\n\x05INPUT\x10\x01\x12\n\n\x06OUTPUT\x10\x02\x12\x10\n\x0c\x43ONST_SCALAR\x10\x03\x12\x10\n\x0c\x43ONST_TENSOR\x10\x04\x12\x0c\n\x08POSITION\x10\x05\x12\x0c\n\x08VARIABLE\x10\x06\x12\x08\n\x04\x43\x41ST\x10\x07\x12\n\n\x06TENSOR\x10\x08\x12\x13\n\x0f\x41SSIGN_VARIABLE\x10\t\x12\x11\n\rASSIGN_TENSOR\x10\n\x12\x0f\n\x0bREAD_TENSOR\x10\x0b\x12\t\n\x05RANGE\x10\x0c\x12\x0c\n\x08\x45NDRANGE\x10\r\x12\x06\n\x02IF\x10\x0e\x12\n\n\x06\x45LSEIF\x10\x0f\x12\x08\n\x04\x45LSE\x10\x10\x12\t\n\x05\x45NDIF\x10\x11\x12\x08\n\x04\x41\x43OS\x10\x64\x12\x08\n\x04\x41SIN\x10\x65\x12\x08\n\x04\x41TAN\x10\x66\x12\x07\n\x03\x43OS\x10h\x12\x08\n\x04\x43OSH\x10i\x12\x07\n\x03SIN\x10j\x12\x08\n\x04SINH\x10k\x12\x07\n\x03TAN\x10l\x12\x08\n\x04TANH\x10m\x12\x08\n\x03\x45XP\x10\x96\x01\x12\x08\n\x03LOG\x10\x97\x01\x12\n\n\x05LOG10\x10\x98\x01\x12\t\n\x04SQRT\x10\x9a\x01\x12\t\n\x04\x43\x45IL\x10\xc9\x01\x12\n\n\x05\x46LOOR\x10\xca\x01\x12\x08\n\x03\x41\x42S\x10\xcb\x01\x12\x0b\n\x06NEGATE\x10\xcc\x01\x12\x08\n\x03NOT\x10\xcd\x01\x12\x08\n\x03\x41\x44\x44\x10\xfa\x01\x12\r\n\x08SUBTRACT\x10\xfb\x01\x12\r\n\x08MULTIPLY\x10\xfc\x01\x12\x0b\n\x06\x44IVIDE\x10\xfd\x01\x12\x0b\n\x06MODULO\x10\xfe\x01\x12\x08\n\x03\x41ND\x10\xff\x01\x12\x07\n\x02OR\x10\x80\x02\x12\n\n\x05\x45QUAL\x10\x81\x02\x12\r\n\x08NOTEQUAL\x10\x82\x02\x12\t\n\x04LESS\x10\x83\x02\x12\x0c\n\x07LESS_EQ\x10\x84\x02\x12\x0c\n\x07GREATER\x10\x85\x02\x12\x0f\n\nGREATER_EQ\x10\x86\x02\x12\x08\n\x03MIN\x10\xac\x02\x12\x08\n\x03MAX\x10\xad\x02\x12\x08\n\x03POW\x10\xae\x02\x12\n\n\x05\x41TAN2\x10\xaf\x02\x12\n\n\x05ISINF\x10\xb0\x02\x12\r\n\x08ISFINITE\x10\xb1\x02\x12\n\n\x05ISNAN\x10\xb2\x02\x12\x0e\n\tMIN_VALUE\x10\xb3\x02\x12\x0e\n\tMAX_VALUE\x10\xb4\x02\x12\x0c\n\x07\x45PSILON\x10\xb5\x02\x62\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_DTYPE = _descriptor.EnumDescriptor(
  name='DType',
  full_name='opveclib.DType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNDEFINED_TYPE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT16', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT32', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOAT64', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INT8', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INT16', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INT32', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INT64', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UINT8', index=8, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UINT16', index=9, number=9,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UINT32', index=10, number=10,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UINT64', index=11, number=11,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LITERAL', index=12, number=12,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1066,
  serialized_end=1235,
)
_sym_db.RegisterEnumDescriptor(_DTYPE)

DType = enum_type_wrapper.EnumTypeWrapper(_DTYPE)
_EXPRESSIONCODE = _descriptor.EnumDescriptor(
  name='ExpressionCode',
  full_name='opveclib.ExpressionCode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNDEFINED_CODE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INPUT', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OUTPUT', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CONST_SCALAR', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CONST_TENSOR', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='POSITION', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VARIABLE', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CAST', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TENSOR', index=8, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ASSIGN_VARIABLE', index=9, number=9,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ASSIGN_TENSOR', index=10, number=10,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='READ_TENSOR', index=11, number=11,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RANGE', index=12, number=12,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ENDRANGE', index=13, number=13,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IF', index=14, number=14,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ELSEIF', index=15, number=15,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ELSE', index=16, number=16,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ENDIF', index=17, number=17,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACOS', index=18, number=100,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ASIN', index=19, number=101,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ATAN', index=20, number=102,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COS', index=21, number=104,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COSH', index=22, number=105,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SIN', index=23, number=106,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SINH', index=24, number=107,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TAN', index=25, number=108,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TANH', index=26, number=109,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EXP', index=27, number=150,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LOG', index=28, number=151,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LOG10', index=29, number=152,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SQRT', index=30, number=154,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CEIL', index=31, number=201,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FLOOR', index=32, number=202,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ABS', index=33, number=203,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NEGATE', index=34, number=204,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NOT', index=35, number=205,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ADD', index=36, number=250,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUBTRACT', index=37, number=251,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MULTIPLY', index=38, number=252,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DIVIDE', index=39, number=253,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MODULO', index=40, number=254,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AND', index=41, number=255,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OR', index=42, number=256,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EQUAL', index=43, number=257,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NOTEQUAL', index=44, number=258,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LESS', index=45, number=259,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LESS_EQ', index=46, number=260,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GREATER', index=47, number=261,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GREATER_EQ', index=48, number=262,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MIN', index=49, number=300,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MAX', index=50, number=301,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='POW', index=51, number=302,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ATAN2', index=52, number=303,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ISINF', index=53, number=304,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ISFINITE', index=54, number=305,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ISNAN', index=55, number=306,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MIN_VALUE', index=56, number=307,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MAX_VALUE', index=57, number=308,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EPSILON', index=58, number=309,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1238,
  serialized_end=1987,
)
_sym_db.RegisterEnumDescriptor(_EXPRESSIONCODE)

ExpressionCode = enum_type_wrapper.EnumTypeWrapper(_EXPRESSIONCODE)
UNDEFINED_TYPE = 0
FLOAT16 = 1
FLOAT32 = 2
FLOAT64 = 3
INT8 = 4
INT16 = 5
INT32 = 6
INT64 = 7
UINT8 = 8
UINT16 = 9
UINT32 = 10
UINT64 = 11
LITERAL = 12
UNDEFINED_CODE = 0
INPUT = 1
OUTPUT = 2
CONST_SCALAR = 3
CONST_TENSOR = 4
POSITION = 5
VARIABLE = 6
CAST = 7
TENSOR = 8
ASSIGN_VARIABLE = 9
ASSIGN_TENSOR = 10
READ_TENSOR = 11
RANGE = 12
ENDRANGE = 13
IF = 14
ELSEIF = 15
ELSE = 16
ENDIF = 17
ACOS = 100
ASIN = 101
ATAN = 102
COS = 104
COSH = 105
SIN = 106
SINH = 107
TAN = 108
TANH = 109
EXP = 150
LOG = 151
LOG10 = 152
SQRT = 154
CEIL = 201
FLOOR = 202
ABS = 203
NEGATE = 204
NOT = 205
ADD = 250
SUBTRACT = 251
MULTIPLY = 252
DIVIDE = 253
MODULO = 254
AND = 255
OR = 256
EQUAL = 257
NOTEQUAL = 258
LESS = 259
LESS_EQ = 260
GREATER = 261
GREATER_EQ = 262
MIN = 300
MAX = 301
POW = 302
ATAN2 = 303
ISINF = 304
ISFINITE = 305
ISNAN = 306
MIN_VALUE = 307
MAX_VALUE = 308
EPSILON = 309



_TENSORTYPE = _descriptor.Descriptor(
  name='TensorType',
  full_name='opveclib.TensorType',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dtype', full_name='opveclib.TensorType.dtype', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='shape', full_name='opveclib.TensorType.shape', index=1,
      number=2, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=28,
  serialized_end=87,
)


_EXPRESSION = _descriptor.Descriptor(
  name='Expression',
  full_name='opveclib.Expression',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='code', full_name='opveclib.Expression.code', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tensor_type', full_name='opveclib.Expression.tensor_type', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dtype', full_name='opveclib.Expression.dtype', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='io_index', full_name='opveclib.Expression.io_index', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='float_data', full_name='opveclib.Expression.float_data', index=4,
      number=5, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='double_data', full_name='opveclib.Expression.double_data', index=5,
      number=6, type=1, cpp_type=5, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sint32_data', full_name='opveclib.Expression.sint32_data', index=6,
      number=7, type=17, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sint64_data', full_name='opveclib.Expression.sint64_data', index=7,
      number=8, type=18, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='uint32_data', full_name='opveclib.Expression.uint32_data', index=8,
      number=9, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='uint64_data', full_name='opveclib.Expression.uint64_data', index=9,
      number=10, type=4, cpp_type=4, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=90,
  serialized_end=360,
)


_EXPRESSIONDAG_OPERANDLIST = _descriptor.Descriptor(
  name='OperandList',
  full_name='opveclib.ExpressionDAG.OperandList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='operand_indices', full_name='opveclib.ExpressionDAG.OperandList.operand_indices', index=0,
      number=1, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=519,
  serialized_end=557,
)

_EXPRESSIONDAG = _descriptor.Descriptor(
  name='ExpressionDAG',
  full_name='opveclib.ExpressionDAG',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='expressions', full_name='opveclib.ExpressionDAG.expressions', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='references', full_name='opveclib.ExpressionDAG.references', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='workgroup_shape', full_name='opveclib.ExpressionDAG.workgroup_shape', index=2,
      number=3, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='opveclib.ExpressionDAG.name', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_EXPRESSIONDAG_OPERANDLIST, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=363,
  serialized_end=557,
)


_OPERATORDAG_OPERATORINPUTREFERENCE = _descriptor.Descriptor(
  name='OperatorInputReference',
  full_name='opveclib.OperatorDAG.OperatorInputReference',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='is_leaf', full_name='opveclib.OperatorDAG.OperatorInputReference.is_leaf', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='op_index', full_name='opveclib.OperatorDAG.OperatorInputReference.op_index', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='op_output_index', full_name='opveclib.OperatorDAG.OperatorInputReference.op_output_index', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dag_input_index', full_name='opveclib.OperatorDAG.OperatorInputReference.dag_input_index', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=796,
  serialized_end=905,
)

_OPERATORDAG_OPERATORINPUTREFERENCES = _descriptor.Descriptor(
  name='OperatorInputReferences',
  full_name='opveclib.OperatorDAG.OperatorInputReferences',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='input_refs', full_name='opveclib.OperatorDAG.OperatorInputReferences.input_refs', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=907,
  serialized_end=998,
)

_OPERATORDAG_DAGOUTPUTREFERENCE = _descriptor.Descriptor(
  name='DAGOutputReference',
  full_name='opveclib.OperatorDAG.DAGOutputReference',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='op_index', full_name='opveclib.OperatorDAG.DAGOutputReference.op_index', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='op_output_index', full_name='opveclib.OperatorDAG.DAGOutputReference.op_output_index', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1000,
  serialized_end=1063,
)

_OPERATORDAG = _descriptor.Descriptor(
  name='OperatorDAG',
  full_name='opveclib.OperatorDAG',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='operators', full_name='opveclib.OperatorDAG.operators', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dag_input_types', full_name='opveclib.OperatorDAG.dag_input_types', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='references', full_name='opveclib.OperatorDAG.references', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dag_outputs', full_name='opveclib.OperatorDAG.dag_outputs', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_OPERATORDAG_OPERATORINPUTREFERENCE, _OPERATORDAG_OPERATORINPUTREFERENCES, _OPERATORDAG_DAGOUTPUTREFERENCE, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=560,
  serialized_end=1063,
)

_TENSORTYPE.fields_by_name['dtype'].enum_type = _DTYPE
_EXPRESSION.fields_by_name['code'].enum_type = _EXPRESSIONCODE
_EXPRESSION.fields_by_name['tensor_type'].message_type = _TENSORTYPE
_EXPRESSION.fields_by_name['dtype'].enum_type = _DTYPE
_EXPRESSIONDAG_OPERANDLIST.containing_type = _EXPRESSIONDAG
_EXPRESSIONDAG.fields_by_name['expressions'].message_type = _EXPRESSION
_EXPRESSIONDAG.fields_by_name['references'].message_type = _EXPRESSIONDAG_OPERANDLIST
_OPERATORDAG_OPERATORINPUTREFERENCE.containing_type = _OPERATORDAG
_OPERATORDAG_OPERATORINPUTREFERENCES.fields_by_name['input_refs'].message_type = _OPERATORDAG_OPERATORINPUTREFERENCE
_OPERATORDAG_OPERATORINPUTREFERENCES.containing_type = _OPERATORDAG
_OPERATORDAG_DAGOUTPUTREFERENCE.containing_type = _OPERATORDAG
_OPERATORDAG.fields_by_name['operators'].message_type = _EXPRESSIONDAG
_OPERATORDAG.fields_by_name['dag_input_types'].message_type = _TENSORTYPE
_OPERATORDAG.fields_by_name['references'].message_type = _OPERATORDAG_OPERATORINPUTREFERENCES
_OPERATORDAG.fields_by_name['dag_outputs'].message_type = _OPERATORDAG_DAGOUTPUTREFERENCE
DESCRIPTOR.message_types_by_name['TensorType'] = _TENSORTYPE
DESCRIPTOR.message_types_by_name['Expression'] = _EXPRESSION
DESCRIPTOR.message_types_by_name['ExpressionDAG'] = _EXPRESSIONDAG
DESCRIPTOR.message_types_by_name['OperatorDAG'] = _OPERATORDAG
DESCRIPTOR.enum_types_by_name['DType'] = _DTYPE
DESCRIPTOR.enum_types_by_name['ExpressionCode'] = _EXPRESSIONCODE

TensorType = _reflection.GeneratedProtocolMessageType('TensorType', (_message.Message,), dict(
  DESCRIPTOR = _TENSORTYPE,
  __module__ = 'language_pb2'
  # @@protoc_insertion_point(class_scope:opveclib.TensorType)
  ))
_sym_db.RegisterMessage(TensorType)

Expression = _reflection.GeneratedProtocolMessageType('Expression', (_message.Message,), dict(
  DESCRIPTOR = _EXPRESSION,
  __module__ = 'language_pb2'
  # @@protoc_insertion_point(class_scope:opveclib.Expression)
  ))
_sym_db.RegisterMessage(Expression)

ExpressionDAG = _reflection.GeneratedProtocolMessageType('ExpressionDAG', (_message.Message,), dict(

  OperandList = _reflection.GeneratedProtocolMessageType('OperandList', (_message.Message,), dict(
    DESCRIPTOR = _EXPRESSIONDAG_OPERANDLIST,
    __module__ = 'language_pb2'
    # @@protoc_insertion_point(class_scope:opveclib.ExpressionDAG.OperandList)
    ))
  ,
  DESCRIPTOR = _EXPRESSIONDAG,
  __module__ = 'language_pb2'
  # @@protoc_insertion_point(class_scope:opveclib.ExpressionDAG)
  ))
_sym_db.RegisterMessage(ExpressionDAG)
_sym_db.RegisterMessage(ExpressionDAG.OperandList)

OperatorDAG = _reflection.GeneratedProtocolMessageType('OperatorDAG', (_message.Message,), dict(

  OperatorInputReference = _reflection.GeneratedProtocolMessageType('OperatorInputReference', (_message.Message,), dict(
    DESCRIPTOR = _OPERATORDAG_OPERATORINPUTREFERENCE,
    __module__ = 'language_pb2'
    # @@protoc_insertion_point(class_scope:opveclib.OperatorDAG.OperatorInputReference)
    ))
  ,

  OperatorInputReferences = _reflection.GeneratedProtocolMessageType('OperatorInputReferences', (_message.Message,), dict(
    DESCRIPTOR = _OPERATORDAG_OPERATORINPUTREFERENCES,
    __module__ = 'language_pb2'
    # @@protoc_insertion_point(class_scope:opveclib.OperatorDAG.OperatorInputReferences)
    ))
  ,

  DAGOutputReference = _reflection.GeneratedProtocolMessageType('DAGOutputReference', (_message.Message,), dict(
    DESCRIPTOR = _OPERATORDAG_DAGOUTPUTREFERENCE,
    __module__ = 'language_pb2'
    # @@protoc_insertion_point(class_scope:opveclib.OperatorDAG.DAGOutputReference)
    ))
  ,
  DESCRIPTOR = _OPERATORDAG,
  __module__ = 'language_pb2'
  # @@protoc_insertion_point(class_scope:opveclib.OperatorDAG)
  ))
_sym_db.RegisterMessage(OperatorDAG)
_sym_db.RegisterMessage(OperatorDAG.OperatorInputReference)
_sym_db.RegisterMessage(OperatorDAG.OperatorInputReferences)
_sym_db.RegisterMessage(OperatorDAG.DAGOutputReference)


# @@protoc_insertion_point(module_scope)
