diff --git a/examples/ble_central_and_peripheral/ble_connectivity/pca10040/ser_s132_hci/config/sdk_config.h b/examples/ble_central_and_peripheral/ble_connectivity/pca10040/ser_s132_hci/config/sdk_config.h
index 3bb176a..e420377 100644
--- a/examples/ble_central_and_peripheral/ble_connectivity/pca10040/ser_s132_hci/config/sdk_config.h
+++ b/examples/ble_central_and_peripheral/ble_connectivity/pca10040/ser_s132_hci/config/sdk_config.h
@@ -191,7 +191,7 @@
 
 
 #ifndef APP_SCHEDULER_WITH_PROFILER
-#define APP_SCHEDULER_WITH_PROFILER 0
+#define APP_SCHEDULER_WITH_PROFILER 1
 #endif

 #endif //APP_SCHEDULER_ENABLED
diff --git a/components/serialization/common/ser_config.h b/components/serialization/common/ser_config.h
index 1b31fcb..9cc334e 100644
--- a/components/serialization/common/ser_config.h
+++ b/components/serialization/common/ser_config.h
@@ -70,8 +70,8 @@ extern "C" {
 
 /** UART transmission parameters */
 #define SER_PHY_UART_FLOW_CTRL          APP_UART_FLOW_CONTROL_ENABLED
-#define SER_PHY_UART_PARITY             true
-#define SER_PHY_UART_BAUDRATE           UART_BAUDRATE_BAUDRATE_Baud1M
+#define SER_PHY_UART_PARITY             false
+#define SER_PHY_UART_BAUDRATE           UART_BAUDRATE_BAUDRATE_Baud115200
 
 /** Find UART baud rate value based on the chosen register setting. */
 #if (SER_PHY_UART_BAUDRATE == UART_BAUDRATE_BAUDRATE_Baud1200)
@@ -114,6 +114,8 @@ extern "C" {

 #define SER_MAX_CONNECTIONS 8

+#define HCI_LINK_CONTROL
+

 #ifdef __cplusplus
 }
diff --git a/components/serialization/common/transport/ser_phy/config/ser_phy_config_conn.h b/components/serialization/common/transport/ser_phy/config/ser_phy_config_conn.h
index 5d413ce..2517c43 100644
--- a/components/serialization/common/transport/ser_phy/config/ser_phy_config_conn.h
+++ b/components/serialization/common/transport/ser_phy/config/ser_phy_config_conn.h
@@ -38,10 +38,10 @@ extern "C" {
 /* UART configuration */
 #define UART_IRQ_PRIORITY                       APP_IRQ_PRIORITY_LOW
 
-#define SER_PHY_UART_RX                         SER_CON_RX_PIN
-#define SER_PHY_UART_TX                         SER_CON_TX_PIN
-#define SER_PHY_UART_CTS                        SER_CON_CTS_PIN
-#define SER_PHY_UART_RTS                        SER_CON_RTS_PIN
+#define SER_PHY_UART_RX                         RX_PIN_NUMBER
+#define SER_PHY_UART_TX                         TX_PIN_NUMBER
+#define SER_PHY_UART_CTS                        CTS_PIN_NUMBER
+#define SER_PHY_UART_RTS                        RTS_PIN_NUMBER
 
 
 #ifdef __cplusplus
diff --git a/components/serialization/common/transport/ser_phy/ser_phy_hci.c b/components/serialization/common/transport/ser_phy/ser_phy_hci.c
index 216ed97..147d7d5 100644
--- a/components/serialization/common/transport/ser_phy/ser_phy_hci.c
+++ b/components/serialization/common/transport/ser_phy/ser_phy_hci.c
@@ -39,6 +39,8 @@
                                  (SER_HAL_TRANSPORT_MAX_PKT_SIZE + PKT_HDR_SIZE + PKT_CRC_SIZE))
 #define BAUD_TIME_us            (1000000uL / SER_PHY_UART_BAUDRATE_VAL)
 
+#define PKT_TYPE_RESET 5
+
 #define TX_EVT_QUEUE_SIZE            16
 #define RX_EVT_QUEUE_SIZE            16
 #define PKT_TYPE_VENDOR_SPECIFIC     14                                                /**< Packet type vendor specific. */
@@ -764,6 +766,10 @@ static void hci_slip_event_handler(ser_phy_hci_slip_evt_t * p_event)
 
         NRF_LOG_DEBUG("EVT_PKT_RECEIVED 0x%X/%u\r\n", packet_type,
             p_event->evt_params.received_pkt.num_of_bytes);
+        if (packet_type == PKT_TYPE_RESET)
+        {
+            NVIC_SystemReset();
+        }
 
         if (packet_type == PKT_TYPE_ACK )
         {
diff --git a/components/serialization/connectivity/ser_conn_error_handling.c b/components/serialization/connectivity/ser_conn_error_handling.c
index 2fdd1e6..adb53cc 100644
--- a/components/serialization/connectivity/ser_conn_error_handling.c
+++ b/components/serialization/connectivity/ser_conn_error_handling.c
@@ -74,7 +74,7 @@ void app_error_fault_handler(uint32_t id, uint32_t pc, uint32_t info)
 
         /* ble_debug_assert_handler(error_code, line_num, p_file_name); */
 
-#if 0
+#if 1
         /* Reset the chip. Should be used in the release version. */
         NVIC_SystemReset();
 #else   /* Debug version. */
diff --git a/examples/ble_central_and_peripheral/ble_connectivity/main.c b/examples/ble_central_and_peripheral/ble_connectivity/main.c
index d4a4883..346093a 100644
--- a/examples/ble_central_and_peripheral/ble_connectivity/main.c
+++ b/examples/ble_central_and_peripheral/ble_connectivity/main.c
@@ -35,6 +35,21 @@
 
 #include "ser_phy_debug_comm.h"
 
+typedef struct __attribute__((packed))
+{
+        uint32_t    magic_number;        /* Magic number to verify the presence of this structure in memory */
+        uint32_t    firmware_id    : 8;  /* Firmware id to differentiate variants of the software */
+        uint32_t    rfu0           : 24; /* Reserved for future use (shall remain 0xFFFFFF) */
+        uint32_t    revision_hash;       /* Unique revision identifier */
+        uint8_t     version_major;       /* Major version number */
+        uint8_t     version_minor;       /* Minor version number */
+        uint8_t     version_patch;       /* Patch version number */
+        uint8_t     description_length;  /* Length of the description field */
+        uint8_t *   description;         /* Utf-8 string description of the release */
+} version_info_t;
+
+static const version_info_t version_info __attribute__((at(0x20000))) = {0x46D8A517, 1, 0xFFFFFF, 0x12345678, 1, 0, 1, 0, NULL};
+
 /**@brief Main function of the connectivity application. */
 int main(void)
 {
