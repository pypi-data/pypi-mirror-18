Metadata-Version: 1.1
Name: properties_image
Version: 0.0.1
Summary: properties_image
Home-page: http://steno3d.com/
Author: 3point Science
Author-email: info@3ptscience.com
License: UNKNOWN
Download-URL: http://github.com/3ptscience/properties-image
Description: Properties: Image
        *****************
        
        
        .. image:: https://img.shields.io/pypi/v/properties-image.svg
            :target: https://pypi.python.org/pypi/properties-image
            :alt: Latest PyPI version
        
        .. image:: https://img.shields.io/badge/license-MIT-blue.svg
            :target: https://github.com/3ptscience/properties-image/blob/master/LICENSE
            :alt: MIT license
        
        .. image:: https://travis-ci.org/3ptscience/properties-image.svg?branch=master
            :target: https://travis-ci.org/3ptscience/properties-image
            :alt: Travis tests
        
        .. image:: https://codecov.io/gh/3ptscience/properties-image/branch/master/graph/badge.svg
            :target: https://codecov.io/gh/3ptscience/properties-image
            :alt: Code coverage
        
        
        Why
        ---
        
        :code:`properties` gives structure (and documentation!) to the properties you use in your
        classes. :code:`properties-image` extends this to include image files.
        
        Scope
        -----
        
        The :code:`properties` package allows you to create **strongly typed** objects in a
        consistent way. This allows you to hook into **notifications** and other libraries.
        The :code:`properties-image` package contains additional image file properties with
        external dependencies not included in :code:`properties`.
        
        
        Goals
        -----
        
        * Provide supplementary Property classes to the :code:`properties` module
        * Allow dependency-heavy classes to be installed separately
        
        Alternatives
        ------------
        
        Alternatives to :code:`properties`:
        
        * `traits <https://github.com/enthought/traits>`_ is used by Enthought
        * `traitlets <https://github.com/ipython/traitlets>`_ is used in the Jupyter project
        * `mypy <https://github.com/python/mypy>`_ and `PEP0484 <https://www.python.org/dev/peps/pep-0484/>`_ which document typing but do not include coercion or notifications
        
        Other image libraries:
        
        * `pypng <https://github.com/drj11/pypng>`_ for PNG encoding/decoding
        * `Pillow <https://github.com/python-pillow/Pillow>`_ a fork of PIL
        * `scikit-image <https://github.com/scikit-image/scikit-image>`_ for image processing
        
        Connections
        -----------
        
        * `properties <https://github.com/3ptscience/properties>`_
        * `steno3d <https://github.com/3ptscience/steno3dpy>`_ for the client API
        
        Installation
        ------------
        
        To install the repository, ensure that you have
        `pip installed <https://pip.pypa.io/en/stable/installing/>`_ and run:
        
        .. code::
        
            pip install properties_image
        
        For the development version:
        
        .. code::
        
            git clone https://github.com/3ptscience/properties-image.git
            cd properties-image
            pip install -e .
        
        Examples
        ========
        
        To include an image property, import :code:`properties` and :code:`properties_image`.
        Then the image property classes will be in the :code:`ext` module. For additional examples,
        see `properties <https://github.com/3ptscience/properties>`_.
        
        .. code:: python
        
                import properties
                import properties_image
                class NamedImage(properties.HasProperties):
                    name = properties.String('Name of the image')
                    image = properties.ext.ImagePNG('The image')
        
Keywords: property
Platform: Windows
Platform: Linux
Platform: Solaris
Platform: Mac OS-X
Platform: Unix
Classifier: Development Status :: 4 - Beta
Classifier: Programming Language :: Python
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Mathematics
Classifier: Topic :: Scientific/Engineering :: Physics
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX
Classifier: Operating System :: Unix
Classifier: Operating System :: MacOS
Classifier: Natural Language :: English
