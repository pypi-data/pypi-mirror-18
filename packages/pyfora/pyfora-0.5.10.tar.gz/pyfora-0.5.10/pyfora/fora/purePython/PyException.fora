/***************************************************************************
   Copyright 2015 Ufora Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
****************************************************************************/
/****************
PyException - an fora object representing an instance of a python exception.

We can tell the real python exception type from the __class__ field.
****************/

class {
    //type object of the exception
    member @class;

    //PyTuple containing the args to the exception
    member @args;

    //allow this to match exception clauses in generated code
    operator match(`PyforaException _) { (self,) };

    operator match(Exception _) { (self,) };

    operator match(x if __class__ is x) { (self,) };

    //all exception objects have a 'message' attribute which is
    //the first arg if there is only one arg, the empty string otherwise
    message: (
        match (self.args.@m) with 
            ((x)) { x }
            (...) { PyString('') }
        );

    args: @args;

    __class__: @class;

    mixin PyObjectBase;
    };

