Metadata-Version: 1.2
Name: pyphonetics
Version: 0.4
Summary: A Python 3 phonetics library.
Home-page: http://github.com/Lilykos/pyphonetics
License: UNKNOWN
Author: Lilykos
Author-email: lilykosk@gmail.com
Requires-Python: >=3
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Dist: unidecode
Requires-Dist: pytest

===========
Pyphonetics
===========

Pyphonetics is a Python 3 library for phonetic algorithms. Right now, the following algorithms are implemented and supported:

 * Soundex
 * Metaphone
 * Refined Soundex
 * Fuzzy Soundex
 * Lein
 * Matching Rating Approach

More will be added in the future.

Instalation
***********

The module is available in PyPI, just use `pip install pyphonetics`.


Usage
*****

    >>> from pyphonetics import Soundex
    >>> soundex = Soundex()
    >>> soundex.phonetics('Rupert')
    'R163'
    >>> soundex.phonetics('Robert')
    'R163'
    >>> soundex.sounds_like('Robert', 'Rupert')
    True


The same API applies to every algorithm, e.g:

    >>> from pyphonetics import Metaphone
    >>> metaphone = Metaphone()
    >>> metaphone.phonetics('discrimination')
    'TSKRMNXN'

You can also use the `similarity(word1, word2, metric='levenshtein')` function to find the distance between 2 phonetic representations.

    >>> from pyphonetics import Soundex
    >>> rs = RefinedSoundex()
    >>> rs.similarity('Rupert', 'Robert') # for levenshtein, this is the difference, so 0 makes sense
    0
    >>> rs.similarity('assign', 'assist', metric='hamming') # choose a different metric
    2

Credits
=======

The module was largely based on the implementation of phonetic algorithms found in the Talisman.js (https://github.com/Yomguithereal/talisman) Node NLP library.
