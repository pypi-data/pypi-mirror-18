# noted to use py34 you need virtualenv >= 1.11.4
[tox]
envlist = py27,pep8
minversion = 1.6
skipsdist = True

[testenv]
usedevelop = True
# tox is silly... these need to be separated by a newline....
whitelist_externals = find
                    bash
install_command = pip install -U {opts} {packages}
setenv = VIRTUAL_ENV={envdir}

deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
commands =
  find . -type f -name "*.pyc" -delete
  bash tools/pretty_tox.sh '{posargs}'
  # there is also secret magic in pretty_tox.sh which lets you run in a fail only
  # mode. To do this define the TRACE_FAILONLY environmental variable.

[testenv:pep8]
commands = flake8 {posargs}

[testenv:bandit]
commands = bandit -r gaiaclient -n5 -x tests

[testenv:venv]
commands = {posargs}

[testenv:docs]
commands =
  python setup.py build_sphinx

[testenv:releasenotes]
commands = sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html


[testenv:functional]
basepython = python2.7
passenv = ZS_GAIACLIENT_TEST_NETWORK
setenv =
  ZS_TEST_PATH = ./gaiaclient/tests/functional
commands = bash tools/pretty_tox.sh '--concurrency=1 {posargs}'

[testenv:functional-py34]
basepython = python3.4
passenv = ZS_GAIACLIENT_TEST_NETWORK
setenv =
  ZS_TEST_PATH = ./gaiaclient/tests/functional
commands = bash tools/pretty_tox.sh '--concurrency=1 {posargs}'

[testenv:cover]
commands = python setup.py testr --coverage --testr-args='{posargs}'

[testenv:bindep]
# Do not install any requirements. We want this to be fast and work even if
# system dependencies are missing, since it's used to tell you what system
# dependencies are missing! This also means that bindep must be installed
# separately, outside of the requirements files.
deps = bindep
commands = bindep test

[testenv:setup]
deps = -r{toxinidir}/requirements.txt
commands =
  python setup.py install