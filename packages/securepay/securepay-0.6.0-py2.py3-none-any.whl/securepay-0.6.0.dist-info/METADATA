Metadata-Version: 2.0
Name: securepay
Version: 0.6.0
Summary: Interface to the Securepay credit card gateway.
Home-page: https://gitlab.com/Boojum/python-securepay
Author: Ben Sturmfels
Author-email: ben@sturm.com.au
License: Apache License, Version 2.0
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Topic :: Office/Business :: Financial
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Requires-Dist: lxml (>=3.3.3)
Requires-Dist: future (>=0.14.3)

==================
 Python Securepay
==================

SecurePay in an Australian payment gateway provider. This library can be used to
request and refund payment on demand.

Quickstart
-----------

This package can be used as follows:

.. code-block:: python

    import securepay

    MERCHANT_ID = '...'
    PASSWORD = '...'

    # Take a $2 AUD credit card payment.
    try:
        pay_response = securepay.pay_by_cc(
            200, 'PO-1234', '4444333322221111', '11/18',
            securepay.TEST_API_URL, MERCHANT_ID, PASSWORD, 'J. Citizen')
    except securepay.GatewayError as err:
        # Service unavailable. Log err and give customers a generic error.
    except securepay.PaymentError as err:
        # Payment declined. Error message is in err.
    else:
        # Payment successful! Details in pay_response.


    # Refund the payment above in full.
    try:
        refund_response = securepay.refund(
            200, 'PO-1234', pay_response['transaction_id'],
            securepay.TEST_API_URL, MERCHANT_ID, PASSWORD)
    except securepay.GatewayError as err:
        # Service unavailable. Log err and give customers a generic error.
    except securepay.PaymentError as err:
        # Refund declined. Error message is in err.
    else:
        # Refund successful! Details in refund_response.


To run the tests:

.. code-block:: bash

    $ tox


This module doesn't yet provide credit card authorisation transactions (ie.
putting some money on hold for an upcoming payment). If you're interesting in
funding some work to add these features, please get in touch.


Release History
---------------

0.6.0 (2016-10-29)
++++++++++++++++++

**Improvements**

 - Add the optional ``recurring`` field to payment requests (Greg McCoy). Note:
   This does not automate transaction processing. See the ``pay_by_cc`` function
   docstring and SecurePay docs for details.


0.5.7 (2015-08-03)
++++++++++++++++++

**Improvements**

 - Add ``securepay.LIVE_API_URL`` and ``securepay.TEST_API_URL`` so you don't
   have to define them yourself.


0.5.6 (2015-08-03)
++++++++++++++++++

**Bug fixes**

 - Fixed support for Python 2.7.
 - Enabled tests for Python 2.7, 3.3 and 3.4 with Tox


