
/* #########################################################################
 * [2016-11-17 13:59:40.418000] THIS FILE IS AUTOGENERATED - DO NOT EDIT!
 * ######################################################################### */

/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.2 at Thu Nov 17 13:59:40 2016. */

#ifndef PB__STEPPER_MOTOR_CONTROLLER__CONFIG_PB_H_INCLUDED
#define PB__STEPPER_MOTOR_CONTROLLER__CONFIG_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
/* Struct definitions */
typedef struct _stepper_motor_controller_Config {
    bool has_i2c_address;
    uint32_t i2c_address;
    bool has_steps_per_revolution;
    uint32_t steps_per_revolution;
    bool has_microstep_setting;
    uint32_t microstep_setting;
} stepper_motor_controller_Config;

/* Default values for struct fields */
extern const uint32_t stepper_motor_controller_Config_steps_per_revolution_default;
extern const uint32_t stepper_motor_controller_Config_microstep_setting_default;

/* Initializer values for message structs */
#define stepper_motor_controller_Config_init_default {false, 0, false, 200u, false, 1u}
#define stepper_motor_controller_Config_init_zero {false, 0, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define stepper_motor_controller_Config_i2c_address_tag 3
#define stepper_motor_controller_Config_steps_per_revolution_tag 50
#define stepper_motor_controller_Config_microstep_setting_tag 51

/* Struct field encoding specification for nanopb */
extern const pb_field_t stepper_motor_controller_Config_fields[4];

/* Maximum encoded size of messages (where known) */
#define stepper_motor_controller_Config_size     20

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
