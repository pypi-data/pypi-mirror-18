Metadata-Version: 1.1
Name: test-todo
Version: 0.1.6
Summary: A simple installable app for testing app testcases
Home-page: https://github.com/nikhila05/Todo
Author: nikhila05
Author-email: nik@micropyramid.com
License: UNKNOWN
Description: Django-Simple-Pagination
        =========================
        
        .. image:: https://badge.fury.io/py/test-todo.svg
            :target: https://badge.fury.io/py/test-todo
        
        .. image:: https://coveralls.io/repos/github/nikhila05/Todo/badge.svg
        	:target: https://coveralls.io/github/nikhila05/Todo
        
        .. image:: https://travis-ci.org/nikhila05/Todo.svg?branch=master
            :target: https://travis-ci.org/nikhila05/Todo
        
        .. image:: https://img.shields.io/pypi/dm/django-simple-pagination.svg
            :target: https://pypi.python.org/pypi/django-simple-pagination
            :alt: Downloads
        
        .. image:: https://img.shields.io/pypi/v/django-simple-pagination.svg
            :target: https://pypi.python.org/pypi/django-simple-pagination
            :alt: Latest Release
        
        .. image:: https://landscape.io/github/MicroPyramid/django-simple-pagination/master/landscape.svg?style=flat
           :target: https://landscape.io/github/MicroPyramid/django-simple-pagination/master
           :alt: Code Health
        
        .. image:: https://img.shields.io/github/license/micropyramid/django-simple-pagination.svg
            :target: https://pypi.python.org/pypi/django-simple-pagination/
        
        
        uritemplate
        ===========
        
        Documentation_ -- GitHub_ -- BitBucket_ -- Travis-CI_
        
        Simple python library to deal with `URI Templates`_. The API looks like
        
        .. code-block:: python
        
            from uritemplate import URITemplate, expand
        
            # NOTE: URI params must be strings not integers
        
            gist_uri = 'https://api.github.com/users/sigmavirus24/gists{/gist_id}'
            t = URITemplate(gist_uri)
            print(t.expand(gist_id='123456'))
            # => https://api.github.com/users/sigmavirus24/gists/123456
        
            # or
            print(expand(gist_uri, gist_id='123456'))
        
            # also
            t.expand({'gist_id': '123456'})
            print(expand(gist_uri, {'gist_id': '123456'}))
        
        Where it might be useful to have a class
        
        .. code-block:: python
        
            import requests
        
            class GitHubUser(object):
                url = URITemplate('https://api.github.com/user{/login}')
                def __init__(self, name):
                    self.api_url = url.expand(login=name)
                    response = requests.get(self.api_url)
                    if response.status_code == 200:
                        self.__dict__.update(response.json())
        
        When the module containing this class is loaded, ``GitHubUser.url`` is 
        evaluated and so the template is created once. It's often hard to notice in 
        Python, but object creation can consume a great deal of time and so can the 
        ``re`` module which uritemplate relies on. Constructing the object once should 
        reduce the amount of time your code takes to run.
        
        Installing
        ----------
        
        ::
        
            pip install uritemplate.py
        
        License
        -------
        
        Modified BSD license_
        
        
        .. _Documentation: http://uritemplate.rtfd.org/
        .. _GitHub: https://github.com/sigmavirus24/uritemplate
        .. _BitBucket: https://bitbucket.org/icordasc/uritemplate
        .. _Travis-CI: https://travis-ci.org/sigmavirus24/uritemplate
        .. _URI Templates: http://tools.ietf.org/html/rfc6570
        .. _license: https://github.com/sigmavirus24/uritemplate/blob/master/LICENSE
Platform: UNKNOWN
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: Operating System :: OS Independent
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
